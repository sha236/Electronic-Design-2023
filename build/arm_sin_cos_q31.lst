ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"arm_sin_cos_q31.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "DSP/Source/ControllerFunctions/arm_sin_cos_q31.c"
  20              		.section	.text.arm_sin_cos_q31,"ax",%progbits
  21              		.align	1
  22              		.global	arm_sin_cos_q31
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	arm_sin_cos_q31:
  28              	.LVL0:
  29              	.LFB139:
   1:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** /* ----------------------------------------------------------------------
   2:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * Project:      CMSIS DSP Library
   3:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * Title:        arm_sin_cos_q31.c
   4:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * Description:  Cosine & Sine calculation for Q31 values
   5:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  *
   6:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * $Date:        27. January 2017
   7:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * $Revision:    V.1.5.1
   8:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  *
   9:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * Target Processor: Cortex-M cores
  10:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * -------------------------------------------------------------------- */
  11:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** /*
  12:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  *
  14:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  *
  16:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * not use this file except in compliance with the License.
  18:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * You may obtain a copy of the License at
  19:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  *
  20:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  *
  22:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * See the License for the specific language governing permissions and
  26:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * limitations under the License.
  27:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  */
  28:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** 
  29:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** #include "arm_math.h"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s 			page 2


  30:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** #include "arm_common_tables.h"
  31:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** 
  32:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** /**
  33:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * @ingroup groupController
  34:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  */
  35:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** 
  36:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  /**
  37:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * @addtogroup SinCos
  38:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * @{
  39:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  */
  40:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** 
  41:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** /**
  42:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * @brief  Q31 sin_cos function.
  43:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * @param[in]  theta    scaled input value in degrees
  44:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * @param[out] *pSinVal points to the processed sine output.
  45:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * @param[out] *pCosVal points to the processed cosine output.
  46:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * @return none.
  47:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  *
  48:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  * The Q31 input value is in the range [-1 0.999999] and is mapped to a degree value in the range [
  49:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  *
  50:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****  */
  51:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** 
  52:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** void arm_sin_cos_q31(
  53:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   q31_t theta,
  54:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   q31_t * pSinVal,
  55:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   q31_t * pCosVal)
  56:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** {
  30              		.loc 1 56 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 24
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 56 1 is_stmt 0 view .LVU1
  35 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 36
  38              		.cfi_offset 4, -36
  39              		.cfi_offset 5, -32
  40              		.cfi_offset 6, -28
  41              		.cfi_offset 7, -24
  42              		.cfi_offset 8, -20
  43              		.cfi_offset 9, -16
  44              		.cfi_offset 10, -12
  45              		.cfi_offset 11, -8
  46              		.cfi_offset 14, -4
  47 0004 87B0     		sub	sp, sp, #28
  48              	.LCFI1:
  49              		.cfi_def_cfa_offset 64
  50 0006 0491     		str	r1, [sp, #16]
  51 0008 0592     		str	r2, [sp, #20]
  57:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   q31_t fract;                                 /* Temporary variables for input, output */
  52              		.loc 1 57 3 is_stmt 1 view .LVU2
  58:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   uint16_t indexS, indexC;                     /* Index variable */
  53              		.loc 1 58 3 view .LVU3
  59:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   q31_t f1, f2, d1, d2;                        /* Two nearest output values */
  54              		.loc 1 59 3 view .LVU4
  60:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   q31_t Dn, Df;
  55              		.loc 1 60 3 view .LVU5
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s 			page 3


  61:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   q63_t temp;
  56              		.loc 1 61 3 view .LVU6
  62:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** 
  63:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   /* Calculate the nearest index */
  64:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   indexS = (uint32_t)theta >> CONTROLLER_Q31_SHIFT;
  57              		.loc 1 64 3 view .LVU7
  58              		.loc 1 64 28 is_stmt 0 view .LVU8
  59 000a C20D     		lsrs	r2, r0, #23
  60              	.LVL1:
  61              		.loc 1 64 10 view .LVU9
  62 000c 1346     		mov	r3, r2
  63              	.LVL2:
  65:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   indexC = (indexS + 128) & 0x1ff;
  64              		.loc 1 65 3 is_stmt 1 view .LVU10
  65              		.loc 1 65 20 is_stmt 0 view .LVU11
  66 000e 8033     		adds	r3, r3, #128
  67              		.loc 1 65 10 view .LVU12
  68 0010 C3F30803 		ubfx	r3, r3, #0, #9
  69              	.LVL3:
  66:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** 
  67:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   /* Calculation of fractional value */
  68:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   fract = (theta - (indexS << CONTROLLER_Q31_SHIFT)) << 8;
  70              		.loc 1 68 3 is_stmt 1 view .LVU13
  71              		.loc 1 68 9 is_stmt 0 view .LVU14
  72 0014 C0F31600 		ubfx	r0, r0, #0, #23
  73              	.LVL4:
  74              		.loc 1 68 9 view .LVU15
  75 0018 0002     		lsls	r0, r0, #8
  76              	.LVL5:
  69:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** 
  70:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   /* Read two nearest values of input value from the cos & sin tables */
  71:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   f1 = sinTable_q31[indexC+0];
  77              		.loc 1 71 3 is_stmt 1 view .LVU16
  78              		.loc 1 71 6 is_stmt 0 view .LVU17
  79 001a 6C4C     		ldr	r4, .L5
  80 001c 54F82310 		ldr	r1, [r4, r3, lsl #2]
  81              	.LVL6:
  82              		.loc 1 71 6 view .LVU18
  83 0020 0F46     		mov	r7, r1
  84              	.LVL7:
  72:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   f2 = sinTable_q31[indexC+1];
  85              		.loc 1 72 3 is_stmt 1 view .LVU19
  86              		.loc 1 72 27 is_stmt 0 view .LVU20
  87 0022 0133     		adds	r3, r3, #1
  88              	.LVL8:
  89              		.loc 1 72 6 view .LVU21
  90 0024 54F82350 		ldr	r5, [r4, r3, lsl #2]
  91              	.LVL9:
  73:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   d1 = -sinTable_q31[indexS+0];
  92              		.loc 1 73 3 is_stmt 1 view .LVU22
  93              		.loc 1 73 21 is_stmt 0 view .LVU23
  94 0028 54F82230 		ldr	r3, [r4, r2, lsl #2]
  95              	.LVL10:
  96              		.loc 1 73 21 view .LVU24
  97 002c 0193     		str	r3, [sp, #4]
  98              		.loc 1 73 6 view .LVU25
  99 002e 5942     		rsbs	r1, r3, #0
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s 			page 4


 100              	.LVL11:
  74:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   d2 = -sinTable_q31[indexS+1];
 101              		.loc 1 74 3 is_stmt 1 view .LVU26
 102              		.loc 1 74 28 is_stmt 0 view .LVU27
 103 0030 0132     		adds	r2, r2, #1
 104              	.LVL12:
 105              		.loc 1 74 21 view .LVU28
 106 0032 54F82220 		ldr	r2, [r4, r2, lsl #2]
 107              	.LVL13:
 108              		.loc 1 74 21 view .LVU29
 109 0036 0292     		str	r2, [sp, #8]
 110              		.loc 1 74 6 view .LVU30
 111 0038 5642     		rsbs	r6, r2, #0
 112              	.LVL14:
  75:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** 
  76:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   Dn = 0x1921FB5; // delta between the two points (fixed), in this case 2*pi/FAST_MATH_TABLE_SIZE
 113              		.loc 1 76 3 is_stmt 1 view .LVU31
  77:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   Df = f2 - f1; // delta between the values of the functions
 114              		.loc 1 77 3 view .LVU32
 115              		.loc 1 77 6 is_stmt 0 view .LVU33
 116 003a 0397     		str	r7, [sp, #12]
 117 003c A5EB070B 		sub	fp, r5, r7
 118              	.LVL15:
  78:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   temp = Dn*((q63_t)d1 + d2);
 119              		.loc 1 78 3 is_stmt 1 view .LVU34
 120              		.loc 1 78 14 is_stmt 0 view .LVU35
 121 0040 4FEAE178 		asr	r8, r1, #31
 122              		.loc 1 78 24 view .LVU36
 123 0044 4FEAE679 		asr	r9, r6, #31
 124 0048 8B19     		adds	r3, r1, r6
 125 004a 49EBE172 		adc	r2, r9, r1, asr #31
 126              		.loc 1 78 8 view .LVU37
 127 004e 604C     		ldr	r4, .L5+4
 128 0050 A3FB04C3 		umull	ip, r3, r3, r4
 129 0054 04FB0233 		mla	r3, r4, r2, r3
 130              	.LVL16:
  79:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   temp = temp - ((q63_t)Df << 32);
 131              		.loc 1 79 3 is_stmt 1 view .LVU38
 132              		.loc 1 79 18 is_stmt 0 view .LVU39
 133 0058 4FEAEB7E 		asr	lr, fp, #31
 134              		.loc 1 79 8 view .LVU40
 135 005c A3EB0B03 		sub	r3, r3, fp
 136              	.LVL17:
  80:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   temp = (q63_t)fract*(temp >> 31);
 137              		.loc 1 80 3 is_stmt 1 view .LVU41
 138              		.loc 1 80 10 is_stmt 0 view .LVU42
 139 0060 0246     		mov	r2, r0
 140              		.loc 1 80 29 view .LVU43
 141 0062 4FEADC7C 		lsr	ip, ip, #31
 142              	.LVL18:
 143              		.loc 1 80 29 view .LVU44
 144 0066 4CEA430C 		orr	ip, ip, r3, lsl #1
 145 006a DB17     		asrs	r3, r3, #31
 146              	.LVL19:
 147              		.loc 1 80 8 view .LVU45
 148 006c A0FB0C7C 		umull	r7, ip, r0, ip
 149              	.LVL20:
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s 			page 5


 150              		.loc 1 80 8 view .LVU46
 151 0070 00FB03CC 		mla	ip, r0, r3, ip
 152              	.LVL21:
  81:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   temp = temp + ((3*(q63_t)Df << 31) - (d2 + ((q63_t)d1 << 1))*Dn);
 153              		.loc 1 81 3 is_stmt 1 view .LVU47
 154              		.loc 1 81 20 is_stmt 0 view .LVU48
 155 0074 1BEB0B03 		adds	r3, fp, fp
 156 0078 4EEB0E0A 		adc	r10, lr, lr
 157 007c 13EB0B03 		adds	r3, r3, fp
 158 0080 4EEB0A0E 		adc	lr, lr, r10
 159              		.loc 1 81 31 view .LVU49
 160 0084 4FEACE7E 		lsl	lr, lr, #31
 161 0088 4EEA530E 		orr	lr, lr, r3, lsr #1
 162 008c DB07     		lsls	r3, r3, #31
 163              		.loc 1 81 57 view .LVU50
 164 008e 11EB010A 		adds	r10, r1, r1
 165 0092 48EB080B 		adc	fp, r8, r8
 166              	.LVL22:
 167              		.loc 1 81 44 view .LVU51
 168 0096 16EB0A0A 		adds	r10, r6, r10
 169 009a 49EB0B0B 		adc	fp, r9, fp
 170              		.loc 1 81 63 view .LVU52
 171 009e AAFB04A6 		umull	r10, r6, r10, r4
 172              	.LVL23:
 173              		.loc 1 81 63 view .LVU53
 174 00a2 04FB0B66 		mla	r6, r4, fp, r6
 175              		.loc 1 81 38 view .LVU54
 176 00a6 B3EB0A03 		subs	r3, r3, r10
 177 00aa 6EEB060E 		sbc	lr, lr, r6
 178              		.loc 1 81 8 view .LVU55
 179 00ae DB19     		adds	r3, r3, r7
 180 00b0 4CEB0E0C 		adc	ip, ip, lr
 181              	.LVL24:
  82:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   temp = (q63_t)fract*(temp >> 31);
 182              		.loc 1 82 3 is_stmt 1 view .LVU56
 183              		.loc 1 82 29 is_stmt 0 view .LVU57
 184 00b4 DB0F     		lsrs	r3, r3, #31
 185              	.LVL25:
 186              		.loc 1 82 29 view .LVU58
 187 00b6 43EA4C03 		orr	r3, r3, ip, lsl #1
 188 00ba 4FEAEC7C 		asr	ip, ip, #31
 189              	.LVL26:
 190              		.loc 1 82 8 view .LVU59
 191 00be A0FB03E3 		umull	lr, r3, r0, r3
 192              	.LVL27:
 193              		.loc 1 82 8 view .LVU60
 194 00c2 00FB0C33 		mla	r3, r0, ip, r3
 195              	.LVL28:
  83:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   temp = temp + (q63_t)d1*Dn;
 196              		.loc 1 83 3 is_stmt 1 view .LVU61
 197              		.loc 1 83 26 is_stmt 0 view .LVU62
 198 00c6 A1FB0461 		umull	r6, r1, r1, r4
 199              	.LVL29:
 200              		.loc 1 83 26 view .LVU63
 201 00ca 04FB0814 		mla	r4, r4, r8, r1
 202              		.loc 1 83 8 view .LVU64
 203 00ce 16EB0E01 		adds	r1, r6, lr
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s 			page 6


 204 00d2 43EB0403 		adc	r3, r3, r4
 205              	.LVL30:
  84:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   temp = (q63_t)fract*(temp >> 31);
 206              		.loc 1 84 3 is_stmt 1 view .LVU65
 207              		.loc 1 84 29 is_stmt 0 view .LVU66
 208 00d6 C90F     		lsrs	r1, r1, #31
 209              	.LVL31:
 210              		.loc 1 84 29 view .LVU67
 211 00d8 41EA4301 		orr	r1, r1, r3, lsl #1
 212 00dc DB17     		asrs	r3, r3, #31
 213              	.LVL32:
 214              		.loc 1 84 8 view .LVU68
 215 00de A0FB0114 		umull	r1, r4, r0, r1
 216              		.loc 1 84 8 view .LVU69
 217 00e2 00FB0344 		mla	r4, r0, r3, r4
 218              	.LVL33:
  85:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** 
  86:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   /* Calculation of cosine value */
  87:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   *pCosVal = clip_q63_to_q31((temp >> 31) + (q63_t)f1);
 219              		.loc 1 87 3 is_stmt 1 view .LVU70
 220              		.loc 1 87 36 is_stmt 0 view .LVU71
 221 00e6 C90F     		lsrs	r1, r1, #31
 222              	.LVL34:
 223              		.loc 1 87 36 view .LVU72
 224 00e8 41EA4401 		orr	r1, r1, r4, lsl #1
 225              		.loc 1 87 45 view .LVU73
 226 00ec 039B     		ldr	r3, [sp, #12]
 227 00ee 4FEAE378 		asr	r8, r3, #31
 228              		.loc 1 87 45 view .LVU74
 229 00f2 C146     		mov	r9, r8
 230              		.loc 1 87 14 view .LVU75
 231 00f4 C918     		adds	r1, r1, r3
 232              		.loc 1 87 14 view .LVU76
 233 00f6 48EBE474 		adc	r4, r8, r4, asr #31
 234              	.LVL35:
 235              	.LBB6:
 236              	.LBI6:
 237              		.file 2 "DSP/Inc/arm_math.h"
   1:DSP/Inc/arm_math.h **** /******************************************************************************
   2:DSP/Inc/arm_math.h ****  * @file     arm_math.h
   3:DSP/Inc/arm_math.h ****  * @brief    Public header file for CMSIS DSP LibraryU
   4:DSP/Inc/arm_math.h ****  * @version  V1.5.3
   5:DSP/Inc/arm_math.h ****  * @date     10. January 2018
   6:DSP/Inc/arm_math.h ****  ******************************************************************************/
   7:DSP/Inc/arm_math.h **** /*
   8:DSP/Inc/arm_math.h ****  * Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved.
   9:DSP/Inc/arm_math.h ****  *
  10:DSP/Inc/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  11:DSP/Inc/arm_math.h ****  *
  12:DSP/Inc/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:DSP/Inc/arm_math.h ****  * not use this file except in compliance with the License.
  14:DSP/Inc/arm_math.h ****  * You may obtain a copy of the License at
  15:DSP/Inc/arm_math.h ****  *
  16:DSP/Inc/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:DSP/Inc/arm_math.h ****  *
  18:DSP/Inc/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  19:DSP/Inc/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s 			page 7


  20:DSP/Inc/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:DSP/Inc/arm_math.h ****  * See the License for the specific language governing permissions and
  22:DSP/Inc/arm_math.h ****  * limitations under the License.
  23:DSP/Inc/arm_math.h ****  */
  24:DSP/Inc/arm_math.h **** 
  25:DSP/Inc/arm_math.h **** /**
  26:DSP/Inc/arm_math.h ****    \mainpage CMSIS DSP Software Library
  27:DSP/Inc/arm_math.h ****    *
  28:DSP/Inc/arm_math.h ****    * Introduction
  29:DSP/Inc/arm_math.h ****    * ------------
  30:DSP/Inc/arm_math.h ****    *
  31:DSP/Inc/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  32:DSP/Inc/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  33:DSP/Inc/arm_math.h ****    *
  34:DSP/Inc/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  35:DSP/Inc/arm_math.h ****    * - Basic math functions
  36:DSP/Inc/arm_math.h ****    * - Fast math functions
  37:DSP/Inc/arm_math.h ****    * - Complex math functions
  38:DSP/Inc/arm_math.h ****    * - Filters
  39:DSP/Inc/arm_math.h ****    * - Matrix functions
  40:DSP/Inc/arm_math.h ****    * - Transforms
  41:DSP/Inc/arm_math.h ****    * - Motor control functions
  42:DSP/Inc/arm_math.h ****    * - Statistical functions
  43:DSP/Inc/arm_math.h ****    * - Support functions
  44:DSP/Inc/arm_math.h ****    * - Interpolation functions
  45:DSP/Inc/arm_math.h ****    *
  46:DSP/Inc/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  47:DSP/Inc/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  48:DSP/Inc/arm_math.h ****    *
  49:DSP/Inc/arm_math.h ****    * Using the Library
  50:DSP/Inc/arm_math.h ****    * ------------
  51:DSP/Inc/arm_math.h ****    *
  52:DSP/Inc/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  53:DSP/Inc/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  54:DSP/Inc/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  55:DSP/Inc/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  56:DSP/Inc/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  57:DSP/Inc/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  58:DSP/Inc/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  59:DSP/Inc/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  60:DSP/Inc/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  61:DSP/Inc/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  62:DSP/Inc/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  63:DSP/Inc/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  64:DSP/Inc/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  65:DSP/Inc/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  66:DSP/Inc/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  67:DSP/Inc/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (Armv8-M Baseline, Little endian)
  68:DSP/Inc/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (Armv8-M Mainline, Little endian)
  69:DSP/Inc/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (Armv8-M Mainline, Little endian, Single Precision Floating Point 
  70:DSP/Inc/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (Armv8-M Mainline, Little endian, DSP instructions)
  71:DSP/Inc/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (Armv8-M Mainline, Little endian, DSP instructions, Single Precis
  72:DSP/Inc/arm_math.h ****    *
  73:DSP/Inc/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  74:DSP/Inc/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  75:DSP/Inc/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  76:DSP/Inc/arm_math.h ****    * Define the appropriate preprocessor macro ARM_MATH_CM7 or ARM_MATH_CM4 or ARM_MATH_CM3 or
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s 			page 8


  77:DSP/Inc/arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  78:DSP/Inc/arm_math.h ****    * For Armv8-M cores define preprocessor macro ARM_MATH_ARMV8MBL or ARM_MATH_ARMV8MML.
  79:DSP/Inc/arm_math.h ****    * Set preprocessor macro __DSP_PRESENT if Armv8-M Mainline core supports DSP instructions.
  80:DSP/Inc/arm_math.h ****    * 
  81:DSP/Inc/arm_math.h ****    *
  82:DSP/Inc/arm_math.h ****    * Examples
  83:DSP/Inc/arm_math.h ****    * --------
  84:DSP/Inc/arm_math.h ****    *
  85:DSP/Inc/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  86:DSP/Inc/arm_math.h ****    *
  87:DSP/Inc/arm_math.h ****    * Toolchain Support
  88:DSP/Inc/arm_math.h ****    * ------------
  89:DSP/Inc/arm_math.h ****    *
  90:DSP/Inc/arm_math.h ****    * The library has been developed and tested with MDK version 5.14.0.0
  91:DSP/Inc/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  92:DSP/Inc/arm_math.h ****    *
  93:DSP/Inc/arm_math.h ****    * Building the Library
  94:DSP/Inc/arm_math.h ****    * ------------
  95:DSP/Inc/arm_math.h ****    *
  96:DSP/Inc/arm_math.h ****    * The library installer contains a project file to rebuild libraries on MDK toolchain in the <co
  97:DSP/Inc/arm_math.h ****    * - arm_cortexM_math.uvprojx
  98:DSP/Inc/arm_math.h ****    *
  99:DSP/Inc/arm_math.h ****    *
 100:DSP/Inc/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 101:DSP/Inc/arm_math.h ****    *
 102:DSP/Inc/arm_math.h ****    * Preprocessor Macros
 103:DSP/Inc/arm_math.h ****    * ------------
 104:DSP/Inc/arm_math.h ****    *
 105:DSP/Inc/arm_math.h ****    * Each library project have different preprocessor macros.
 106:DSP/Inc/arm_math.h ****    *
 107:DSP/Inc/arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 108:DSP/Inc/arm_math.h ****    *
 109:DSP/Inc/arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 110:DSP/Inc/arm_math.h ****    *
 111:DSP/Inc/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 112:DSP/Inc/arm_math.h ****    *
 113:DSP/Inc/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 114:DSP/Inc/arm_math.h ****    *
 115:DSP/Inc/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 116:DSP/Inc/arm_math.h ****    *
 117:DSP/Inc/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 118:DSP/Inc/arm_math.h ****    *
 119:DSP/Inc/arm_math.h ****    * - ARM_MATH_ROUNDING:
 120:DSP/Inc/arm_math.h ****    *
 121:DSP/Inc/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 122:DSP/Inc/arm_math.h ****    *
 123:DSP/Inc/arm_math.h ****    * - ARM_MATH_CMx:
 124:DSP/Inc/arm_math.h ****    *
 125:DSP/Inc/arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 126:DSP/Inc/arm_math.h ****    * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 127:DSP/Inc/arm_math.h ****    * ARM_MATH_CM7 for building the library on cortex-M7.
 128:DSP/Inc/arm_math.h ****    *
 129:DSP/Inc/arm_math.h ****    * - ARM_MATH_ARMV8MxL:
 130:DSP/Inc/arm_math.h ****    *
 131:DSP/Inc/arm_math.h ****    * Define macro ARM_MATH_ARMV8MBL for building the library on Armv8-M Baseline target, ARM_MATH_A
 132:DSP/Inc/arm_math.h ****    * on Armv8-M Mainline target.
 133:DSP/Inc/arm_math.h ****    *
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s 			page 9


 134:DSP/Inc/arm_math.h ****    * - __FPU_PRESENT:
 135:DSP/Inc/arm_math.h ****    *
 136:DSP/Inc/arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 137:DSP/Inc/arm_math.h ****    *
 138:DSP/Inc/arm_math.h ****    * - __DSP_PRESENT:
 139:DSP/Inc/arm_math.h ****    *
 140:DSP/Inc/arm_math.h ****    * Initialize macro __DSP_PRESENT = 1 when Armv8-M Mainline core supports DSP instructions.
 141:DSP/Inc/arm_math.h ****    *
 142:DSP/Inc/arm_math.h ****    * <hr>
 143:DSP/Inc/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 144:DSP/Inc/arm_math.h ****    * -----------------------------
 145:DSP/Inc/arm_math.h ****    *
 146:DSP/Inc/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 147:DSP/Inc/arm_math.h ****    * |File/Folder                   |Content                                                       
 148:DSP/Inc/arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 149:DSP/Inc/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 150:DSP/Inc/arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 151:DSP/Inc/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 152:DSP/Inc/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 153:DSP/Inc/arm_math.h ****    *
 154:DSP/Inc/arm_math.h ****    * <hr>
 155:DSP/Inc/arm_math.h ****    * Revision History of CMSIS-DSP
 156:DSP/Inc/arm_math.h ****    * ------------
 157:DSP/Inc/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 158:DSP/Inc/arm_math.h ****    *
 159:DSP/Inc/arm_math.h ****    * Copyright Notice
 160:DSP/Inc/arm_math.h ****    * ------------
 161:DSP/Inc/arm_math.h ****    *
 162:DSP/Inc/arm_math.h ****    * Copyright (C) 2010-2015 Arm Limited. All rights reserved.
 163:DSP/Inc/arm_math.h ****    */
 164:DSP/Inc/arm_math.h **** 
 165:DSP/Inc/arm_math.h **** 
 166:DSP/Inc/arm_math.h **** /**
 167:DSP/Inc/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 168:DSP/Inc/arm_math.h ****  */
 169:DSP/Inc/arm_math.h **** 
 170:DSP/Inc/arm_math.h **** /**
 171:DSP/Inc/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 172:DSP/Inc/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 173:DSP/Inc/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 174:DSP/Inc/arm_math.h ****  * operate on individual values and not arrays.
 175:DSP/Inc/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 176:DSP/Inc/arm_math.h ****  *
 177:DSP/Inc/arm_math.h ****  */
 178:DSP/Inc/arm_math.h **** 
 179:DSP/Inc/arm_math.h **** /**
 180:DSP/Inc/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 181:DSP/Inc/arm_math.h ****  * This set of functions operates on complex data vectors.
 182:DSP/Inc/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 183:DSP/Inc/arm_math.h ****  * (real, imag, real, imag, ...).
 184:DSP/Inc/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 185:DSP/Inc/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 186:DSP/Inc/arm_math.h ****  * real values.
 187:DSP/Inc/arm_math.h ****  */
 188:DSP/Inc/arm_math.h **** 
 189:DSP/Inc/arm_math.h **** /**
 190:DSP/Inc/arm_math.h ****  * @defgroup groupFilters Filtering Functions
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s 			page 10


 191:DSP/Inc/arm_math.h ****  */
 192:DSP/Inc/arm_math.h **** 
 193:DSP/Inc/arm_math.h **** /**
 194:DSP/Inc/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 195:DSP/Inc/arm_math.h ****  *
 196:DSP/Inc/arm_math.h ****  * This set of functions provides basic matrix math operations.
 197:DSP/Inc/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 198:DSP/Inc/arm_math.h ****  * the type
 199:DSP/Inc/arm_math.h ****  * definition for the floating-point matrix structure is shown
 200:DSP/Inc/arm_math.h ****  * below:
 201:DSP/Inc/arm_math.h ****  * <pre>
 202:DSP/Inc/arm_math.h ****  *     typedef struct
 203:DSP/Inc/arm_math.h ****  *     {
 204:DSP/Inc/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 205:DSP/Inc/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 206:DSP/Inc/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 207:DSP/Inc/arm_math.h ****  *     } arm_matrix_instance_f32;
 208:DSP/Inc/arm_math.h ****  * </pre>
 209:DSP/Inc/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 210:DSP/Inc/arm_math.h ****  *
 211:DSP/Inc/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 212:DSP/Inc/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 213:DSP/Inc/arm_math.h ****  * and the values are arranged in row order.  That is, the
 214:DSP/Inc/arm_math.h ****  * matrix element (i, j) is stored at:
 215:DSP/Inc/arm_math.h ****  * <pre>
 216:DSP/Inc/arm_math.h ****  *     pData[i*numCols + j]
 217:DSP/Inc/arm_math.h ****  * </pre>
 218:DSP/Inc/arm_math.h ****  *
 219:DSP/Inc/arm_math.h ****  * \par Init Functions
 220:DSP/Inc/arm_math.h ****  * There is an associated initialization function for each type of matrix
 221:DSP/Inc/arm_math.h ****  * data structure.
 222:DSP/Inc/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 223:DSP/Inc/arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 224:DSP/Inc/arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 225:DSP/Inc/arm_math.h ****  *
 226:DSP/Inc/arm_math.h ****  * \par
 227:DSP/Inc/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 228:DSP/Inc/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 229:DSP/Inc/arm_math.h ****  * To place the instance structure in a const data
 230:DSP/Inc/arm_math.h ****  * section, manually initialize the data structure.  For example:
 231:DSP/Inc/arm_math.h ****  * <pre>
 232:DSP/Inc/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 233:DSP/Inc/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 234:DSP/Inc/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 235:DSP/Inc/arm_math.h ****  * </pre>
 236:DSP/Inc/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 237:DSP/Inc/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 238:DSP/Inc/arm_math.h ****  * data array.
 239:DSP/Inc/arm_math.h ****  *
 240:DSP/Inc/arm_math.h ****  * \par Size Checking
 241:DSP/Inc/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 242:DSP/Inc/arm_math.h ****  * output matrices. For example, the matrix addition function verifies that the
 243:DSP/Inc/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 244:DSP/Inc/arm_math.h ****  * columns. If the size check fails the functions return:
 245:DSP/Inc/arm_math.h ****  * <pre>
 246:DSP/Inc/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 247:DSP/Inc/arm_math.h ****  * </pre>
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s 			page 11


 248:DSP/Inc/arm_math.h ****  * Otherwise the functions return
 249:DSP/Inc/arm_math.h ****  * <pre>
 250:DSP/Inc/arm_math.h ****  *     ARM_MATH_SUCCESS
 251:DSP/Inc/arm_math.h ****  * </pre>
 252:DSP/Inc/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 253:DSP/Inc/arm_math.h ****  * The matrix size checking is enabled via the \#define
 254:DSP/Inc/arm_math.h ****  * <pre>
 255:DSP/Inc/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 256:DSP/Inc/arm_math.h ****  * </pre>
 257:DSP/Inc/arm_math.h ****  * within the library project settings.  By default this macro is defined
 258:DSP/Inc/arm_math.h ****  * and size checking is enabled. By changing the project settings and
 259:DSP/Inc/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 260:DSP/Inc/arm_math.h ****  * run a bit faster. With size checking disabled the functions always
 261:DSP/Inc/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 262:DSP/Inc/arm_math.h ****  */
 263:DSP/Inc/arm_math.h **** 
 264:DSP/Inc/arm_math.h **** /**
 265:DSP/Inc/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 266:DSP/Inc/arm_math.h ****  */
 267:DSP/Inc/arm_math.h **** 
 268:DSP/Inc/arm_math.h **** /**
 269:DSP/Inc/arm_math.h ****  * @defgroup groupController Controller Functions
 270:DSP/Inc/arm_math.h ****  */
 271:DSP/Inc/arm_math.h **** 
 272:DSP/Inc/arm_math.h **** /**
 273:DSP/Inc/arm_math.h ****  * @defgroup groupStats Statistics Functions
 274:DSP/Inc/arm_math.h ****  */
 275:DSP/Inc/arm_math.h **** /**
 276:DSP/Inc/arm_math.h ****  * @defgroup groupSupport Support Functions
 277:DSP/Inc/arm_math.h ****  */
 278:DSP/Inc/arm_math.h **** 
 279:DSP/Inc/arm_math.h **** /**
 280:DSP/Inc/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 281:DSP/Inc/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 282:DSP/Inc/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 283:DSP/Inc/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 284:DSP/Inc/arm_math.h ****  */
 285:DSP/Inc/arm_math.h **** 
 286:DSP/Inc/arm_math.h **** /**
 287:DSP/Inc/arm_math.h ****  * @defgroup groupExamples Examples
 288:DSP/Inc/arm_math.h ****  */
 289:DSP/Inc/arm_math.h **** #ifndef _ARM_MATH_H
 290:DSP/Inc/arm_math.h **** #define _ARM_MATH_H
 291:DSP/Inc/arm_math.h **** 
 292:DSP/Inc/arm_math.h **** /* Compiler specific diagnostic adjustment */
 293:DSP/Inc/arm_math.h **** #if   defined ( __CC_ARM )
 294:DSP/Inc/arm_math.h **** 
 295:DSP/Inc/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 296:DSP/Inc/arm_math.h **** 
 297:DSP/Inc/arm_math.h **** #elif defined ( __GNUC__ )
 298:DSP/Inc/arm_math.h **** #pragma GCC diagnostic push
 299:DSP/Inc/arm_math.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
 300:DSP/Inc/arm_math.h **** #pragma GCC diagnostic ignored "-Wconversion"
 301:DSP/Inc/arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 302:DSP/Inc/arm_math.h **** 
 303:DSP/Inc/arm_math.h **** #elif defined ( __ICCARM__ )
 304:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s 			page 12


 305:DSP/Inc/arm_math.h **** #elif defined ( __TI_ARM__ )
 306:DSP/Inc/arm_math.h **** 
 307:DSP/Inc/arm_math.h **** #elif defined ( __CSMC__ )
 308:DSP/Inc/arm_math.h **** 
 309:DSP/Inc/arm_math.h **** #elif defined ( __TASKING__ )
 310:DSP/Inc/arm_math.h **** 
 311:DSP/Inc/arm_math.h **** #else
 312:DSP/Inc/arm_math.h ****   #error Unknown compiler
 313:DSP/Inc/arm_math.h **** #endif
 314:DSP/Inc/arm_math.h **** 
 315:DSP/Inc/arm_math.h **** 
 316:DSP/Inc/arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 317:DSP/Inc/arm_math.h **** 
 318:DSP/Inc/arm_math.h **** #if defined(ARM_MATH_CM7)
 319:DSP/Inc/arm_math.h ****   #include "core_cm7.h"
 320:DSP/Inc/arm_math.h ****   #define ARM_MATH_DSP
 321:DSP/Inc/arm_math.h **** #elif defined (ARM_MATH_CM4)
 322:DSP/Inc/arm_math.h ****   #include "core_cm4.h"
 323:DSP/Inc/arm_math.h ****   #define ARM_MATH_DSP
 324:DSP/Inc/arm_math.h **** #elif defined (ARM_MATH_CM3)
 325:DSP/Inc/arm_math.h ****   #include "core_cm3.h"
 326:DSP/Inc/arm_math.h **** #elif defined (ARM_MATH_CM0)
 327:DSP/Inc/arm_math.h ****   #include "core_cm0.h"
 328:DSP/Inc/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 329:DSP/Inc/arm_math.h **** #elif defined (ARM_MATH_CM0PLUS)
 330:DSP/Inc/arm_math.h ****   #include "core_cm0plus.h"
 331:DSP/Inc/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 332:DSP/Inc/arm_math.h **** #elif defined (ARM_MATH_ARMV8MBL)
 333:DSP/Inc/arm_math.h ****   #include "core_armv8mbl.h"
 334:DSP/Inc/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 335:DSP/Inc/arm_math.h **** #elif defined (ARM_MATH_ARMV8MML)
 336:DSP/Inc/arm_math.h ****   #include "core_armv8mml.h"
 337:DSP/Inc/arm_math.h ****   #if (defined (__DSP_PRESENT) && (__DSP_PRESENT == 1))
 338:DSP/Inc/arm_math.h ****     #define ARM_MATH_DSP
 339:DSP/Inc/arm_math.h ****   #endif
 340:DSP/Inc/arm_math.h **** #else
 341:DSP/Inc/arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 342:DSP/Inc/arm_math.h **** #endif
 343:DSP/Inc/arm_math.h **** 
 344:DSP/Inc/arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 345:DSP/Inc/arm_math.h **** #include "string.h"
 346:DSP/Inc/arm_math.h **** #include "math.h"
 347:DSP/Inc/arm_math.h **** #ifdef   __cplusplus
 348:DSP/Inc/arm_math.h **** extern "C"
 349:DSP/Inc/arm_math.h **** {
 350:DSP/Inc/arm_math.h **** #endif
 351:DSP/Inc/arm_math.h **** 
 352:DSP/Inc/arm_math.h **** 
 353:DSP/Inc/arm_math.h ****   /**
 354:DSP/Inc/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 355:DSP/Inc/arm_math.h ****    */
 356:DSP/Inc/arm_math.h **** 
 357:DSP/Inc/arm_math.h **** #define DELTA_Q31          (0x100)
 358:DSP/Inc/arm_math.h **** #define DELTA_Q15          0x5
 359:DSP/Inc/arm_math.h **** #define INDEX_MASK         0x0000003F
 360:DSP/Inc/arm_math.h **** #ifndef PI
 361:DSP/Inc/arm_math.h ****   #define PI               3.14159265358979f
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s 			page 13


 362:DSP/Inc/arm_math.h **** #endif
 363:DSP/Inc/arm_math.h **** 
 364:DSP/Inc/arm_math.h ****   /**
 365:DSP/Inc/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 366:DSP/Inc/arm_math.h ****    */
 367:DSP/Inc/arm_math.h **** 
 368:DSP/Inc/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 369:DSP/Inc/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 370:DSP/Inc/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 371:DSP/Inc/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 372:DSP/Inc/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 373:DSP/Inc/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 374:DSP/Inc/arm_math.h **** 
 375:DSP/Inc/arm_math.h ****   /**
 376:DSP/Inc/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 377:DSP/Inc/arm_math.h ****    */
 378:DSP/Inc/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 379:DSP/Inc/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 380:DSP/Inc/arm_math.h **** #define INPUT_SPACING         0xB60B61
 381:DSP/Inc/arm_math.h **** 
 382:DSP/Inc/arm_math.h ****   /**
 383:DSP/Inc/arm_math.h ****    * @brief Macro for Unaligned Support
 384:DSP/Inc/arm_math.h ****    */
 385:DSP/Inc/arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 386:DSP/Inc/arm_math.h ****     #define ALIGN4
 387:DSP/Inc/arm_math.h **** #else
 388:DSP/Inc/arm_math.h ****   #if defined  (__GNUC__)
 389:DSP/Inc/arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 390:DSP/Inc/arm_math.h ****   #else
 391:DSP/Inc/arm_math.h ****     #define ALIGN4 __align(4)
 392:DSP/Inc/arm_math.h ****   #endif
 393:DSP/Inc/arm_math.h **** #endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 394:DSP/Inc/arm_math.h **** 
 395:DSP/Inc/arm_math.h ****   /**
 396:DSP/Inc/arm_math.h ****    * @brief Error status returned by some functions in the library.
 397:DSP/Inc/arm_math.h ****    */
 398:DSP/Inc/arm_math.h **** 
 399:DSP/Inc/arm_math.h ****   typedef enum
 400:DSP/Inc/arm_math.h ****   {
 401:DSP/Inc/arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 402:DSP/Inc/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 403:DSP/Inc/arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 404:DSP/Inc/arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 405:DSP/Inc/arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 406:DSP/Inc/arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 407:DSP/Inc/arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 408:DSP/Inc/arm_math.h ****   } arm_status;
 409:DSP/Inc/arm_math.h **** 
 410:DSP/Inc/arm_math.h ****   /**
 411:DSP/Inc/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 412:DSP/Inc/arm_math.h ****    */
 413:DSP/Inc/arm_math.h ****   typedef int8_t q7_t;
 414:DSP/Inc/arm_math.h **** 
 415:DSP/Inc/arm_math.h ****   /**
 416:DSP/Inc/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 417:DSP/Inc/arm_math.h ****    */
 418:DSP/Inc/arm_math.h ****   typedef int16_t q15_t;
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s 			page 14


 419:DSP/Inc/arm_math.h **** 
 420:DSP/Inc/arm_math.h ****   /**
 421:DSP/Inc/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 422:DSP/Inc/arm_math.h ****    */
 423:DSP/Inc/arm_math.h ****   typedef int32_t q31_t;
 424:DSP/Inc/arm_math.h **** 
 425:DSP/Inc/arm_math.h ****   /**
 426:DSP/Inc/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 427:DSP/Inc/arm_math.h ****    */
 428:DSP/Inc/arm_math.h ****   typedef int64_t q63_t;
 429:DSP/Inc/arm_math.h **** 
 430:DSP/Inc/arm_math.h ****   /**
 431:DSP/Inc/arm_math.h ****    * @brief 32-bit floating-point type definition.
 432:DSP/Inc/arm_math.h ****    */
 433:DSP/Inc/arm_math.h ****   typedef float float32_t;
 434:DSP/Inc/arm_math.h **** 
 435:DSP/Inc/arm_math.h ****   /**
 436:DSP/Inc/arm_math.h ****    * @brief 64-bit floating-point type definition.
 437:DSP/Inc/arm_math.h ****    */
 438:DSP/Inc/arm_math.h ****   typedef double float64_t;
 439:DSP/Inc/arm_math.h **** 
 440:DSP/Inc/arm_math.h ****   /**
 441:DSP/Inc/arm_math.h ****    * @brief definition to read/write two 16 bit values.
 442:DSP/Inc/arm_math.h ****    */
 443:DSP/Inc/arm_math.h **** #if   defined ( __CC_ARM )
 444:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 445:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 446:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 447:DSP/Inc/arm_math.h **** 
 448:DSP/Inc/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 449:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE int32_t
 450:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 451:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 452:DSP/Inc/arm_math.h **** 
 453:DSP/Inc/arm_math.h **** #elif defined ( __GNUC__ )
 454:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE int32_t
 455:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 456:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 457:DSP/Inc/arm_math.h **** 
 458:DSP/Inc/arm_math.h **** #elif defined ( __ICCARM__ )
 459:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 460:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED
 461:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE
 462:DSP/Inc/arm_math.h **** 
 463:DSP/Inc/arm_math.h **** #elif defined ( __TI_ARM__ )
 464:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE int32_t
 465:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 466:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE
 467:DSP/Inc/arm_math.h **** 
 468:DSP/Inc/arm_math.h **** #elif defined ( __CSMC__ )
 469:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE int32_t
 470:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED
 471:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE
 472:DSP/Inc/arm_math.h **** 
 473:DSP/Inc/arm_math.h **** #elif defined ( __TASKING__ )
 474:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE __unaligned int32_t
 475:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s 			page 15


 476:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE
 477:DSP/Inc/arm_math.h **** 
 478:DSP/Inc/arm_math.h **** #else
 479:DSP/Inc/arm_math.h ****   #error Unknown compiler
 480:DSP/Inc/arm_math.h **** #endif
 481:DSP/Inc/arm_math.h **** 
 482:DSP/Inc/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 483:DSP/Inc/arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 484:DSP/Inc/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 485:DSP/Inc/arm_math.h **** #define __SIMD64(addr)        (*(int64_t **) & (addr))
 486:DSP/Inc/arm_math.h **** 
 487:DSP/Inc/arm_math.h **** #if !defined (ARM_MATH_DSP)
 488:DSP/Inc/arm_math.h ****   /**
 489:DSP/Inc/arm_math.h ****    * @brief definition to pack two 16 bit values.
 490:DSP/Inc/arm_math.h ****    */
 491:DSP/Inc/arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 492:DSP/Inc/arm_math.h ****                                     (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 493:DSP/Inc/arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 494:DSP/Inc/arm_math.h ****                                     (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 495:DSP/Inc/arm_math.h **** 
 496:DSP/Inc/arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
 497:DSP/Inc/arm_math.h **** 
 498:DSP/Inc/arm_math.h ****    /**
 499:DSP/Inc/arm_math.h ****    * @brief definition to pack four 8 bit values.
 500:DSP/Inc/arm_math.h ****    */
 501:DSP/Inc/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 502:DSP/Inc/arm_math.h **** 
 503:DSP/Inc/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 504:DSP/Inc/arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 505:DSP/Inc/arm_math.h ****                                 (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 506:DSP/Inc/arm_math.h ****                                 (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 507:DSP/Inc/arm_math.h **** #else
 508:DSP/Inc/arm_math.h **** 
 509:DSP/Inc/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 510:DSP/Inc/arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 511:DSP/Inc/arm_math.h ****                                 (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 512:DSP/Inc/arm_math.h ****                                 (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 513:DSP/Inc/arm_math.h **** 
 514:DSP/Inc/arm_math.h **** #endif
 515:DSP/Inc/arm_math.h **** 
 516:DSP/Inc/arm_math.h **** 
 517:DSP/Inc/arm_math.h ****   /**
 518:DSP/Inc/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 519:DSP/Inc/arm_math.h ****    */
 520:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t clip_q63_to_q31(
 238              		.loc 2 520 38 is_stmt 1 view .LVU77
 239              	.LBB7:
 521:DSP/Inc/arm_math.h ****   q63_t x)
 522:DSP/Inc/arm_math.h ****   {
 523:DSP/Inc/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 240              		.loc 2 523 5 view .LVU78
 241              		.loc 2 523 35 is_stmt 0 view .LVU79
 242 00fa 0E46     		mov	r6, r1
 524:DSP/Inc/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 243              		.loc 2 524 44 view .LVU80
 244 00fc B4EBE17F 		cmp	r4, r1, asr #31
 245 0100 03D0     		beq	.L2
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s 			page 16


 246              		.loc 2 524 44 discriminator 1 view .LVU81
 247 0102 6FF00046 		mvn	r6, #-2147483648
 248 0106 86EAE476 		eor	r6, r6, r4, asr #31
 249              	.L2:
 250              	.LVL36:
 251              		.loc 2 524 44 discriminator 1 view .LVU82
 252              	.LBE7:
 253              	.LBE6:
 254              		.loc 1 87 12 discriminator 1 view .LVU83
 255 010a 0599     		ldr	r1, [sp, #20]
 256 010c 0E60     		str	r6, [r1]
  88:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** 
  89:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   /* Read two nearest values of input value from the cos & sin tables */
  90:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   f1 = sinTable_q31[indexS+0];
 257              		.loc 1 90 3 is_stmt 1 view .LVU84
 258              	.LVL37:
  91:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   f2 = sinTable_q31[indexS+1];
 259              		.loc 1 91 3 view .LVU85
  92:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   d1 = sinTable_q31[indexC+0];
 260              		.loc 1 92 3 view .LVU86
  93:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   d2 = sinTable_q31[indexC+1];
 261              		.loc 1 93 3 view .LVU87
  94:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** 
  95:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   Df = f2 - f1; // delta between the values of the functions
 262              		.loc 1 95 3 view .LVU88
 263              		.loc 1 95 6 is_stmt 0 view .LVU89
 264 010e 0299     		ldr	r1, [sp, #8]
 265 0110 019F     		ldr	r7, [sp, #4]
 266              		.loc 1 95 6 view .LVU90
 267 0112 CE1B     		subs	r6, r1, r7
 268              	.LVL38:
  96:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   temp = Dn*((q63_t)d1 + d2);
 269              		.loc 1 96 3 is_stmt 1 view .LVU91
 270              		.loc 1 96 24 is_stmt 0 view .LVU92
 271 0114 5919     		adds	r1, r3, r5
 272 0116 48EBE57C 		adc	ip, r8, r5, asr #31
 273              		.loc 1 96 8 view .LVU93
 274 011a DFF8B4E0 		ldr	lr, .L5+4
 275              		.loc 1 96 8 view .LVU94
 276 011e A1FB0E41 		umull	r4, r1, r1, lr
 277 0122 0EFB0C11 		mla	r1, lr, ip, r1
 278              	.LVL39:
  97:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   temp = temp - ((q63_t)Df << 32);
 279              		.loc 1 97 3 is_stmt 1 view .LVU95
 280              		.loc 1 97 18 is_stmt 0 view .LVU96
 281 0126 4FEAE67C 		asr	ip, r6, #31
 282              		.loc 1 97 8 view .LVU97
 283 012a 891B     		subs	r1, r1, r6
 284              	.LVL40:
  98:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   temp = (q63_t)fract*(temp >> 31);
 285              		.loc 1 98 3 is_stmt 1 view .LVU98
 286              		.loc 1 98 29 is_stmt 0 view .LVU99
 287 012c E40F     		lsrs	r4, r4, #31
 288              	.LVL41:
 289              		.loc 1 98 29 view .LVU100
 290 012e 44EA4104 		orr	r4, r4, r1, lsl #1
 291 0132 C917     		asrs	r1, r1, #31
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s 			page 17


 292              	.LVL42:
 293              		.loc 1 98 8 view .LVU101
 294 0134 A2FB04A4 		umull	r10, r4, r2, r4
 295 0138 00FB0144 		mla	r4, r0, r1, r4
 296              	.LVL43:
  99:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   temp = temp + ((3*(q63_t)Df << 31) - (d2 + ((q63_t)d1 << 1))*Dn);
 297              		.loc 1 99 3 is_stmt 1 view .LVU102
 298              		.loc 1 99 20 is_stmt 0 view .LVU103
 299 013c B119     		adds	r1, r6, r6
 300 013e 4CEB0C0B 		adc	fp, ip, ip
 301 0142 8919     		adds	r1, r1, r6
 302 0144 4CEB0B0C 		adc	ip, ip, fp
 303              		.loc 1 99 31 view .LVU104
 304 0148 4FEACC7C 		lsl	ip, ip, #31
 305 014c 4CEA510C 		orr	ip, ip, r1, lsr #1
 306 0150 C907     		lsls	r1, r1, #31
 307              		.loc 1 99 57 view .LVU105
 308 0152 DE18     		adds	r6, r3, r3
 309              	.LVL44:
 310              		.loc 1 99 57 view .LVU106
 311 0154 49EB0909 		adc	r9, r9, r9
 312              		.loc 1 99 44 view .LVU107
 313 0158 AE19     		adds	r6, r5, r6
 314 015a 49EBE579 		adc	r9, r9, r5, asr #31
 315              		.loc 1 99 63 view .LVU108
 316 015e A6FB0E56 		umull	r5, r6, r6, lr
 317              	.LVL45:
 318              		.loc 1 99 63 view .LVU109
 319 0162 0EFB0966 		mla	r6, lr, r9, r6
 320              		.loc 1 99 38 view .LVU110
 321 0166 491B     		subs	r1, r1, r5
 322 0168 6CEB060C 		sbc	ip, ip, r6
 323              		.loc 1 99 8 view .LVU111
 324 016c 11EB0A01 		adds	r1, r1, r10
 325 0170 44EB0C04 		adc	r4, r4, ip
 326              	.LVL46:
 100:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   temp = (q63_t)fract*(temp >> 31);
 327              		.loc 1 100 3 is_stmt 1 view .LVU112
 328              		.loc 1 100 29 is_stmt 0 view .LVU113
 329 0174 C90F     		lsrs	r1, r1, #31
 330              	.LVL47:
 331              		.loc 1 100 29 view .LVU114
 332 0176 41EA4401 		orr	r1, r1, r4, lsl #1
 333 017a E517     		asrs	r5, r4, #31
 334              	.LVL48:
 335              		.loc 1 100 8 view .LVU115
 336 017c A2FB0114 		umull	r1, r4, r2, r1
 337              	.LVL49:
 338              		.loc 1 100 8 view .LVU116
 339 0180 00FB0544 		mla	r4, r0, r5, r4
 340              	.LVL50:
 101:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   temp = temp + (q63_t)d1*Dn;
 341              		.loc 1 101 3 is_stmt 1 view .LVU117
 342              		.loc 1 101 26 is_stmt 0 view .LVU118
 343 0184 A3FB0E35 		umull	r3, r5, r3, lr
 344 0188 0EFB0855 		mla	r5, lr, r8, r5
 345              		.loc 1 101 8 view .LVU119
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s 			page 18


 346 018c 5B18     		adds	r3, r3, r1
 347 018e 44EB0501 		adc	r1, r4, r5
 348              	.LVL51:
 102:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   temp = (q63_t)fract*(temp >> 31);
 349              		.loc 1 102 3 is_stmt 1 view .LVU120
 350              		.loc 1 102 29 is_stmt 0 view .LVU121
 351 0192 DB0F     		lsrs	r3, r3, #31
 352              	.LVL52:
 353              		.loc 1 102 29 view .LVU122
 354 0194 43EA4103 		orr	r3, r3, r1, lsl #1
 355 0198 C917     		asrs	r1, r1, #31
 356              		.loc 1 102 8 view .LVU123
 357 019a A2FB0323 		umull	r2, r3, r2, r3
 358 019e 00FB0133 		mla	r3, r0, r1, r3
 359              	.LVL53:
 103:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** 
 104:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   /* Calculation of sine value */
 105:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c ****   *pSinVal = clip_q63_to_q31((temp >> 31) + (q63_t)f1);
 360              		.loc 1 105 3 is_stmt 1 view .LVU124
 361              		.loc 1 105 36 is_stmt 0 view .LVU125
 362 01a2 D20F     		lsrs	r2, r2, #31
 363              	.LVL54:
 364              		.loc 1 105 36 view .LVU126
 365 01a4 42EA4302 		orr	r2, r2, r3, lsl #1
 366              		.loc 1 105 45 view .LVU127
 367 01a8 F917     		asrs	r1, r7, #31
 368              		.loc 1 105 14 view .LVU128
 369 01aa D219     		adds	r2, r2, r7
 370              		.loc 1 105 14 view .LVU129
 371 01ac 41EBE373 		adc	r3, r1, r3, asr #31
 372              	.LVL55:
 373              	.LBB8:
 374              	.LBI8:
 520:DSP/Inc/arm_math.h ****   q63_t x)
 375              		.loc 2 520 38 is_stmt 1 view .LVU130
 376              	.LBB9:
 523:DSP/Inc/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 377              		.loc 2 523 5 view .LVU131
 523:DSP/Inc/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 378              		.loc 2 523 35 is_stmt 0 view .LVU132
 379 01b0 1146     		mov	r1, r2
 380              		.loc 2 524 44 view .LVU133
 381 01b2 B3EBE27F 		cmp	r3, r2, asr #31
 382 01b6 03D0     		beq	.L3
 383              		.loc 2 524 44 discriminator 1 view .LVU134
 384 01b8 6FF00041 		mvn	r1, #-2147483648
 385 01bc 81EAE371 		eor	r1, r1, r3, asr #31
 386              	.L3:
 387              	.LVL56:
 388              		.loc 2 524 44 discriminator 1 view .LVU135
 389              	.LBE9:
 390              	.LBE8:
 391              		.loc 1 105 12 discriminator 1 view .LVU136
 392 01c0 049B     		ldr	r3, [sp, #16]
 393 01c2 1960     		str	r1, [r3]
 106:DSP/Source/ControllerFunctions/arm_sin_cos_q31.c **** }
 394              		.loc 1 106 1 view .LVU137
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s 			page 19


 395 01c4 07B0     		add	sp, sp, #28
 396              	.LCFI2:
 397              		.cfi_def_cfa_offset 36
 398              		@ sp needed
 399 01c6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 400              	.LVL57:
 401              	.L6:
 402              		.loc 1 106 1 view .LVU138
 403 01ca 00BF     		.align	2
 404              	.L5:
 405 01cc 00000000 		.word	sinTable_q31
 406 01d0 B51F9201 		.word	26353589
 407              		.cfi_endproc
 408              	.LFE139:
 410              		.text
 411              	.Letext0:
 412              		.file 3 "/Users/luban/.local/xPacks/arm-none-eabi-gcc/xpack-arm-none-eabi-gcc-13.2.1-1.1/arm-none-
 413              		.file 4 "/Users/luban/.local/xPacks/arm-none-eabi-gcc/xpack-arm-none-eabi-gcc-13.2.1-1.1/arm-none-
 414              		.file 5 "DSP/Inc/arm_common_tables.h"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 arm_sin_cos_q31.c
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s:21     .text.arm_sin_cos_q31:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s:27     .text.arm_sin_cos_q31:00000000 arm_sin_cos_q31
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cczn1E4s.s:405    .text.arm_sin_cos_q31:000001cc $d

UNDEFINED SYMBOLS
sinTable_q31
