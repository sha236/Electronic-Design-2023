ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccjkdMqO.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"arm_cmplx_conj_f32.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c"
  20              		.section	.text.arm_cmplx_conj_f32,"ax",%progbits
  21              		.align	1
  22              		.global	arm_cmplx_conj_f32
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	arm_cmplx_conj_f32:
  28              	.LVL0:
  29              	.LFB139:
   1:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /* ----------------------------------------------------------------------
   2:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Project:      CMSIS DSP Library
   3:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Title:        arm_cmplx_conj_f32.c
   4:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Description:  Floating-point complex conjugate
   5:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
   6:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * $Date:        27. January 2017
   7:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * $Revision:    V.1.5.1
   8:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
   9:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Target Processor: Cortex-M cores
  10:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * -------------------------------------------------------------------- */
  11:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /*
  12:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  14:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  16:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * not use this file except in compliance with the License.
  18:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * You may obtain a copy of the License at
  19:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  20:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  22:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * See the License for the specific language governing permissions and
  26:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * limitations under the License.
  27:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  28:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  29:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** #include "arm_math.h"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccjkdMqO.s 			page 2


  30:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  31:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /**
  32:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @ingroup groupCmplxMath
  33:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  34:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  35:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /**
  36:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @defgroup cmplx_conj Complex Conjugate
  37:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  38:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Conjugates the elements of a complex data vector.
  39:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  40:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * The <code>pSrc</code> points to the source data and
  41:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * <code>pDst</code> points to the where the result should be written.
  42:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * <code>numSamples</code> specifies the number of complex samples
  43:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * and the data in each array is stored in an interleaved fashion
  44:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * (real, imag, real, imag, ...).
  45:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * Each array has a total of <code>2*numSamples</code> values.
  46:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * The underlying algorithm is used:
  47:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  48:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * <pre>
  49:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * for(n=0; n<numSamples; n++) {
  50:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *     pDst[(2*n)+0)] = pSrc[(2*n)+0];     // real part
  51:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *     pDst[(2*n)+1)] = -pSrc[(2*n)+1];    // imag part
  52:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * }
  53:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * </pre>
  54:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  *
  55:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * There are separate functions for floating-point, Q15, and Q31 data types.
  56:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  57:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  58:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /**
  59:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @addtogroup cmplx_conj
  60:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @{
  61:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  62:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  63:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** /**
  64:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @brief  Floating-point complex conjugate.
  65:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @param  *pSrc points to the input vector
  66:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @param  *pDst points to the output vector
  67:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @param  numSamples number of complex samples in each vector
  68:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  * @return none.
  69:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****  */
  70:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  71:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** void arm_cmplx_conj_f32(
  72:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   float32_t * pSrc,
  73:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   float32_t * pDst,
  74:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   uint32_t numSamples)
  75:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** {
  30              		.loc 1 75 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  76:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   uint32_t blkCnt;                               /* loop counter */
  34              		.loc 1 76 3 view .LVU1
  77:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  78:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** #if defined (ARM_MATH_DSP)
  79:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  80:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  81:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   float32_t inR1, inR2, inR3, inR4;
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccjkdMqO.s 			page 3


  35              		.loc 1 81 3 view .LVU2
  82:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   float32_t inI1, inI2, inI3, inI4;
  36              		.loc 1 82 3 view .LVU3
  83:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  84:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /*loop Unrolling */
  85:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   blkCnt = numSamples >> 2U;
  37              		.loc 1 85 3 view .LVU4
  38              		.loc 1 85 10 is_stmt 0 view .LVU5
  39 0000 9308     		lsrs	r3, r2, #2
  40              	.LVL1:
  86:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
  87:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  88:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  89:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   while (blkCnt > 0U)
  41              		.loc 1 89 3 is_stmt 1 view .LVU6
  42              		.loc 1 89 9 is_stmt 0 view .LVU7
  43 0002 2AE0     		b	.L2
  44              	.L3:
  90:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
  91:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* C[0]+jC[1] = A[0]+ j (-1) A[1] */
  92:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* Calculate Complex Conjugate and then store the results in the destination buffer. */
  93:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* read real input samples */
  94:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inR1 = pSrc[0];
  45              		.loc 1 94 5 is_stmt 1 view .LVU8
  46              		.loc 1 94 10 is_stmt 0 view .LVU9
  47 0004 D0F800C0 		ldr	ip, [r0]	@ float
  48              	.LVL2:
  95:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* store real samples to destination */
  96:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[0] = inR1;
  49              		.loc 1 96 5 is_stmt 1 view .LVU10
  50              		.loc 1 96 13 is_stmt 0 view .LVU11
  51 0008 C1F800C0 		str	ip, [r1]	@ float
  97:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inR2 = pSrc[2];
  52              		.loc 1 97 5 is_stmt 1 view .LVU12
  53              		.loc 1 97 10 is_stmt 0 view .LVU13
  54 000c D0F808C0 		ldr	ip, [r0, #8]	@ float
  55              	.LVL3:
  98:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[2] = inR2;
  56              		.loc 1 98 5 is_stmt 1 view .LVU14
  57              		.loc 1 98 13 is_stmt 0 view .LVU15
  58 0010 C1F808C0 		str	ip, [r1, #8]	@ float
  99:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inR3 = pSrc[4];
  59              		.loc 1 99 5 is_stmt 1 view .LVU16
  60              		.loc 1 99 10 is_stmt 0 view .LVU17
  61 0014 D0F810C0 		ldr	ip, [r0, #16]	@ float
  62              	.LVL4:
 100:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[4] = inR3;
  63              		.loc 1 100 5 is_stmt 1 view .LVU18
  64              		.loc 1 100 13 is_stmt 0 view .LVU19
  65 0018 C1F810C0 		str	ip, [r1, #16]	@ float
 101:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inR4 = pSrc[6];
  66              		.loc 1 101 5 is_stmt 1 view .LVU20
  67              		.loc 1 101 10 is_stmt 0 view .LVU21
  68 001c D0F818C0 		ldr	ip, [r0, #24]	@ float
  69              	.LVL5:
 102:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[6] = inR4;
  70              		.loc 1 102 5 is_stmt 1 view .LVU22
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccjkdMqO.s 			page 4


  71              		.loc 1 102 13 is_stmt 0 view .LVU23
  72 0020 C1F818C0 		str	ip, [r1, #24]	@ float
 103:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 104:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* read imaginary input samples */
 105:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI1 = pSrc[1];
  73              		.loc 1 105 5 is_stmt 1 view .LVU24
  74              		.loc 1 105 10 is_stmt 0 view .LVU25
  75 0024 90ED016A 		vldr.32	s12, [r0, #4]
  76              	.LVL6:
 106:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI2 = pSrc[3];
  77              		.loc 1 106 5 is_stmt 1 view .LVU26
  78              		.loc 1 106 10 is_stmt 0 view .LVU27
  79 0028 D0ED036A 		vldr.32	s13, [r0, #12]
  80              	.LVL7:
 107:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 108:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* conjugate input */
 109:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI1 = -inI1;
  81              		.loc 1 109 5 is_stmt 1 view .LVU28
  82              		.loc 1 109 10 is_stmt 0 view .LVU29
  83 002c B1EE466A 		vneg.f32	s12, s12
  84              	.LVL8:
 110:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 111:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* read imaginary input samples */
 112:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI3 = pSrc[5];
  85              		.loc 1 112 5 is_stmt 1 view .LVU30
  86              		.loc 1 112 10 is_stmt 0 view .LVU31
  87 0030 90ED057A 		vldr.32	s14, [r0, #20]
  88              	.LVL9:
 113:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 114:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* conjugate input */
 115:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI2 = -inI2;
  89              		.loc 1 115 5 is_stmt 1 view .LVU32
  90              		.loc 1 115 10 is_stmt 0 view .LVU33
  91 0034 F1EE666A 		vneg.f32	s13, s13
  92              	.LVL10:
 116:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 117:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* read imaginary input samples */
 118:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI4 = pSrc[7];
  93              		.loc 1 118 5 is_stmt 1 view .LVU34
  94              		.loc 1 118 10 is_stmt 0 view .LVU35
  95 0038 D0ED077A 		vldr.32	s15, [r0, #28]
  96              	.LVL11:
 119:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 120:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* conjugate input */
 121:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI3 = -inI3;
  97              		.loc 1 121 5 is_stmt 1 view .LVU36
  98              		.loc 1 121 10 is_stmt 0 view .LVU37
  99 003c B1EE477A 		vneg.f32	s14, s14
 100              	.LVL12:
 122:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 123:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* store imaginary samples to destination */
 124:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[1] = inI1;
 101              		.loc 1 124 5 is_stmt 1 view .LVU38
 102              		.loc 1 124 13 is_stmt 0 view .LVU39
 103 0040 81ED016A 		vstr.32	s12, [r1, #4]
 125:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[3] = inI2;
 104              		.loc 1 125 5 is_stmt 1 view .LVU40
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccjkdMqO.s 			page 5


 105              		.loc 1 125 13 is_stmt 0 view .LVU41
 106 0044 C1ED036A 		vstr.32	s13, [r1, #12]
 126:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 127:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* conjugate input */
 128:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     inI4 = -inI4;
 107              		.loc 1 128 5 is_stmt 1 view .LVU42
 108              		.loc 1 128 10 is_stmt 0 view .LVU43
 109 0048 F1EE677A 		vneg.f32	s15, s15
 110              	.LVL13:
 129:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 130:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* store imaginary samples to destination */
 131:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[5] = inI3;
 111              		.loc 1 131 5 is_stmt 1 view .LVU44
 112              		.loc 1 131 13 is_stmt 0 view .LVU45
 113 004c 81ED057A 		vstr.32	s14, [r1, #20]
 132:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 133:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* increment source pointer by 8 to process next sampels */
 134:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pSrc += 8U;
 114              		.loc 1 134 5 is_stmt 1 view .LVU46
 115              		.loc 1 134 10 is_stmt 0 view .LVU47
 116 0050 2030     		adds	r0, r0, #32
 117              	.LVL14:
 135:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 136:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* store imaginary sample to destination */
 137:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst[7] = inI4;
 118              		.loc 1 137 5 is_stmt 1 view .LVU48
 119              		.loc 1 137 13 is_stmt 0 view .LVU49
 120 0052 C1ED077A 		vstr.32	s15, [r1, #28]
 138:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 139:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* increment destination pointer by 8 to store next samples */
 140:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     pDst += 8U;
 121              		.loc 1 140 5 is_stmt 1 view .LVU50
 122              		.loc 1 140 10 is_stmt 0 view .LVU51
 123 0056 2031     		adds	r1, r1, #32
 124              	.LVL15:
 141:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 142:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* Decrement the loop counter */
 143:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     blkCnt--;
 125              		.loc 1 143 5 is_stmt 1 view .LVU52
 126              		.loc 1 143 11 is_stmt 0 view .LVU53
 127 0058 013B     		subs	r3, r3, #1
 128              	.LVL16:
 129              	.L2:
  89:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
 130              		.loc 1 89 17 is_stmt 1 view .LVU54
 131 005a 002B     		cmp	r3, #0
 132 005c D2D1     		bne	.L3
 144:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   }
 145:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 146:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /* If the numSamples is not a multiple of 4, compute any remaining output samples here.
 147:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****    ** No loop unrolling is used. */
 148:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   blkCnt = numSamples % 0x4U;
 133              		.loc 1 148 3 view .LVU55
 134              		.loc 1 148 10 is_stmt 0 view .LVU56
 135 005e 02F00302 		and	r2, r2, #3
 136              	.LVL17:
 149:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccjkdMqO.s 			page 6


 150:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** #else
 151:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 152:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   /* Run the below code for Cortex-M0 */
 153:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   blkCnt = numSamples;
 154:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 155:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** #endif /* #if defined (ARM_MATH_DSP) */
 156:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 157:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   while (blkCnt > 0U)
 137              		.loc 1 157 3 is_stmt 1 view .LVU57
 138              		.loc 1 157 17 view .LVU58
 139 0062 9AB1     		cbz	r2, .L10
  75:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   uint32_t blkCnt;                               /* loop counter */
 140              		.loc 1 75 1 is_stmt 0 view .LVU59
 141 0064 00B5     		push	{lr}
 142              	.LCFI0:
 143              		.cfi_def_cfa_offset 4
 144              		.cfi_offset 14, -4
 145              	.L5:
 158:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
 159:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* realOut + j (imagOut) = realIn + j (-1) imagIn */
 160:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* Calculate Complex Conjugate and then store the results in the destination buffer. */
 161:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     *pDst++ = *pSrc++;
 146              		.loc 1 161 5 is_stmt 1 view .LVU60
 147              	.LVL18:
 148              		.loc 1 161 15 is_stmt 0 view .LVU61
 149 0066 0346     		mov	r3, r0
 150 0068 53F808EB 		ldr	lr, [r3], #8	@ float
 151              		.loc 1 161 13 view .LVU62
 152 006c 8C46     		mov	ip, r1
 153 006e 4CF808EB 		str	lr, [ip], #8	@ float
 162:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     *pDst++ = -*pSrc++;
 154              		.loc 1 162 5 is_stmt 1 view .LVU63
 155              	.LVL19:
 156              		.loc 1 162 16 is_stmt 0 view .LVU64
 157 0072 D0ED017A 		vldr.32	s15, [r0, #4]
 158              	.LVL20:
 159              		.loc 1 162 15 view .LVU65
 160 0076 F1EE677A 		vneg.f32	s15, s15
 161              		.loc 1 162 13 view .LVU66
 162 007a C1ED017A 		vstr.32	s15, [r1, #4]
 163:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** 
 164:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     /* Decrement the loop counter */
 165:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     blkCnt--;
 163              		.loc 1 165 5 is_stmt 1 view .LVU67
 164              		.loc 1 165 11 is_stmt 0 view .LVU68
 165 007e 013A     		subs	r2, r2, #1
 166              	.LVL21:
 162:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     *pDst++ = -*pSrc++;
 167              		.loc 1 162 10 view .LVU69
 168 0080 6146     		mov	r1, ip
 162:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****     *pDst++ = -*pSrc++;
 169              		.loc 1 162 21 view .LVU70
 170 0082 1846     		mov	r0, r3
 157:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   {
 171              		.loc 1 157 17 is_stmt 1 view .LVU71
 172 0084 002A     		cmp	r2, #0
 173 0086 EED1     		bne	.L5
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccjkdMqO.s 			page 7


 166:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c ****   }
 167:DSP/Source/ComplexMathFunctions/arm_cmplx_conj_f32.c **** }
 174              		.loc 1 167 1 is_stmt 0 view .LVU72
 175 0088 5DF804FB 		ldr	pc, [sp], #4
 176              	.LVL22:
 177              	.L10:
 178              	.LCFI1:
 179              		.cfi_def_cfa_offset 0
 180              		.cfi_restore 14
 181              		.loc 1 167 1 view .LVU73
 182 008c 7047     		bx	lr
 183              		.cfi_endproc
 184              	.LFE139:
 186              		.text
 187              	.Letext0:
 188              		.file 2 "/Users/luban/.local/xPacks/arm-none-eabi-gcc/xpack-arm-none-eabi-gcc-13.2.1-1.1/arm-none-
 189              		.file 3 "/Users/luban/.local/xPacks/arm-none-eabi-gcc/xpack-arm-none-eabi-gcc-13.2.1-1.1/arm-none-
 190              		.file 4 "DSP/Inc/arm_math.h"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccjkdMqO.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_conj_f32.c
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccjkdMqO.s:21     .text.arm_cmplx_conj_f32:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccjkdMqO.s:27     .text.arm_cmplx_conj_f32:00000000 arm_cmplx_conj_f32

NO UNDEFINED SYMBOLS
