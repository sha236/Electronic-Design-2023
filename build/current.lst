ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"current.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "CONTROL/Src/current.c"
  20              		.section	.text.CURRENT_PID_INIT,"ax",%progbits
  21              		.align	1
  22              		.global	CURRENT_PID_INIT
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	CURRENT_PID_INIT:
  28              	.LFB272:
   1:CONTROL/Src/current.c **** #include "current.h"
   2:CONTROL/Src/current.c **** #include "arm_math.h"
   3:CONTROL/Src/current.c **** #include "tim.h"
   4:CONTROL/Src/current.c **** #include "sogi.h"
   5:CONTROL/Src/current.c **** #include "oled.h"
   6:CONTROL/Src/current.c **** #include "pr.h"
   7:CONTROL/Src/current.c **** 
   8:CONTROL/Src/current.c **** #define u8 uint8_t
   9:CONTROL/Src/current.c **** #define u16 uint16_t
  10:CONTROL/Src/current.c **** #define u32 uint32_t
  11:CONTROL/Src/current.c **** 
  12:CONTROL/Src/current.c **** #define A_phase_correction 0 //填补上电压电流相位做差和电感造成的误差
  13:CONTROL/Src/current.c **** 
  14:CONTROL/Src/current.c **** #define KP_1 1
  15:CONTROL/Src/current.c **** #define KI_1 0
  16:CONTROL/Src/current.c **** #define KD_1 0
  17:CONTROL/Src/current.c **** #define I_REF 4
  18:CONTROL/Src/current.c **** #define RATO 1
  19:CONTROL/Src/current.c **** arm_pid_instance_f32 S_3 = {0};
  20:CONTROL/Src/current.c **** SPLL_1PH_SOGI sineA = {0};
  21:CONTROL/Src/current.c **** int count_1 = 0;
  22:CONTROL/Src/current.c **** float32_t angle_1 = 0;
  23:CONTROL/Src/current.c **** float32_t I_ref = 0;
  24:CONTROL/Src/current.c **** float32_t rato = 0;
  25:CONTROL/Src/current.c **** float32_t percentage = 0;
  26:CONTROL/Src/current.c **** float32_t real_I_ref = 0; //经过计算单电路的目标电流
  27:CONTROL/Src/current.c **** float32_t I_target = 0; //实时的目标电流
  28:CONTROL/Src/current.c **** float32_t I_error = 0;
  29:CONTROL/Src/current.c **** float32_t current_pid_result = 0;
  30:CONTROL/Src/current.c **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 2


  31:CONTROL/Src/current.c **** #define KP_2 1.23
  32:CONTROL/Src/current.c **** #define KI_2 0.1
  33:CONTROL/Src/current.c **** #define KD_2 0.1
  34:CONTROL/Src/current.c **** arm_pid_instance_f32 S_5 = {0};
  35:CONTROL/Src/current.c **** SPLL_1PH_SOGI sineB = {0};
  36:CONTROL/Src/current.c **** float32_t angle_error = 0;
  37:CONTROL/Src/current.c **** float32_t phase_pid_output = 0;
  38:CONTROL/Src/current.c **** 
  39:CONTROL/Src/current.c **** extern u32 pid_3[3][5];
  40:CONTROL/Src/current.c **** extern float32_t ADC1_Buf_f32[4];
  41:CONTROL/Src/current.c **** extern float32_t ADC3_Buf_f32[4];
  42:CONTROL/Src/current.c **** extern u32 pid_5[3][5];
  43:CONTROL/Src/current.c **** extern u32 current_num[5];
  44:CONTROL/Src/current.c **** extern u32 rato_num[3];
  45:CONTROL/Src/current.c **** extern u32 chip_select; //0: Chip A, 1: Chip B
  46:CONTROL/Src/current.c **** extern u32 chip_b_mode; //0: RL, 1: Network
  47:CONTROL/Src/current.c **** 
  48:CONTROL/Src/current.c **** #define NETWORK_VOTAGE ADC3_Buf_f32[2]
  49:CONTROL/Src/current.c **** #define OUTPUT_CURRENT ADC3_Buf_f32[0]
  50:CONTROL/Src/current.c **** #define OUTPUT_VOTAGE ADC1_Buf_f32[0]
  51:CONTROL/Src/current.c **** #define CHIPA_CURRENT ADC3_Buf_f32[2]
  52:CONTROL/Src/current.c **** 
  53:CONTROL/Src/current.c **** void CURRENT_PID_INIT(void)
  54:CONTROL/Src/current.c **** {
  29              		.loc 1 54 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 3, -16
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  40 0002 2DED028B 		vpush.64	{d8}
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 24
  43              		.cfi_offset 80, -24
  44              		.cfi_offset 81, -20
  55:CONTROL/Src/current.c ****     S_3.Kp = KP_1;
  45              		.loc 1 55 5 view .LVU1
  46              		.loc 1 55 12 is_stmt 0 view .LVU2
  47 0006 1F48     		ldr	r0, .L3
  48 0008 4FF07E54 		mov	r4, #1065353216
  49 000c 8461     		str	r4, [r0, #24]	@ float
  56:CONTROL/Src/current.c ****     S_3.Ki = KI_1;
  50              		.loc 1 56 5 is_stmt 1 view .LVU3
  51              		.loc 1 56 12 is_stmt 0 view .LVU4
  52 000e 0023     		movs	r3, #0
  53 0010 C361     		str	r3, [r0, #28]	@ float
  57:CONTROL/Src/current.c ****     S_3.Kd = KD_1;
  54              		.loc 1 57 5 is_stmt 1 view .LVU5
  55              		.loc 1 57 12 is_stmt 0 view .LVU6
  56 0012 0362     		str	r3, [r0, #32]	@ float
  58:CONTROL/Src/current.c ****     arm_pid_init_f32(&S_3, 1);
  57              		.loc 1 58 5 is_stmt 1 view .LVU7
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 3


  58 0014 0121     		movs	r1, #1
  59 0016 FFF7FEFF 		bl	arm_pid_init_f32
  60              	.LVL0:
  59:CONTROL/Src/current.c **** 
  60:CONTROL/Src/current.c ****     SPLL_1PH_SOGI_reset(&sineA);
  61              		.loc 1 60 5 view .LVU8
  62 001a 1B4D     		ldr	r5, .L3+4
  63 001c 2846     		mov	r0, r5
  64 001e FFF7FEFF 		bl	SPLL_1PH_SOGI_reset
  65              	.LVL1:
  61:CONTROL/Src/current.c ****     SPLL_1PH_SOGI_config(&sineA,50,20000,20, -20);
  66              		.loc 1 61 5 view .LVU9
  67 0022 DFED1A8A 		vldr.32	s17, .L3+8
  68 0026 9FED1A8A 		vldr.32	s16, .L3+12
  69 002a FBEE041A 		vmov.f32	s3, #-2.0e+1
  70 002e B3EE041A 		vmov.f32	s2, #2.0e+1
  71 0032 F0EE680A 		vmov.f32	s1, s17
  72 0036 B0EE480A 		vmov.f32	s0, s16
  73 003a 2846     		mov	r0, r5
  74 003c FFF7FEFF 		bl	SPLL_1PH_SOGI_config
  75              	.LVL2:
  62:CONTROL/Src/current.c ****     SPLL_1PH_SOGI_reset(&sineB);
  76              		.loc 1 62 5 view .LVU10
  77 0040 144D     		ldr	r5, .L3+16
  78 0042 2846     		mov	r0, r5
  79 0044 FFF7FEFF 		bl	SPLL_1PH_SOGI_reset
  80              	.LVL3:
  63:CONTROL/Src/current.c ****     SPLL_1PH_SOGI_config(&sineB,50,20000,20, -20);
  81              		.loc 1 63 5 view .LVU11
  82 0048 FBEE041A 		vmov.f32	s3, #-2.0e+1
  83 004c B3EE041A 		vmov.f32	s2, #2.0e+1
  84 0050 F0EE680A 		vmov.f32	s1, s17
  85 0054 B0EE480A 		vmov.f32	s0, s16
  86 0058 2846     		mov	r0, r5
  87 005a FFF7FEFF 		bl	SPLL_1PH_SOGI_config
  88              	.LVL4:
  64:CONTROL/Src/current.c **** 
  65:CONTROL/Src/current.c ****     I_ref = I_REF;
  89              		.loc 1 65 5 view .LVU12
  90              		.loc 1 65 11 is_stmt 0 view .LVU13
  91 005e 0E4B     		ldr	r3, .L3+20
  92 0060 4FF08142 		mov	r2, #1082130432
  93 0064 1A60     		str	r2, [r3]	@ float
  66:CONTROL/Src/current.c ****     rato = RATO;
  94              		.loc 1 66 5 is_stmt 1 view .LVU14
  95              		.loc 1 66 10 is_stmt 0 view .LVU15
  96 0066 0D4B     		ldr	r3, .L3+24
  97 0068 1C60     		str	r4, [r3]	@ float
  67:CONTROL/Src/current.c **** 
  68:CONTROL/Src/current.c ****     S_5.Kp = KP_2;
  98              		.loc 1 68 5 is_stmt 1 view .LVU16
  99              		.loc 1 68 12 is_stmt 0 view .LVU17
 100 006a 0D48     		ldr	r0, .L3+28
 101 006c 0D4B     		ldr	r3, .L3+32
 102 006e 8361     		str	r3, [r0, #24]	@ float
  69:CONTROL/Src/current.c ****     S_5.Ki = KI_2;
 103              		.loc 1 69 5 is_stmt 1 view .LVU18
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 4


 104              		.loc 1 69 12 is_stmt 0 view .LVU19
 105 0070 0D4B     		ldr	r3, .L3+36
 106 0072 C361     		str	r3, [r0, #28]	@ float
  70:CONTROL/Src/current.c ****     S_5.Kd = KD_2;
 107              		.loc 1 70 5 is_stmt 1 view .LVU20
 108              		.loc 1 70 12 is_stmt 0 view .LVU21
 109 0074 0362     		str	r3, [r0, #32]	@ float
  71:CONTROL/Src/current.c ****     arm_pid_init_f32(&S_5, 1);
 110              		.loc 1 71 5 is_stmt 1 view .LVU22
 111 0076 0121     		movs	r1, #1
 112 0078 FFF7FEFF 		bl	arm_pid_init_f32
 113              	.LVL5:
  72:CONTROL/Src/current.c **** }
 114              		.loc 1 72 1 is_stmt 0 view .LVU23
 115 007c BDEC028B 		vldm	sp!, {d8}
 116              	.LCFI2:
 117              		.cfi_restore 80
 118              		.cfi_restore 81
 119              		.cfi_def_cfa_offset 16
 120 0080 38BD     		pop	{r3, r4, r5, pc}
 121              	.L4:
 122 0082 00BF     		.align	2
 123              	.L3:
 124 0084 00000000 		.word	S_3
 125 0088 00000000 		.word	sineA
 126 008c 00409C46 		.word	1184645120
 127 0090 00004842 		.word	1112014848
 128 0094 00000000 		.word	sineB
 129 0098 00000000 		.word	I_ref
 130 009c 00000000 		.word	rato
 131 00a0 00000000 		.word	S_5
 132 00a4 A4709D3F 		.word	1067282596
 133 00a8 CDCCCC3D 		.word	1036831949
 134              		.cfi_endproc
 135              	.LFE272:
 137              		.section	.text.UPDATE_CURRENT_NUM,"ax",%progbits
 138              		.align	1
 139              		.global	UPDATE_CURRENT_NUM
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 144              	UPDATE_CURRENT_NUM:
 145              	.LFB273:
  73:CONTROL/Src/current.c **** 
  74:CONTROL/Src/current.c **** void UPDATE_CURRENT_NUM(void)
  75:CONTROL/Src/current.c **** {
 146              		.loc 1 75 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 16
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 151              	.LCFI3:
 152              		.cfi_def_cfa_offset 20
 153              		.cfi_offset 4, -20
 154              		.cfi_offset 5, -16
 155              		.cfi_offset 6, -12
 156              		.cfi_offset 7, -8
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 5


 157              		.cfi_offset 14, -4
 158 0002 85B0     		sub	sp, sp, #20
 159              	.LCFI4:
 160              		.cfi_def_cfa_offset 40
  76:CONTROL/Src/current.c ****     u32 temp[3];
 161              		.loc 1 76 5 view .LVU25
  77:CONTROL/Src/current.c ****     temp[0] = KP_1*100;
 162              		.loc 1 77 5 view .LVU26
 163              		.loc 1 77 13 is_stmt 0 view .LVU27
 164 0004 6423     		movs	r3, #100
 165 0006 0193     		str	r3, [sp, #4]
  78:CONTROL/Src/current.c ****     temp[1] = KI_1*1000;
 166              		.loc 1 78 5 is_stmt 1 view .LVU28
 167              		.loc 1 78 13 is_stmt 0 view .LVU29
 168 0008 0021     		movs	r1, #0
 169 000a 0291     		str	r1, [sp, #8]
  79:CONTROL/Src/current.c ****     temp[2] = KD_1*10000;
 170              		.loc 1 79 5 is_stmt 1 view .LVU30
 171              		.loc 1 79 13 is_stmt 0 view .LVU31
 172 000c 0391     		str	r1, [sp, #12]
  80:CONTROL/Src/current.c ****     for(int i=0;i<3;i++)
 173              		.loc 1 80 5 is_stmt 1 view .LVU32
 174              	.LBB10:
 175              		.loc 1 80 9 view .LVU33
 176              	.LVL6:
 177              		.loc 1 80 5 is_stmt 0 view .LVU34
 178 000e 46E0     		b	.L6
 179              	.LVL7:
 180              	.L7:
  81:CONTROL/Src/current.c ****     {
  82:CONTROL/Src/current.c ****         pid_3[i][4] = temp[i]%10;
 181              		.loc 1 82 9 is_stmt 1 view .LVU35
 182              		.loc 1 82 27 is_stmt 0 view .LVU36
 183 0010 04AB     		add	r3, sp, #16
 184 0012 03EB8103 		add	r3, r3, r1, lsl #2
 185 0016 53F80C3C 		ldr	r3, [r3, #-12]
 186              		.loc 1 82 30 view .LVU37
 187 001a 234F     		ldr	r7, .L9
 188 001c A7FB0302 		umull	r0, r2, r7, r3
 189 0020 D208     		lsrs	r2, r2, #3
 190 0022 02EB8202 		add	r2, r2, r2, lsl #2
 191 0026 5000     		lsls	r0, r2, #1
 192 0028 1A1A     		subs	r2, r3, r0
 193              		.loc 1 82 21 view .LVU38
 194 002a 204C     		ldr	r4, .L9+4
 195 002c 01EB8100 		add	r0, r1, r1, lsl #2
 196 0030 4FEA800C 		lsl	ip, r0, #2
 197 0034 04EB0C00 		add	r0, r4, ip
 198 0038 0261     		str	r2, [r0, #16]
  83:CONTROL/Src/current.c ****         pid_3[i][3] = ((temp[i]- pid_3[i][4])%100)/10;
 199              		.loc 1 83 9 is_stmt 1 view .LVU39
 200              		.loc 1 83 32 is_stmt 0 view .LVU40
 201 003a 9B1A     		subs	r3, r3, r2
 202              		.loc 1 83 46 view .LVU41
 203 003c 1C4D     		ldr	r5, .L9+8
 204 003e A5FB0362 		umull	r6, r2, r5, r3
 205 0042 5209     		lsrs	r2, r2, #5
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 6


 206 0044 6426     		movs	r6, #100
 207 0046 06FB1232 		mls	r2, r6, r2, r3
 208              		.loc 1 83 51 view .LVU42
 209 004a A7FB0272 		umull	r7, r2, r7, r2
 210 004e D208     		lsrs	r2, r2, #3
 211              		.loc 1 83 21 view .LVU43
 212 0050 C260     		str	r2, [r0, #12]
  84:CONTROL/Src/current.c ****         pid_3[i][2] = ((temp[i]- pid_3[i][4]- pid_3[i][3]*10)%1000)/100;
 213              		.loc 1 84 9 is_stmt 1 view .LVU44
 214              		.loc 1 84 58 is_stmt 0 view .LVU45
 215 0052 02EB8202 		add	r2, r2, r2, lsl #2
 216 0056 5700     		lsls	r7, r2, #1
 217              		.loc 1 84 45 view .LVU46
 218 0058 DB1B     		subs	r3, r3, r7
 219              		.loc 1 84 62 view .LVU47
 220 005a 164F     		ldr	r7, .L9+12
 221 005c A7FB03E2 		umull	lr, r2, r7, r3
 222 0060 9209     		lsrs	r2, r2, #6
 223 0062 4FF47A7E 		mov	lr, #1000
 224 0066 0EFB1232 		mls	r2, lr, r2, r3
 225              		.loc 1 84 68 view .LVU48
 226 006a A5FB0252 		umull	r5, r2, r5, r2
 227 006e 5209     		lsrs	r2, r2, #5
 228              		.loc 1 84 21 view .LVU49
 229 0070 8260     		str	r2, [r0, #8]
  85:CONTROL/Src/current.c ****         pid_3[i][1] = ((temp[i]- pid_3[i][4]- pid_3[i][3]*10-pid_3[i][2]*100)%10000)/1000;
 230              		.loc 1 85 9 is_stmt 1 view .LVU50
 231              		.loc 1 85 61 is_stmt 0 view .LVU51
 232 0072 06FB1233 		mls	r3, r6, r2, r3
 233              		.loc 1 85 78 view .LVU52
 234 0076 104D     		ldr	r5, .L9+16
 235 0078 A5FB0362 		umull	r6, r2, r5, r3
 236 007c 520B     		lsrs	r2, r2, #13
 237 007e 42F21076 		movw	r6, #10000
 238 0082 06FB1232 		mls	r2, r6, r2, r3
 239              		.loc 1 85 85 view .LVU53
 240 0086 A7FB0272 		umull	r7, r2, r7, r2
 241 008a 9209     		lsrs	r2, r2, #6
 242              		.loc 1 85 21 view .LVU54
 243 008c 4260     		str	r2, [r0, #4]
  86:CONTROL/Src/current.c ****         pid_3[i][0] = (temp[i]- pid_3[i][4]- pid_3[i][3]*10-pid_3[i][2]*100-pid_3[i][1]*1000)/10000
 244              		.loc 1 86 9 is_stmt 1 view .LVU55
 245              		.loc 1 86 76 is_stmt 0 view .LVU56
 246 008e 0EFB1233 		mls	r3, lr, r2, r3
 247              		.loc 1 86 94 view .LVU57
 248 0092 A5FB0353 		umull	r5, r3, r5, r3
 249 0096 5B0B     		lsrs	r3, r3, #13
 250              		.loc 1 86 21 view .LVU58
 251 0098 44F80C30 		str	r3, [r4, ip]
  80:CONTROL/Src/current.c ****     {
 252              		.loc 1 80 22 is_stmt 1 discriminator 3 view .LVU59
 253 009c 0131     		adds	r1, r1, #1
 254              	.LVL8:
 255              	.L6:
  80:CONTROL/Src/current.c ****     {
 256              		.loc 1 80 18 discriminator 1 view .LVU60
 257 009e 0229     		cmp	r1, #2
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 7


 258 00a0 B6DD     		ble	.L7
 259              	.LBE10:
  87:CONTROL/Src/current.c ****     }
  88:CONTROL/Src/current.c **** }
 260              		.loc 1 88 1 is_stmt 0 view .LVU61
 261 00a2 05B0     		add	sp, sp, #20
 262              	.LCFI5:
 263              		.cfi_def_cfa_offset 20
 264              		@ sp needed
 265 00a4 F0BD     		pop	{r4, r5, r6, r7, pc}
 266              	.L10:
 267 00a6 00BF     		.align	2
 268              	.L9:
 269 00a8 CDCCCCCC 		.word	-858993459
 270 00ac 00000000 		.word	pid_3
 271 00b0 1F85EB51 		.word	1374389535
 272 00b4 D34D6210 		.word	274877907
 273 00b8 5917B7D1 		.word	-776530087
 274              		.cfi_endproc
 275              	.LFE273:
 277              		.section	.text.UPDATE_IREF_RATO_NUM,"ax",%progbits
 278              		.align	1
 279              		.global	UPDATE_IREF_RATO_NUM
 280              		.syntax unified
 281              		.thumb
 282              		.thumb_func
 284              	UPDATE_IREF_RATO_NUM:
 285              	.LFB274:
  89:CONTROL/Src/current.c **** 
  90:CONTROL/Src/current.c **** //将上面define的值赋给按键的存储值
  91:CONTROL/Src/current.c **** void UPDATE_IREF_RATO_NUM(void)
  92:CONTROL/Src/current.c **** {
 286              		.loc 1 92 1 is_stmt 1 view -0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
  93:CONTROL/Src/current.c ****     u32 temp = 0;
 291              		.loc 1 93 5 view .LVU63
 292              	.LVL9:
  94:CONTROL/Src/current.c ****     temp = I_REF*10000;
 293              		.loc 1 94 5 view .LVU64
  95:CONTROL/Src/current.c ****     current_num[4] = temp%10;
 294              		.loc 1 95 5 view .LVU65
 295              		.loc 1 95 20 is_stmt 0 view .LVU66
 296 0000 064A     		ldr	r2, .L12
 297 0002 0023     		movs	r3, #0
 298 0004 1361     		str	r3, [r2, #16]
  96:CONTROL/Src/current.c ****     current_num[3] = ((temp- current_num[4])%100)/10;
 299              		.loc 1 96 5 is_stmt 1 view .LVU67
 300              		.loc 1 96 20 is_stmt 0 view .LVU68
 301 0006 D360     		str	r3, [r2, #12]
  97:CONTROL/Src/current.c ****     current_num[2] = ((temp- current_num[4]- current_num[3]*10)%1000)/100;
 302              		.loc 1 97 5 is_stmt 1 view .LVU69
 303              		.loc 1 97 20 is_stmt 0 view .LVU70
 304 0008 9360     		str	r3, [r2, #8]
  98:CONTROL/Src/current.c ****     current_num[1] = ((temp- current_num[4]- current_num[3]*10-current_num[2]*100)%10000)/1000;
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 8


 305              		.loc 1 98 5 is_stmt 1 view .LVU71
 306              		.loc 1 98 20 is_stmt 0 view .LVU72
 307 000a 5360     		str	r3, [r2, #4]
  99:CONTROL/Src/current.c ****     current_num[0] = (temp- current_num[4]- current_num[3]*10-current_num[2]*100-current_num[1]*100
 308              		.loc 1 99 5 is_stmt 1 view .LVU73
 309              		.loc 1 99 20 is_stmt 0 view .LVU74
 310 000c 0421     		movs	r1, #4
 311 000e 1160     		str	r1, [r2]
 100:CONTROL/Src/current.c **** 
 101:CONTROL/Src/current.c ****     temp = RATO*100;
 312              		.loc 1 101 5 is_stmt 1 view .LVU75
 313              	.LVL10:
 102:CONTROL/Src/current.c ****     rato_num[2] = temp%10;
 314              		.loc 1 102 5 view .LVU76
 315              		.loc 1 102 17 is_stmt 0 view .LVU77
 316 0010 034A     		ldr	r2, .L12+4
 317 0012 9360     		str	r3, [r2, #8]
 103:CONTROL/Src/current.c ****     rato_num[1] = ((temp-rato_num[2])%100)/10;
 318              		.loc 1 103 5 is_stmt 1 view .LVU78
 319              		.loc 1 103 17 is_stmt 0 view .LVU79
 320 0014 5360     		str	r3, [r2, #4]
 104:CONTROL/Src/current.c ****     rato_num[0] = (temp-rato_num[2]-rato_num[1]*10)/100;
 321              		.loc 1 104 5 is_stmt 1 view .LVU80
 322              		.loc 1 104 17 is_stmt 0 view .LVU81
 323 0016 0123     		movs	r3, #1
 324 0018 1360     		str	r3, [r2]
 105:CONTROL/Src/current.c **** }
 325              		.loc 1 105 1 view .LVU82
 326 001a 7047     		bx	lr
 327              	.L13:
 328              		.align	2
 329              	.L12:
 330 001c 00000000 		.word	current_num
 331 0020 00000000 		.word	rato_num
 332              		.cfi_endproc
 333              	.LFE274:
 335              		.section	.text.UPDATE_PHASE_NUM,"ax",%progbits
 336              		.align	1
 337              		.global	UPDATE_PHASE_NUM
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 342              	UPDATE_PHASE_NUM:
 343              	.LFB275:
 106:CONTROL/Src/current.c **** 
 107:CONTROL/Src/current.c **** void UPDATE_PHASE_NUM(void)
 108:CONTROL/Src/current.c **** {
 344              		.loc 1 108 1 is_stmt 1 view -0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 16
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 349              	.LCFI6:
 350              		.cfi_def_cfa_offset 20
 351              		.cfi_offset 4, -20
 352              		.cfi_offset 5, -16
 353              		.cfi_offset 6, -12
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 9


 354              		.cfi_offset 7, -8
 355              		.cfi_offset 14, -4
 356 0002 85B0     		sub	sp, sp, #20
 357              	.LCFI7:
 358              		.cfi_def_cfa_offset 40
 109:CONTROL/Src/current.c ****     u32 temp[3];
 359              		.loc 1 109 5 view .LVU84
 110:CONTROL/Src/current.c ****     temp[0] = KP_2*100;
 360              		.loc 1 110 5 view .LVU85
 361              		.loc 1 110 13 is_stmt 0 view .LVU86
 362 0004 7B23     		movs	r3, #123
 363 0006 0193     		str	r3, [sp, #4]
 111:CONTROL/Src/current.c ****     temp[1] = KI_2*1000;
 364              		.loc 1 111 5 is_stmt 1 view .LVU87
 365              		.loc 1 111 13 is_stmt 0 view .LVU88
 366 0008 6423     		movs	r3, #100
 367 000a 0293     		str	r3, [sp, #8]
 112:CONTROL/Src/current.c ****     temp[2] = KD_2*10000;
 368              		.loc 1 112 5 is_stmt 1 view .LVU89
 369              		.loc 1 112 13 is_stmt 0 view .LVU90
 370 000c 4FF47A73 		mov	r3, #1000
 371 0010 0393     		str	r3, [sp, #12]
 113:CONTROL/Src/current.c ****     for(int i=0;i<3;i++)
 372              		.loc 1 113 5 is_stmt 1 view .LVU91
 373              	.LBB11:
 374              		.loc 1 113 9 view .LVU92
 375              	.LVL11:
 376              		.loc 1 113 13 is_stmt 0 view .LVU93
 377 0012 0021     		movs	r1, #0
 378              		.loc 1 113 5 view .LVU94
 379 0014 46E0     		b	.L15
 380              	.LVL12:
 381              	.L16:
 114:CONTROL/Src/current.c ****     {
 115:CONTROL/Src/current.c ****         pid_5[i][4] = temp[i]%10;
 382              		.loc 1 115 9 is_stmt 1 view .LVU95
 383              		.loc 1 115 27 is_stmt 0 view .LVU96
 384 0016 04AB     		add	r3, sp, #16
 385 0018 03EB8103 		add	r3, r3, r1, lsl #2
 386 001c 53F80C3C 		ldr	r3, [r3, #-12]
 387              		.loc 1 115 30 view .LVU97
 388 0020 224F     		ldr	r7, .L18
 389 0022 A7FB0302 		umull	r0, r2, r7, r3
 390 0026 D208     		lsrs	r2, r2, #3
 391 0028 02EB8202 		add	r2, r2, r2, lsl #2
 392 002c 5000     		lsls	r0, r2, #1
 393 002e 1A1A     		subs	r2, r3, r0
 394              		.loc 1 115 21 view .LVU98
 395 0030 1F4C     		ldr	r4, .L18+4
 396 0032 01EB8100 		add	r0, r1, r1, lsl #2
 397 0036 4FEA800C 		lsl	ip, r0, #2
 398 003a 04EB0C00 		add	r0, r4, ip
 399 003e 0261     		str	r2, [r0, #16]
 116:CONTROL/Src/current.c ****         pid_5[i][3] = ((temp[i]- pid_5[i][4])%100)/10;
 400              		.loc 1 116 9 is_stmt 1 view .LVU99
 401              		.loc 1 116 32 is_stmt 0 view .LVU100
 402 0040 9B1A     		subs	r3, r3, r2
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 10


 403              		.loc 1 116 46 view .LVU101
 404 0042 1C4D     		ldr	r5, .L18+8
 405 0044 A5FB0362 		umull	r6, r2, r5, r3
 406 0048 5209     		lsrs	r2, r2, #5
 407 004a 6426     		movs	r6, #100
 408 004c 06FB1232 		mls	r2, r6, r2, r3
 409              		.loc 1 116 51 view .LVU102
 410 0050 A7FB0272 		umull	r7, r2, r7, r2
 411 0054 D208     		lsrs	r2, r2, #3
 412              		.loc 1 116 21 view .LVU103
 413 0056 C260     		str	r2, [r0, #12]
 117:CONTROL/Src/current.c ****         pid_5[i][2] = ((temp[i]- pid_5[i][4]- pid_5[i][3]*10)%1000)/100;
 414              		.loc 1 117 9 is_stmt 1 view .LVU104
 415              		.loc 1 117 58 is_stmt 0 view .LVU105
 416 0058 02EB8202 		add	r2, r2, r2, lsl #2
 417 005c 5700     		lsls	r7, r2, #1
 418              		.loc 1 117 45 view .LVU106
 419 005e DB1B     		subs	r3, r3, r7
 420              		.loc 1 117 62 view .LVU107
 421 0060 154F     		ldr	r7, .L18+12
 422 0062 A7FB03E2 		umull	lr, r2, r7, r3
 423 0066 9209     		lsrs	r2, r2, #6
 424 0068 4FF47A7E 		mov	lr, #1000
 425 006c 0EFB1232 		mls	r2, lr, r2, r3
 426              		.loc 1 117 68 view .LVU108
 427 0070 A5FB0252 		umull	r5, r2, r5, r2
 428 0074 5209     		lsrs	r2, r2, #5
 429              		.loc 1 117 21 view .LVU109
 430 0076 8260     		str	r2, [r0, #8]
 118:CONTROL/Src/current.c ****         pid_5[i][1] = ((temp[i]- pid_5[i][4]- pid_5[i][3]*10-pid_5[i][2]*100)%10000)/1000;
 431              		.loc 1 118 9 is_stmt 1 view .LVU110
 432              		.loc 1 118 61 is_stmt 0 view .LVU111
 433 0078 06FB1233 		mls	r3, r6, r2, r3
 434              		.loc 1 118 78 view .LVU112
 435 007c 0F4D     		ldr	r5, .L18+16
 436 007e A5FB0362 		umull	r6, r2, r5, r3
 437 0082 520B     		lsrs	r2, r2, #13
 438 0084 42F21076 		movw	r6, #10000
 439 0088 06FB1232 		mls	r2, r6, r2, r3
 440              		.loc 1 118 85 view .LVU113
 441 008c A7FB0272 		umull	r7, r2, r7, r2
 442 0090 9209     		lsrs	r2, r2, #6
 443              		.loc 1 118 21 view .LVU114
 444 0092 4260     		str	r2, [r0, #4]
 119:CONTROL/Src/current.c ****         pid_5[i][0] = (temp[i]- pid_5[i][4]- pid_5[i][3]*10-pid_5[i][2]*100-pid_5[i][1]*1000)/10000
 445              		.loc 1 119 9 is_stmt 1 view .LVU115
 446              		.loc 1 119 76 is_stmt 0 view .LVU116
 447 0094 0EFB1233 		mls	r3, lr, r2, r3
 448              		.loc 1 119 94 view .LVU117
 449 0098 A5FB0353 		umull	r5, r3, r5, r3
 450 009c 5B0B     		lsrs	r3, r3, #13
 451              		.loc 1 119 21 view .LVU118
 452 009e 44F80C30 		str	r3, [r4, ip]
 113:CONTROL/Src/current.c ****     {
 453              		.loc 1 113 22 is_stmt 1 discriminator 3 view .LVU119
 454 00a2 0131     		adds	r1, r1, #1
 455              	.LVL13:
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 11


 456              	.L15:
 113:CONTROL/Src/current.c ****     {
 457              		.loc 1 113 18 discriminator 1 view .LVU120
 458 00a4 0229     		cmp	r1, #2
 459 00a6 B6DD     		ble	.L16
 460              	.LBE11:
 120:CONTROL/Src/current.c ****     }   
 121:CONTROL/Src/current.c **** }
 461              		.loc 1 121 1 is_stmt 0 view .LVU121
 462 00a8 05B0     		add	sp, sp, #20
 463              	.LCFI8:
 464              		.cfi_def_cfa_offset 20
 465              		@ sp needed
 466 00aa F0BD     		pop	{r4, r5, r6, r7, pc}
 467              	.L19:
 468              		.align	2
 469              	.L18:
 470 00ac CDCCCCCC 		.word	-858993459
 471 00b0 00000000 		.word	pid_5
 472 00b4 1F85EB51 		.word	1374389535
 473 00b8 D34D6210 		.word	274877907
 474 00bc 5917B7D1 		.word	-776530087
 475              		.cfi_endproc
 476              	.LFE275:
 478              		.global	__aeabi_f2d
 479              		.global	__aeabi_dmul
 480              		.global	__aeabi_dadd
 481              		.global	__aeabi_d2f
 482              		.section	.text.UPDATE_IREF_RATO_PID,"ax",%progbits
 483              		.align	1
 484              		.global	UPDATE_IREF_RATO_PID
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 489              	UPDATE_IREF_RATO_PID:
 490              	.LFB276:
 122:CONTROL/Src/current.c **** 
 123:CONTROL/Src/current.c **** //将按键的存储值赋给计算用的值
 124:CONTROL/Src/current.c **** void UPDATE_IREF_RATO_PID(void)
 125:CONTROL/Src/current.c **** {
 491              		.loc 1 125 1 is_stmt 1 view -0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495 0000 D0B5     		push	{r4, r6, r7, lr}
 496              	.LCFI9:
 497              		.cfi_def_cfa_offset 16
 498              		.cfi_offset 4, -16
 499              		.cfi_offset 6, -12
 500              		.cfi_offset 7, -8
 501              		.cfi_offset 14, -4
 126:CONTROL/Src/current.c ****     rato = (float32_t)(rato_num[0]) + (float32_t)(rato_num[1])*0.1 + (float32_t)(rato_num[2])*0.01;
 502              		.loc 1 126 5 view .LVU123
 503              		.loc 1 126 32 is_stmt 0 view .LVU124
 504 0002 554C     		ldr	r4, .L22+32
 505              		.loc 1 126 12 view .LVU125
 506 0004 D4ED007A 		vldr.32	s15, [r4]	@ int
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 12


 507 0008 F8EE677A 		vcvt.f32.u32	s15, s15
 508 000c 17EE900A 		vmov	r0, s15
 509 0010 FFF7FEFF 		bl	__aeabi_f2d
 510              	.LVL14:
 511 0014 0646     		mov	r6, r0
 512 0016 0F46     		mov	r7, r1
 513              		.loc 1 126 39 view .LVU126
 514 0018 D4ED017A 		vldr.32	s15, [r4, #4]	@ int
 515 001c F8EE677A 		vcvt.f32.u32	s15, s15
 516 0020 17EE900A 		vmov	r0, s15
 517 0024 FFF7FEFF 		bl	__aeabi_f2d
 518              	.LVL15:
 519              		.loc 1 126 63 view .LVU127
 520 0028 43A3     		adr	r3, .L22
 521 002a D3E90023 		ldrd	r2, [r3]
 522 002e FFF7FEFF 		bl	__aeabi_dmul
 523              	.LVL16:
 524 0032 0246     		mov	r2, r0
 525 0034 0B46     		mov	r3, r1
 526              		.loc 1 126 37 view .LVU128
 527 0036 3046     		mov	r0, r6
 528 0038 3946     		mov	r1, r7
 529 003a FFF7FEFF 		bl	__aeabi_dadd
 530              	.LVL17:
 531 003e 0646     		mov	r6, r0
 532 0040 0F46     		mov	r7, r1
 533              		.loc 1 126 90 view .LVU129
 534 0042 A068     		ldr	r0, [r4, #8]
 535              		.loc 1 126 70 view .LVU130
 536 0044 07EE900A 		vmov	s15, r0	@ int
 537 0048 F8EE677A 		vcvt.f32.u32	s15, s15
 538 004c 17EE900A 		vmov	r0, s15
 539 0050 FFF7FEFF 		bl	__aeabi_f2d
 540              	.LVL18:
 541              		.loc 1 126 94 view .LVU131
 542 0054 3AA3     		adr	r3, .L22+8
 543 0056 D3E90023 		ldrd	r2, [r3]
 544 005a FFF7FEFF 		bl	__aeabi_dmul
 545              	.LVL19:
 546 005e 0246     		mov	r2, r0
 547 0060 0B46     		mov	r3, r1
 548              		.loc 1 126 68 view .LVU132
 549 0062 3046     		mov	r0, r6
 550 0064 3946     		mov	r1, r7
 551 0066 FFF7FEFF 		bl	__aeabi_dadd
 552              	.LVL20:
 553 006a FFF7FEFF 		bl	__aeabi_d2f
 554              	.LVL21:
 555              		.loc 1 126 10 view .LVU133
 556 006e 3B4B     		ldr	r3, .L22+36
 557 0070 1860     		str	r0, [r3]	@ float
 127:CONTROL/Src/current.c ****     I_ref = (float32_t)(current_num[0]) + (float32_t)(current_num[1])*0.1 + (float32_t)(current_num
 558              		.loc 1 127 5 is_stmt 1 view .LVU134
 559              		.loc 1 127 36 is_stmt 0 view .LVU135
 560 0072 3B4C     		ldr	r4, .L22+40
 561              		.loc 1 127 13 view .LVU136
 562 0074 D4ED007A 		vldr.32	s15, [r4]	@ int
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 13


 563 0078 F8EE677A 		vcvt.f32.u32	s15, s15
 564 007c 17EE900A 		vmov	r0, s15
 565 0080 FFF7FEFF 		bl	__aeabi_f2d
 566              	.LVL22:
 567 0084 0646     		mov	r6, r0
 568 0086 0F46     		mov	r7, r1
 569              		.loc 1 127 43 view .LVU137
 570 0088 D4ED017A 		vldr.32	s15, [r4, #4]	@ int
 571 008c F8EE677A 		vcvt.f32.u32	s15, s15
 572 0090 17EE900A 		vmov	r0, s15
 573 0094 FFF7FEFF 		bl	__aeabi_f2d
 574              	.LVL23:
 575              		.loc 1 127 70 view .LVU138
 576 0098 27A3     		adr	r3, .L22
 577 009a D3E90023 		ldrd	r2, [r3]
 578 009e FFF7FEFF 		bl	__aeabi_dmul
 579              	.LVL24:
 580 00a2 0246     		mov	r2, r0
 581 00a4 0B46     		mov	r3, r1
 582              		.loc 1 127 41 view .LVU139
 583 00a6 3046     		mov	r0, r6
 584 00a8 3946     		mov	r1, r7
 585 00aa FFF7FEFF 		bl	__aeabi_dadd
 586              	.LVL25:
 587 00ae 0646     		mov	r6, r0
 588 00b0 0F46     		mov	r7, r1
 589              		.loc 1 127 77 view .LVU140
 590 00b2 D4ED027A 		vldr.32	s15, [r4, #8]	@ int
 591 00b6 F8EE677A 		vcvt.f32.u32	s15, s15
 592 00ba 17EE900A 		vmov	r0, s15
 593 00be FFF7FEFF 		bl	__aeabi_f2d
 594              	.LVL26:
 595              		.loc 1 127 104 view .LVU141
 596 00c2 1FA3     		adr	r3, .L22+8
 597 00c4 D3E90023 		ldrd	r2, [r3]
 598 00c8 FFF7FEFF 		bl	__aeabi_dmul
 599              	.LVL27:
 600 00cc 0246     		mov	r2, r0
 601 00ce 0B46     		mov	r3, r1
 602              		.loc 1 127 75 view .LVU142
 603 00d0 3046     		mov	r0, r6
 604 00d2 3946     		mov	r1, r7
 605 00d4 FFF7FEFF 		bl	__aeabi_dadd
 606              	.LVL28:
 607 00d8 0646     		mov	r6, r0
 608 00da 0F46     		mov	r7, r1
 609              		.loc 1 127 112 view .LVU143
 610 00dc D4ED037A 		vldr.32	s15, [r4, #12]	@ int
 611 00e0 F8EE677A 		vcvt.f32.u32	s15, s15
 612 00e4 17EE900A 		vmov	r0, s15
 613 00e8 FFF7FEFF 		bl	__aeabi_f2d
 614              	.LVL29:
 615              		.loc 1 127 139 view .LVU144
 616 00ec 16A3     		adr	r3, .L22+16
 617 00ee D3E90023 		ldrd	r2, [r3]
 618 00f2 FFF7FEFF 		bl	__aeabi_dmul
 619              	.LVL30:
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 14


 620 00f6 0246     		mov	r2, r0
 621 00f8 0B46     		mov	r3, r1
 622              		.loc 1 127 110 view .LVU145
 623 00fa 3046     		mov	r0, r6
 624 00fc 3946     		mov	r1, r7
 625 00fe FFF7FEFF 		bl	__aeabi_dadd
 626              	.LVL31:
 627 0102 0646     		mov	r6, r0
 628 0104 0F46     		mov	r7, r1
 629              		.loc 1 127 170 view .LVU146
 630 0106 2069     		ldr	r0, [r4, #16]
 631              		.loc 1 127 148 view .LVU147
 632 0108 07EE900A 		vmov	s15, r0	@ int
 633 010c F8EE677A 		vcvt.f32.u32	s15, s15
 634 0110 17EE900A 		vmov	r0, s15
 635 0114 FFF7FEFF 		bl	__aeabi_f2d
 636              	.LVL32:
 637              		.loc 1 127 173 view .LVU148
 638 0118 0DA3     		adr	r3, .L22+24
 639 011a D3E90023 		ldrd	r2, [r3]
 640 011e FFF7FEFF 		bl	__aeabi_dmul
 641              	.LVL33:
 642 0122 0246     		mov	r2, r0
 643 0124 0B46     		mov	r3, r1
 644              		.loc 1 127 146 view .LVU149
 645 0126 3046     		mov	r0, r6
 646 0128 3946     		mov	r1, r7
 647 012a FFF7FEFF 		bl	__aeabi_dadd
 648              	.LVL34:
 649 012e FFF7FEFF 		bl	__aeabi_d2f
 650              	.LVL35:
 651              		.loc 1 127 11 view .LVU150
 652 0132 0C4B     		ldr	r3, .L22+44
 653 0134 1860     		str	r0, [r3]	@ float
 128:CONTROL/Src/current.c **** }
 654              		.loc 1 128 1 view .LVU151
 655 0136 D0BD     		pop	{r4, r6, r7, pc}
 656              	.L23:
 657              		.align	3
 658              	.L22:
 659 0138 9A999999 		.word	-1717986918
 660 013c 9999B93F 		.word	1069128089
 661 0140 7B14AE47 		.word	1202590843
 662 0144 E17A843F 		.word	1065646817
 663 0148 FCA9F1D2 		.word	-755914244
 664 014c 4D62503F 		.word	1062232653
 665 0150 2D431CEB 		.word	-350469331
 666 0154 E2361A3F 		.word	1058682594
 667 0158 00000000 		.word	rato_num
 668 015c 00000000 		.word	rato
 669 0160 00000000 		.word	current_num
 670 0164 00000000 		.word	I_ref
 671              		.cfi_endproc
 672              	.LFE276:
 674              		.section	.text.UPDATE_CURRENT_PID,"ax",%progbits
 675              		.align	1
 676              		.global	UPDATE_CURRENT_PID
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 15


 677              		.syntax unified
 678              		.thumb
 679              		.thumb_func
 681              	UPDATE_CURRENT_PID:
 682              	.LFB277:
 129:CONTROL/Src/current.c **** 
 130:CONTROL/Src/current.c **** void UPDATE_CURRENT_PID(void)
 131:CONTROL/Src/current.c **** {
 683              		.loc 1 131 1 is_stmt 1 view -0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 688              	.LCFI10:
 689              		.cfi_def_cfa_offset 24
 690              		.cfi_offset 3, -24
 691              		.cfi_offset 4, -20
 692              		.cfi_offset 5, -16
 693              		.cfi_offset 6, -12
 694              		.cfi_offset 7, -8
 695              		.cfi_offset 14, -4
 696 0002 2DED028B 		vpush.64	{d8}
 697              	.LCFI11:
 698              		.cfi_def_cfa_offset 32
 699              		.cfi_offset 80, -32
 700              		.cfi_offset 81, -28
 132:CONTROL/Src/current.c ****     S_3.Kp = (float32_t)(pid_3[0][0])*100 + (float32_t)(pid_3[0][1])*10 + (float32_t)(pid_3[0][2]) 
 701              		.loc 1 132 5 view .LVU153
 702              		.loc 1 132 34 is_stmt 0 view .LVU154
 703 0006 8A4C     		ldr	r4, .L26+32
 704              		.loc 1 132 14 view .LVU155
 705 0008 D4ED007A 		vldr.32	s15, [r4]	@ int
 706 000c F8EE677A 		vcvt.f32.u32	s15, s15
 707              		.loc 1 132 38 view .LVU156
 708 0010 9FED887A 		vldr.32	s14, .L26+36
 709 0014 67EE877A 		vmul.f32	s15, s15, s14
 710              		.loc 1 132 45 view .LVU157
 711 0018 94ED017A 		vldr.32	s14, [r4, #4]	@ int
 712 001c B8EE477A 		vcvt.f32.u32	s14, s14
 713              		.loc 1 132 69 view .LVU158
 714 0020 B2EE048A 		vmov.f32	s16, #1.0e+1
 715 0024 27EE087A 		vmul.f32	s14, s14, s16
 716              		.loc 1 132 43 view .LVU159
 717 0028 77EE877A 		vadd.f32	s15, s15, s14
 718              		.loc 1 132 75 view .LVU160
 719 002c 94ED027A 		vldr.32	s14, [r4, #8]	@ int
 720 0030 B8EE477A 		vcvt.f32.u32	s14, s14
 721              		.loc 1 132 73 view .LVU161
 722 0034 77EE877A 		vadd.f32	s15, s15, s14
 723 0038 17EE900A 		vmov	r0, s15
 724 003c FFF7FEFF 		bl	__aeabi_f2d
 725              	.LVL36:
 726 0040 0646     		mov	r6, r0
 727 0042 0F46     		mov	r7, r1
 728              		.loc 1 132 102 view .LVU162
 729 0044 D4ED037A 		vldr.32	s15, [r4, #12]	@ int
 730 0048 F8EE677A 		vcvt.f32.u32	s15, s15
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 16


 731 004c 17EE900A 		vmov	r0, s15
 732 0050 FFF7FEFF 		bl	__aeabi_f2d
 733              	.LVL37:
 734              		.loc 1 132 126 view .LVU163
 735 0054 6EA3     		adr	r3, .L26
 736 0056 D3E90023 		ldrd	r2, [r3]
 737 005a FFF7FEFF 		bl	__aeabi_dmul
 738              	.LVL38:
 739 005e 0246     		mov	r2, r0
 740 0060 0B46     		mov	r3, r1
 741              		.loc 1 132 100 view .LVU164
 742 0062 3046     		mov	r0, r6
 743 0064 3946     		mov	r1, r7
 744 0066 FFF7FEFF 		bl	__aeabi_dadd
 745              	.LVL39:
 746 006a 0646     		mov	r6, r0
 747 006c 0F46     		mov	r7, r1
 748              		.loc 1 132 133 view .LVU165
 749 006e D4ED047A 		vldr.32	s15, [r4, #16]	@ int
 750 0072 F8EE677A 		vcvt.f32.u32	s15, s15
 751 0076 17EE900A 		vmov	r0, s15
 752 007a FFF7FEFF 		bl	__aeabi_f2d
 753              	.LVL40:
 754              		.loc 1 132 157 view .LVU166
 755 007e 66A3     		adr	r3, .L26+8
 756 0080 D3E90023 		ldrd	r2, [r3]
 757 0084 FFF7FEFF 		bl	__aeabi_dmul
 758              	.LVL41:
 759 0088 0246     		mov	r2, r0
 760 008a 0B46     		mov	r3, r1
 761              		.loc 1 132 131 view .LVU167
 762 008c 3046     		mov	r0, r6
 763 008e 3946     		mov	r1, r7
 764 0090 FFF7FEFF 		bl	__aeabi_dadd
 765              	.LVL42:
 766 0094 FFF7FEFF 		bl	__aeabi_d2f
 767              	.LVL43:
 768              		.loc 1 132 12 view .LVU168
 769 0098 674D     		ldr	r5, .L26+40
 770 009a A861     		str	r0, [r5, #24]	@ float
 133:CONTROL/Src/current.c ****     S_3.Ki = (float32_t)(pid_3[1][0])*10 + (float32_t)(pid_3[1][1]) + (float32_t)(pid_3[1][2])*0.1 
 771              		.loc 1 133 5 is_stmt 1 view .LVU169
 772              		.loc 1 133 14 is_stmt 0 view .LVU170
 773 009c D4ED057A 		vldr.32	s15, [r4, #20]	@ int
 774 00a0 F8EE677A 		vcvt.f32.u32	s15, s15
 775              		.loc 1 133 38 view .LVU171
 776 00a4 67EE887A 		vmul.f32	s15, s15, s16
 777              		.loc 1 133 44 view .LVU172
 778 00a8 94ED067A 		vldr.32	s14, [r4, #24]	@ int
 779 00ac B8EE477A 		vcvt.f32.u32	s14, s14
 780              		.loc 1 133 42 view .LVU173
 781 00b0 77EE877A 		vadd.f32	s15, s15, s14
 782 00b4 17EE900A 		vmov	r0, s15
 783 00b8 FFF7FEFF 		bl	__aeabi_f2d
 784              	.LVL44:
 785 00bc 0646     		mov	r6, r0
 786 00be 0F46     		mov	r7, r1
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 17


 787              		.loc 1 133 71 view .LVU174
 788 00c0 D4ED077A 		vldr.32	s15, [r4, #28]	@ int
 789 00c4 F8EE677A 		vcvt.f32.u32	s15, s15
 790 00c8 17EE900A 		vmov	r0, s15
 791 00cc FFF7FEFF 		bl	__aeabi_f2d
 792              	.LVL45:
 793              		.loc 1 133 95 view .LVU175
 794 00d0 4FA3     		adr	r3, .L26
 795 00d2 D3E90023 		ldrd	r2, [r3]
 796 00d6 FFF7FEFF 		bl	__aeabi_dmul
 797              	.LVL46:
 798 00da 0246     		mov	r2, r0
 799 00dc 0B46     		mov	r3, r1
 800              		.loc 1 133 69 view .LVU176
 801 00de 3046     		mov	r0, r6
 802 00e0 3946     		mov	r1, r7
 803 00e2 FFF7FEFF 		bl	__aeabi_dadd
 804              	.LVL47:
 805 00e6 0646     		mov	r6, r0
 806 00e8 0F46     		mov	r7, r1
 807              		.loc 1 133 102 view .LVU177
 808 00ea D4ED087A 		vldr.32	s15, [r4, #32]	@ int
 809 00ee F8EE677A 		vcvt.f32.u32	s15, s15
 810 00f2 17EE900A 		vmov	r0, s15
 811 00f6 FFF7FEFF 		bl	__aeabi_f2d
 812              	.LVL48:
 813              		.loc 1 133 126 view .LVU178
 814 00fa 47A3     		adr	r3, .L26+8
 815 00fc D3E90023 		ldrd	r2, [r3]
 816 0100 FFF7FEFF 		bl	__aeabi_dmul
 817              	.LVL49:
 818 0104 0246     		mov	r2, r0
 819 0106 0B46     		mov	r3, r1
 820              		.loc 1 133 100 view .LVU179
 821 0108 3046     		mov	r0, r6
 822 010a 3946     		mov	r1, r7
 823 010c FFF7FEFF 		bl	__aeabi_dadd
 824              	.LVL50:
 825 0110 0646     		mov	r6, r0
 826 0112 0F46     		mov	r7, r1
 827              		.loc 1 133 134 view .LVU180
 828 0114 D4ED097A 		vldr.32	s15, [r4, #36]	@ int
 829 0118 F8EE677A 		vcvt.f32.u32	s15, s15
 830 011c 17EE900A 		vmov	r0, s15
 831 0120 FFF7FEFF 		bl	__aeabi_f2d
 832              	.LVL51:
 833              		.loc 1 133 158 view .LVU181
 834 0124 3EA3     		adr	r3, .L26+16
 835 0126 D3E90023 		ldrd	r2, [r3]
 836 012a FFF7FEFF 		bl	__aeabi_dmul
 837              	.LVL52:
 838 012e 0246     		mov	r2, r0
 839 0130 0B46     		mov	r3, r1
 840              		.loc 1 133 132 view .LVU182
 841 0132 3046     		mov	r0, r6
 842 0134 3946     		mov	r1, r7
 843 0136 FFF7FEFF 		bl	__aeabi_dadd
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 18


 844              	.LVL53:
 845 013a FFF7FEFF 		bl	__aeabi_d2f
 846              	.LVL54:
 847              		.loc 1 133 12 view .LVU183
 848 013e E861     		str	r0, [r5, #28]	@ float
 134:CONTROL/Src/current.c ****     S_3.Kd = (float32_t)(pid_3[2][0]) + (float32_t)(pid_3[2][1])*0.1 + (float32_t)(pid_3[2][2])*0.0
 849              		.loc 1 134 5 is_stmt 1 view .LVU184
 850              		.loc 1 134 14 is_stmt 0 view .LVU185
 851 0140 D4ED0A7A 		vldr.32	s15, [r4, #40]	@ int
 852 0144 F8EE677A 		vcvt.f32.u32	s15, s15
 853 0148 17EE900A 		vmov	r0, s15
 854 014c FFF7FEFF 		bl	__aeabi_f2d
 855              	.LVL55:
 856 0150 0646     		mov	r6, r0
 857 0152 0F46     		mov	r7, r1
 858              		.loc 1 134 41 view .LVU186
 859 0154 D4ED0B7A 		vldr.32	s15, [r4, #44]	@ int
 860 0158 F8EE677A 		vcvt.f32.u32	s15, s15
 861 015c 17EE900A 		vmov	r0, s15
 862 0160 FFF7FEFF 		bl	__aeabi_f2d
 863              	.LVL56:
 864              		.loc 1 134 65 view .LVU187
 865 0164 2AA3     		adr	r3, .L26
 866 0166 D3E90023 		ldrd	r2, [r3]
 867 016a FFF7FEFF 		bl	__aeabi_dmul
 868              	.LVL57:
 869 016e 0246     		mov	r2, r0
 870 0170 0B46     		mov	r3, r1
 871              		.loc 1 134 39 view .LVU188
 872 0172 3046     		mov	r0, r6
 873 0174 3946     		mov	r1, r7
 874 0176 FFF7FEFF 		bl	__aeabi_dadd
 875              	.LVL58:
 876 017a 0646     		mov	r6, r0
 877 017c 0F46     		mov	r7, r1
 878              		.loc 1 134 72 view .LVU189
 879 017e D4ED0C7A 		vldr.32	s15, [r4, #48]	@ int
 880 0182 F8EE677A 		vcvt.f32.u32	s15, s15
 881 0186 17EE900A 		vmov	r0, s15
 882 018a FFF7FEFF 		bl	__aeabi_f2d
 883              	.LVL59:
 884              		.loc 1 134 96 view .LVU190
 885 018e 22A3     		adr	r3, .L26+8
 886 0190 D3E90023 		ldrd	r2, [r3]
 887 0194 FFF7FEFF 		bl	__aeabi_dmul
 888              	.LVL60:
 889 0198 0246     		mov	r2, r0
 890 019a 0B46     		mov	r3, r1
 891              		.loc 1 134 70 view .LVU191
 892 019c 3046     		mov	r0, r6
 893 019e 3946     		mov	r1, r7
 894 01a0 FFF7FEFF 		bl	__aeabi_dadd
 895              	.LVL61:
 896 01a4 0646     		mov	r6, r0
 897 01a6 0F46     		mov	r7, r1
 898              		.loc 1 134 104 view .LVU192
 899 01a8 D4ED0D7A 		vldr.32	s15, [r4, #52]	@ int
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 19


 900 01ac F8EE677A 		vcvt.f32.u32	s15, s15
 901 01b0 17EE900A 		vmov	r0, s15
 902 01b4 FFF7FEFF 		bl	__aeabi_f2d
 903              	.LVL62:
 904              		.loc 1 134 128 view .LVU193
 905 01b8 19A3     		adr	r3, .L26+16
 906 01ba D3E90023 		ldrd	r2, [r3]
 907 01be FFF7FEFF 		bl	__aeabi_dmul
 908              	.LVL63:
 909 01c2 0246     		mov	r2, r0
 910 01c4 0B46     		mov	r3, r1
 911              		.loc 1 134 102 view .LVU194
 912 01c6 3046     		mov	r0, r6
 913 01c8 3946     		mov	r1, r7
 914 01ca FFF7FEFF 		bl	__aeabi_dadd
 915              	.LVL64:
 916 01ce 0646     		mov	r6, r0
 917 01d0 0F46     		mov	r7, r1
 918              		.loc 1 134 157 view .LVU195
 919 01d2 A06B     		ldr	r0, [r4, #56]
 920              		.loc 1 134 137 view .LVU196
 921 01d4 07EE900A 		vmov	s15, r0	@ int
 922 01d8 F8EE677A 		vcvt.f32.u32	s15, s15
 923 01dc 17EE900A 		vmov	r0, s15
 924 01e0 FFF7FEFF 		bl	__aeabi_f2d
 925              	.LVL65:
 926              		.loc 1 134 161 view .LVU197
 927 01e4 10A3     		adr	r3, .L26+24
 928 01e6 D3E90023 		ldrd	r2, [r3]
 929 01ea FFF7FEFF 		bl	__aeabi_dmul
 930              	.LVL66:
 931 01ee 0246     		mov	r2, r0
 932 01f0 0B46     		mov	r3, r1
 933              		.loc 1 134 135 view .LVU198
 934 01f2 3046     		mov	r0, r6
 935 01f4 3946     		mov	r1, r7
 936 01f6 FFF7FEFF 		bl	__aeabi_dadd
 937              	.LVL67:
 938 01fa FFF7FEFF 		bl	__aeabi_d2f
 939              	.LVL68:
 940              		.loc 1 134 12 view .LVU199
 941 01fe 2862     		str	r0, [r5, #32]	@ float
 135:CONTROL/Src/current.c ****     arm_pid_init_f32(&S_3, 0);
 942              		.loc 1 135 5 is_stmt 1 view .LVU200
 943 0200 0021     		movs	r1, #0
 944 0202 2846     		mov	r0, r5
 945 0204 FFF7FEFF 		bl	arm_pid_init_f32
 946              	.LVL69:
 136:CONTROL/Src/current.c **** }
 947              		.loc 1 136 1 is_stmt 0 view .LVU201
 948 0208 BDEC028B 		vldm	sp!, {d8}
 949              	.LCFI12:
 950              		.cfi_restore 80
 951              		.cfi_restore 81
 952              		.cfi_def_cfa_offset 24
 953 020c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 954              	.L27:
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 20


 955 020e 00BF     		.align	3
 956              	.L26:
 957 0210 9A999999 		.word	-1717986918
 958 0214 9999B93F 		.word	1069128089
 959 0218 7B14AE47 		.word	1202590843
 960 021c E17A843F 		.word	1065646817
 961 0220 FCA9F1D2 		.word	-755914244
 962 0224 4D62503F 		.word	1062232653
 963 0228 2D431CEB 		.word	-350469331
 964 022c E2361A3F 		.word	1058682594
 965 0230 00000000 		.word	pid_3
 966 0234 0000C842 		.word	1120403456
 967 0238 00000000 		.word	S_3
 968              		.cfi_endproc
 969              	.LFE277:
 971              		.section	.text.UPDATE_PHASE_PID,"ax",%progbits
 972              		.align	1
 973              		.global	UPDATE_PHASE_PID
 974              		.syntax unified
 975              		.thumb
 976              		.thumb_func
 978              	UPDATE_PHASE_PID:
 979              	.LFB278:
 137:CONTROL/Src/current.c **** 
 138:CONTROL/Src/current.c **** void UPDATE_PHASE_PID(void)
 139:CONTROL/Src/current.c **** {
 980              		.loc 1 139 1 is_stmt 1 view -0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 985              	.LCFI13:
 986              		.cfi_def_cfa_offset 24
 987              		.cfi_offset 3, -24
 988              		.cfi_offset 4, -20
 989              		.cfi_offset 5, -16
 990              		.cfi_offset 6, -12
 991              		.cfi_offset 7, -8
 992              		.cfi_offset 14, -4
 993 0002 2DED028B 		vpush.64	{d8}
 994              	.LCFI14:
 995              		.cfi_def_cfa_offset 32
 996              		.cfi_offset 80, -32
 997              		.cfi_offset 81, -28
 140:CONTROL/Src/current.c ****     S_5.Kp = (float32_t)(pid_5[0][0])*100 + (float32_t)(pid_5[0][1])*10 + (float32_t)(pid_5[0][2]) 
 998              		.loc 1 140 5 view .LVU203
 999              		.loc 1 140 34 is_stmt 0 view .LVU204
 1000 0006 8A4C     		ldr	r4, .L30+32
 1001              		.loc 1 140 14 view .LVU205
 1002 0008 D4ED007A 		vldr.32	s15, [r4]	@ int
 1003 000c F8EE677A 		vcvt.f32.u32	s15, s15
 1004              		.loc 1 140 38 view .LVU206
 1005 0010 9FED887A 		vldr.32	s14, .L30+36
 1006 0014 67EE877A 		vmul.f32	s15, s15, s14
 1007              		.loc 1 140 45 view .LVU207
 1008 0018 94ED017A 		vldr.32	s14, [r4, #4]	@ int
 1009 001c B8EE477A 		vcvt.f32.u32	s14, s14
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 21


 1010              		.loc 1 140 69 view .LVU208
 1011 0020 B2EE048A 		vmov.f32	s16, #1.0e+1
 1012 0024 27EE087A 		vmul.f32	s14, s14, s16
 1013              		.loc 1 140 43 view .LVU209
 1014 0028 77EE877A 		vadd.f32	s15, s15, s14
 1015              		.loc 1 140 75 view .LVU210
 1016 002c 94ED027A 		vldr.32	s14, [r4, #8]	@ int
 1017 0030 B8EE477A 		vcvt.f32.u32	s14, s14
 1018              		.loc 1 140 73 view .LVU211
 1019 0034 77EE877A 		vadd.f32	s15, s15, s14
 1020 0038 17EE900A 		vmov	r0, s15
 1021 003c FFF7FEFF 		bl	__aeabi_f2d
 1022              	.LVL70:
 1023 0040 0646     		mov	r6, r0
 1024 0042 0F46     		mov	r7, r1
 1025              		.loc 1 140 102 view .LVU212
 1026 0044 D4ED037A 		vldr.32	s15, [r4, #12]	@ int
 1027 0048 F8EE677A 		vcvt.f32.u32	s15, s15
 1028 004c 17EE900A 		vmov	r0, s15
 1029 0050 FFF7FEFF 		bl	__aeabi_f2d
 1030              	.LVL71:
 1031              		.loc 1 140 126 view .LVU213
 1032 0054 6EA3     		adr	r3, .L30
 1033 0056 D3E90023 		ldrd	r2, [r3]
 1034 005a FFF7FEFF 		bl	__aeabi_dmul
 1035              	.LVL72:
 1036 005e 0246     		mov	r2, r0
 1037 0060 0B46     		mov	r3, r1
 1038              		.loc 1 140 100 view .LVU214
 1039 0062 3046     		mov	r0, r6
 1040 0064 3946     		mov	r1, r7
 1041 0066 FFF7FEFF 		bl	__aeabi_dadd
 1042              	.LVL73:
 1043 006a 0646     		mov	r6, r0
 1044 006c 0F46     		mov	r7, r1
 1045              		.loc 1 140 133 view .LVU215
 1046 006e D4ED047A 		vldr.32	s15, [r4, #16]	@ int
 1047 0072 F8EE677A 		vcvt.f32.u32	s15, s15
 1048 0076 17EE900A 		vmov	r0, s15
 1049 007a FFF7FEFF 		bl	__aeabi_f2d
 1050              	.LVL74:
 1051              		.loc 1 140 157 view .LVU216
 1052 007e 66A3     		adr	r3, .L30+8
 1053 0080 D3E90023 		ldrd	r2, [r3]
 1054 0084 FFF7FEFF 		bl	__aeabi_dmul
 1055              	.LVL75:
 1056 0088 0246     		mov	r2, r0
 1057 008a 0B46     		mov	r3, r1
 1058              		.loc 1 140 131 view .LVU217
 1059 008c 3046     		mov	r0, r6
 1060 008e 3946     		mov	r1, r7
 1061 0090 FFF7FEFF 		bl	__aeabi_dadd
 1062              	.LVL76:
 1063 0094 FFF7FEFF 		bl	__aeabi_d2f
 1064              	.LVL77:
 1065              		.loc 1 140 12 view .LVU218
 1066 0098 674D     		ldr	r5, .L30+40
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 22


 1067 009a A861     		str	r0, [r5, #24]	@ float
 141:CONTROL/Src/current.c ****     S_5.Ki = (float32_t)(pid_5[1][0])*10 + (float32_t)(pid_5[1][1]) + (float32_t)(pid_5[1][2])*0.1 
 1068              		.loc 1 141 5 is_stmt 1 view .LVU219
 1069              		.loc 1 141 14 is_stmt 0 view .LVU220
 1070 009c D4ED057A 		vldr.32	s15, [r4, #20]	@ int
 1071 00a0 F8EE677A 		vcvt.f32.u32	s15, s15
 1072              		.loc 1 141 38 view .LVU221
 1073 00a4 67EE887A 		vmul.f32	s15, s15, s16
 1074              		.loc 1 141 44 view .LVU222
 1075 00a8 94ED067A 		vldr.32	s14, [r4, #24]	@ int
 1076 00ac B8EE477A 		vcvt.f32.u32	s14, s14
 1077              		.loc 1 141 42 view .LVU223
 1078 00b0 77EE877A 		vadd.f32	s15, s15, s14
 1079 00b4 17EE900A 		vmov	r0, s15
 1080 00b8 FFF7FEFF 		bl	__aeabi_f2d
 1081              	.LVL78:
 1082 00bc 0646     		mov	r6, r0
 1083 00be 0F46     		mov	r7, r1
 1084              		.loc 1 141 71 view .LVU224
 1085 00c0 D4ED077A 		vldr.32	s15, [r4, #28]	@ int
 1086 00c4 F8EE677A 		vcvt.f32.u32	s15, s15
 1087 00c8 17EE900A 		vmov	r0, s15
 1088 00cc FFF7FEFF 		bl	__aeabi_f2d
 1089              	.LVL79:
 1090              		.loc 1 141 95 view .LVU225
 1091 00d0 4FA3     		adr	r3, .L30
 1092 00d2 D3E90023 		ldrd	r2, [r3]
 1093 00d6 FFF7FEFF 		bl	__aeabi_dmul
 1094              	.LVL80:
 1095 00da 0246     		mov	r2, r0
 1096 00dc 0B46     		mov	r3, r1
 1097              		.loc 1 141 69 view .LVU226
 1098 00de 3046     		mov	r0, r6
 1099 00e0 3946     		mov	r1, r7
 1100 00e2 FFF7FEFF 		bl	__aeabi_dadd
 1101              	.LVL81:
 1102 00e6 0646     		mov	r6, r0
 1103 00e8 0F46     		mov	r7, r1
 1104              		.loc 1 141 102 view .LVU227
 1105 00ea D4ED087A 		vldr.32	s15, [r4, #32]	@ int
 1106 00ee F8EE677A 		vcvt.f32.u32	s15, s15
 1107 00f2 17EE900A 		vmov	r0, s15
 1108 00f6 FFF7FEFF 		bl	__aeabi_f2d
 1109              	.LVL82:
 1110              		.loc 1 141 126 view .LVU228
 1111 00fa 47A3     		adr	r3, .L30+8
 1112 00fc D3E90023 		ldrd	r2, [r3]
 1113 0100 FFF7FEFF 		bl	__aeabi_dmul
 1114              	.LVL83:
 1115 0104 0246     		mov	r2, r0
 1116 0106 0B46     		mov	r3, r1
 1117              		.loc 1 141 100 view .LVU229
 1118 0108 3046     		mov	r0, r6
 1119 010a 3946     		mov	r1, r7
 1120 010c FFF7FEFF 		bl	__aeabi_dadd
 1121              	.LVL84:
 1122 0110 0646     		mov	r6, r0
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 23


 1123 0112 0F46     		mov	r7, r1
 1124              		.loc 1 141 134 view .LVU230
 1125 0114 D4ED097A 		vldr.32	s15, [r4, #36]	@ int
 1126 0118 F8EE677A 		vcvt.f32.u32	s15, s15
 1127 011c 17EE900A 		vmov	r0, s15
 1128 0120 FFF7FEFF 		bl	__aeabi_f2d
 1129              	.LVL85:
 1130              		.loc 1 141 158 view .LVU231
 1131 0124 3EA3     		adr	r3, .L30+16
 1132 0126 D3E90023 		ldrd	r2, [r3]
 1133 012a FFF7FEFF 		bl	__aeabi_dmul
 1134              	.LVL86:
 1135 012e 0246     		mov	r2, r0
 1136 0130 0B46     		mov	r3, r1
 1137              		.loc 1 141 132 view .LVU232
 1138 0132 3046     		mov	r0, r6
 1139 0134 3946     		mov	r1, r7
 1140 0136 FFF7FEFF 		bl	__aeabi_dadd
 1141              	.LVL87:
 1142 013a FFF7FEFF 		bl	__aeabi_d2f
 1143              	.LVL88:
 1144              		.loc 1 141 12 view .LVU233
 1145 013e E861     		str	r0, [r5, #28]	@ float
 142:CONTROL/Src/current.c ****     S_5.Kd = (float32_t)(pid_5[2][0]) + (float32_t)(pid_5[2][1])*0.1 + (float32_t)(pid_5[2][2])*0.0
 1146              		.loc 1 142 5 is_stmt 1 view .LVU234
 1147              		.loc 1 142 14 is_stmt 0 view .LVU235
 1148 0140 D4ED0A7A 		vldr.32	s15, [r4, #40]	@ int
 1149 0144 F8EE677A 		vcvt.f32.u32	s15, s15
 1150 0148 17EE900A 		vmov	r0, s15
 1151 014c FFF7FEFF 		bl	__aeabi_f2d
 1152              	.LVL89:
 1153 0150 0646     		mov	r6, r0
 1154 0152 0F46     		mov	r7, r1
 1155              		.loc 1 142 41 view .LVU236
 1156 0154 D4ED0B7A 		vldr.32	s15, [r4, #44]	@ int
 1157 0158 F8EE677A 		vcvt.f32.u32	s15, s15
 1158 015c 17EE900A 		vmov	r0, s15
 1159 0160 FFF7FEFF 		bl	__aeabi_f2d
 1160              	.LVL90:
 1161              		.loc 1 142 65 view .LVU237
 1162 0164 2AA3     		adr	r3, .L30
 1163 0166 D3E90023 		ldrd	r2, [r3]
 1164 016a FFF7FEFF 		bl	__aeabi_dmul
 1165              	.LVL91:
 1166 016e 0246     		mov	r2, r0
 1167 0170 0B46     		mov	r3, r1
 1168              		.loc 1 142 39 view .LVU238
 1169 0172 3046     		mov	r0, r6
 1170 0174 3946     		mov	r1, r7
 1171 0176 FFF7FEFF 		bl	__aeabi_dadd
 1172              	.LVL92:
 1173 017a 0646     		mov	r6, r0
 1174 017c 0F46     		mov	r7, r1
 1175              		.loc 1 142 72 view .LVU239
 1176 017e D4ED0C7A 		vldr.32	s15, [r4, #48]	@ int
 1177 0182 F8EE677A 		vcvt.f32.u32	s15, s15
 1178 0186 17EE900A 		vmov	r0, s15
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 24


 1179 018a FFF7FEFF 		bl	__aeabi_f2d
 1180              	.LVL93:
 1181              		.loc 1 142 96 view .LVU240
 1182 018e 22A3     		adr	r3, .L30+8
 1183 0190 D3E90023 		ldrd	r2, [r3]
 1184 0194 FFF7FEFF 		bl	__aeabi_dmul
 1185              	.LVL94:
 1186 0198 0246     		mov	r2, r0
 1187 019a 0B46     		mov	r3, r1
 1188              		.loc 1 142 70 view .LVU241
 1189 019c 3046     		mov	r0, r6
 1190 019e 3946     		mov	r1, r7
 1191 01a0 FFF7FEFF 		bl	__aeabi_dadd
 1192              	.LVL95:
 1193 01a4 0646     		mov	r6, r0
 1194 01a6 0F46     		mov	r7, r1
 1195              		.loc 1 142 104 view .LVU242
 1196 01a8 D4ED0D7A 		vldr.32	s15, [r4, #52]	@ int
 1197 01ac F8EE677A 		vcvt.f32.u32	s15, s15
 1198 01b0 17EE900A 		vmov	r0, s15
 1199 01b4 FFF7FEFF 		bl	__aeabi_f2d
 1200              	.LVL96:
 1201              		.loc 1 142 128 view .LVU243
 1202 01b8 19A3     		adr	r3, .L30+16
 1203 01ba D3E90023 		ldrd	r2, [r3]
 1204 01be FFF7FEFF 		bl	__aeabi_dmul
 1205              	.LVL97:
 1206 01c2 0246     		mov	r2, r0
 1207 01c4 0B46     		mov	r3, r1
 1208              		.loc 1 142 102 view .LVU244
 1209 01c6 3046     		mov	r0, r6
 1210 01c8 3946     		mov	r1, r7
 1211 01ca FFF7FEFF 		bl	__aeabi_dadd
 1212              	.LVL98:
 1213 01ce 0646     		mov	r6, r0
 1214 01d0 0F46     		mov	r7, r1
 1215              		.loc 1 142 157 view .LVU245
 1216 01d2 A06B     		ldr	r0, [r4, #56]
 1217              		.loc 1 142 137 view .LVU246
 1218 01d4 07EE900A 		vmov	s15, r0	@ int
 1219 01d8 F8EE677A 		vcvt.f32.u32	s15, s15
 1220 01dc 17EE900A 		vmov	r0, s15
 1221 01e0 FFF7FEFF 		bl	__aeabi_f2d
 1222              	.LVL99:
 1223              		.loc 1 142 161 view .LVU247
 1224 01e4 10A3     		adr	r3, .L30+24
 1225 01e6 D3E90023 		ldrd	r2, [r3]
 1226 01ea FFF7FEFF 		bl	__aeabi_dmul
 1227              	.LVL100:
 1228 01ee 0246     		mov	r2, r0
 1229 01f0 0B46     		mov	r3, r1
 1230              		.loc 1 142 135 view .LVU248
 1231 01f2 3046     		mov	r0, r6
 1232 01f4 3946     		mov	r1, r7
 1233 01f6 FFF7FEFF 		bl	__aeabi_dadd
 1234              	.LVL101:
 1235 01fa FFF7FEFF 		bl	__aeabi_d2f
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 25


 1236              	.LVL102:
 1237              		.loc 1 142 12 view .LVU249
 1238 01fe 2862     		str	r0, [r5, #32]	@ float
 143:CONTROL/Src/current.c ****     arm_pid_init_f32(&S_5, 0);
 1239              		.loc 1 143 5 is_stmt 1 view .LVU250
 1240 0200 0021     		movs	r1, #0
 1241 0202 2846     		mov	r0, r5
 1242 0204 FFF7FEFF 		bl	arm_pid_init_f32
 1243              	.LVL103:
 144:CONTROL/Src/current.c **** 
 145:CONTROL/Src/current.c **** }
 1244              		.loc 1 145 1 is_stmt 0 view .LVU251
 1245 0208 BDEC028B 		vldm	sp!, {d8}
 1246              	.LCFI15:
 1247              		.cfi_restore 80
 1248              		.cfi_restore 81
 1249              		.cfi_def_cfa_offset 24
 1250 020c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1251              	.L31:
 1252 020e 00BF     		.align	3
 1253              	.L30:
 1254 0210 9A999999 		.word	-1717986918
 1255 0214 9999B93F 		.word	1069128089
 1256 0218 7B14AE47 		.word	1202590843
 1257 021c E17A843F 		.word	1065646817
 1258 0220 FCA9F1D2 		.word	-755914244
 1259 0224 4D62503F 		.word	1062232653
 1260 0228 2D431CEB 		.word	-350469331
 1261 022c E2361A3F 		.word	1058682594
 1262 0230 00000000 		.word	pid_5
 1263 0234 0000C842 		.word	1120403456
 1264 0238 00000000 		.word	S_5
 1265              		.cfi_endproc
 1266              	.LFE278:
 1268              		.section	.text.COUNT_CURRENT_PID,"ax",%progbits
 1269              		.align	1
 1270              		.global	COUNT_CURRENT_PID
 1271              		.syntax unified
 1272              		.thumb
 1273              		.thumb_func
 1275              	COUNT_CURRENT_PID:
 1276              	.LFB279:
 146:CONTROL/Src/current.c **** 
 147:CONTROL/Src/current.c **** void COUNT_CURRENT_PID(void)
 148:CONTROL/Src/current.c **** {
 1277              		.loc 1 148 1 is_stmt 1 view -0
 1278              		.cfi_startproc
 1279              		@ args = 0, pretend = 0, frame = 0
 1280              		@ frame_needed = 0, uses_anonymous_args = 0
 1281 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1282              	.LCFI16:
 1283              		.cfi_def_cfa_offset 24
 1284              		.cfi_offset 3, -24
 1285              		.cfi_offset 4, -20
 1286              		.cfi_offset 5, -16
 1287              		.cfi_offset 6, -12
 1288              		.cfi_offset 7, -8
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 26


 1289              		.cfi_offset 14, -4
 149:CONTROL/Src/current.c ****     if (chip_select == 0)
 1290              		.loc 1 149 5 view .LVU253
 1291              		.loc 1 149 21 is_stmt 0 view .LVU254
 1292 0002 C94B     		ldr	r3, .L65+16
 1293 0004 1B68     		ldr	r3, [r3]
 1294              		.loc 1 149 8 view .LVU255
 1295 0006 002B     		cmp	r3, #0
 1296 0008 00F09F80 		beq	.L63
 150:CONTROL/Src/current.c ****     {
 151:CONTROL/Src/current.c ****         //单片机1并网工作代码
 152:CONTROL/Src/current.c **** 
 153:CONTROL/Src/current.c ****         SPLL_1PH_SOGI_run(&sineA, NETWORK_VOTAGE);
 154:CONTROL/Src/current.c ****         SPLL_1PH_SOGI_run(&sineB, OUTPUT_VOTAGE);
 155:CONTROL/Src/current.c ****         angle_1 = (float32_t)(count_1);
 156:CONTROL/Src/current.c ****         angle_1 *= 0.01570795;
 157:CONTROL/Src/current.c **** 
 158:CONTROL/Src/current.c ****         // angle_1 += sineA.theta;
 159:CONTROL/Src/current.c ****         // angle_1 += A_phase_correction;
 160:CONTROL/Src/current.c ****         angle_error = sineA.theta - sineB.theta + A_phase_correction;
 161:CONTROL/Src/current.c ****         phase_pid_output = arm_pid_f32(&S_5, angle_error);
 162:CONTROL/Src/current.c ****         phase_pid_output += A_phase_correction;
 163:CONTROL/Src/current.c ****         angle_1 += phase_pid_output;
 164:CONTROL/Src/current.c **** 
 165:CONTROL/Src/current.c ****         percentage = rato/(rato+1);
 166:CONTROL/Src/current.c ****         real_I_ref = percentage * I_ref;
 167:CONTROL/Src/current.c ****         I_target = arm_sin_f32(angle_1);
 168:CONTROL/Src/current.c ****         I_target = I_target * real_I_ref * 1.414;
 169:CONTROL/Src/current.c ****         I_error = I_target;
 170:CONTROL/Src/current.c ****         // OLED_ShowNum(0,0,I_error*100, 7,16);
 171:CONTROL/Src/current.c ****         // OLED_Refresh_Gram();
 172:CONTROL/Src/current.c ****         I_error -= OUTPUT_CURRENT;
 173:CONTROL/Src/current.c ****         current_pid_result = arm_pid_f32(&S_3,I_error);
 174:CONTROL/Src/current.c ****         //过调制保护
 175:CONTROL/Src/current.c ****         if(current_pid_result*10>1372)TIM1->CCR1 = 1372;
 176:CONTROL/Src/current.c ****         else if(current_pid_result*10<28) TIM1->CCR1 = 1372;
 177:CONTROL/Src/current.c ****         else TIM1->CCR1 = current_pid_result*10;        
 178:CONTROL/Src/current.c ****     }
 179:CONTROL/Src/current.c ****     else if(chip_b_mode == 0)
 1297              		.loc 1 179 10 is_stmt 1 view .LVU256
 1298              		.loc 1 179 25 is_stmt 0 view .LVU257
 1299 000c C74B     		ldr	r3, .L65+20
 1300 000e 1B68     		ldr	r3, [r3]
 1301              		.loc 1 179 12 view .LVU258
 1302 0010 002B     		cmp	r3, #0
 1303 0012 40F0B581 		bne	.L39
 180:CONTROL/Src/current.c ****     {
 181:CONTROL/Src/current.c ****         //单片机2带负载工作代码
 182:CONTROL/Src/current.c ****         SPLL_1PH_SOGI_run(&sineA, CHIPA_CURRENT);
 1304              		.loc 1 182 9 is_stmt 1 view .LVU259
 1305 0016 C64C     		ldr	r4, .L65+24
 1306 0018 C64E     		ldr	r6, .L65+28
 1307 001a 94ED020A 		vldr.32	s0, [r4, #8]
 1308 001e 3046     		mov	r0, r6
 1309 0020 FFF7FEFF 		bl	SPLL_1PH_SOGI_run
 1310              	.LVL104:
 183:CONTROL/Src/current.c ****         SPLL_1PH_SOGI_run(&sineB, OUTPUT_CURRENT);
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 27


 1311              		.loc 1 183 9 view .LVU260
 1312 0024 94ED000A 		vldr.32	s0, [r4]
 1313 0028 C348     		ldr	r0, .L65+32
 1314 002a FFF7FEFF 		bl	SPLL_1PH_SOGI_run
 1315              	.LVL105:
 184:CONTROL/Src/current.c ****         angle_1 = (float32_t)(count_1);
 1316              		.loc 1 184 9 view .LVU261
 1317              		.loc 1 184 19 is_stmt 0 view .LVU262
 1318 002e C34B     		ldr	r3, .L65+36
 1319 0030 D3ED007A 		vldr.32	s15, [r3]	@ int
 1320 0034 F8EEE77A 		vcvt.f32.s32	s15, s15
 1321              		.loc 1 184 17 view .LVU263
 1322 0038 C14D     		ldr	r5, .L65+40
 1323 003a C5ED007A 		vstr.32	s15, [r5]
 185:CONTROL/Src/current.c ****         angle_1 *= 0.01570795;
 1324              		.loc 1 185 9 is_stmt 1 view .LVU264
 1325              		.loc 1 185 17 is_stmt 0 view .LVU265
 1326 003e 17EE900A 		vmov	r0, s15
 1327 0042 FFF7FEFF 		bl	__aeabi_f2d
 1328              	.LVL106:
 1329 0046 B4A3     		adr	r3, .L65
 1330 0048 D3E90023 		ldrd	r2, [r3]
 1331 004c FFF7FEFF 		bl	__aeabi_dmul
 1332              	.LVL107:
 1333 0050 FFF7FEFF 		bl	__aeabi_d2f
 1334              	.LVL108:
 1335 0054 00EE100A 		vmov	s0, r0
 1336 0058 2860     		str	r0, [r5]	@ float
 186:CONTROL/Src/current.c ****         angle_1 += sineA.theta;
 1337              		.loc 1 186 9 is_stmt 1 view .LVU266
 1338              		.loc 1 186 25 is_stmt 0 view .LVU267
 1339 005a D6ED117A 		vldr.32	s15, [r6, #68]
 1340              		.loc 1 186 17 view .LVU268
 1341 005e 30EE270A 		vadd.f32	s0, s0, s15
 1342 0062 85ED000A 		vstr.32	s0, [r5]
 187:CONTROL/Src/current.c ****         percentage = rato/(rato+1);
 1343              		.loc 1 187 9 is_stmt 1 view .LVU269
 1344              		.loc 1 187 26 is_stmt 0 view .LVU270
 1345 0066 B74B     		ldr	r3, .L65+44
 1346 0068 93ED007A 		vldr.32	s14, [r3]
 1347              		.loc 1 187 32 view .LVU271
 1348 006c F7EE007A 		vmov.f32	s15, #1.0e+0
 1349 0070 77EE277A 		vadd.f32	s15, s14, s15
 1350              		.loc 1 187 26 view .LVU272
 1351 0074 C7EE276A 		vdiv.f32	s13, s14, s15
 1352              		.loc 1 187 20 view .LVU273
 1353 0078 B34B     		ldr	r3, .L65+48
 1354 007a C3ED006A 		vstr.32	s13, [r3]
 188:CONTROL/Src/current.c ****         real_I_ref = I_ref;
 1355              		.loc 1 188 9 is_stmt 1 view .LVU274
 1356              		.loc 1 188 20 is_stmt 0 view .LVU275
 1357 007e B34E     		ldr	r6, .L65+52
 1358 0080 B34B     		ldr	r3, .L65+56
 1359 0082 1B68     		ldr	r3, [r3]	@ float
 1360 0084 3360     		str	r3, [r6]	@ float
 189:CONTROL/Src/current.c ****         I_target = arm_sin_f32(angle_1);
 1361              		.loc 1 189 9 is_stmt 1 view .LVU276
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 28


 1362              		.loc 1 189 20 is_stmt 0 view .LVU277
 1363 0086 FFF7FEFF 		bl	arm_sin_f32
 1364              	.LVL109:
 1365              		.loc 1 189 18 discriminator 1 view .LVU278
 1366 008a B24D     		ldr	r5, .L65+60
 1367 008c 85ED000A 		vstr.32	s0, [r5]
 190:CONTROL/Src/current.c ****         I_target = I_target * real_I_ref * 1.414;
 1368              		.loc 1 190 9 is_stmt 1 view .LVU279
 1369              		.loc 1 190 29 is_stmt 0 view .LVU280
 1370 0090 D6ED007A 		vldr.32	s15, [r6]
 1371 0094 60EE277A 		vmul.f32	s15, s0, s15
 1372 0098 17EE900A 		vmov	r0, s15
 1373 009c FFF7FEFF 		bl	__aeabi_f2d
 1374              	.LVL110:
 1375              		.loc 1 190 42 view .LVU281
 1376 00a0 9FA3     		adr	r3, .L65+8
 1377 00a2 D3E90023 		ldrd	r2, [r3]
 1378 00a6 FFF7FEFF 		bl	__aeabi_dmul
 1379              	.LVL111:
 1380 00aa FFF7FEFF 		bl	__aeabi_d2f
 1381              	.LVL112:
 1382 00ae 07EE100A 		vmov	s14, r0
 1383              		.loc 1 190 18 view .LVU282
 1384 00b2 2860     		str	r0, [r5]	@ float
 191:CONTROL/Src/current.c ****         I_error = I_target;
 1385              		.loc 1 191 9 is_stmt 1 view .LVU283
 1386              		.loc 1 191 17 is_stmt 0 view .LVU284
 1387 00b4 A84B     		ldr	r3, .L65+64
 1388 00b6 1860     		str	r0, [r3]	@ float
 192:CONTROL/Src/current.c ****         // OLED_ShowNum(0,0,I_error*100, 7,16);
 193:CONTROL/Src/current.c ****         // OLED_Refresh_Gram();
 194:CONTROL/Src/current.c ****         I_error -= OUTPUT_CURRENT;
 1389              		.loc 1 194 9 is_stmt 1 view .LVU285
 1390              		.loc 1 194 20 is_stmt 0 view .LVU286
 1391 00b8 D4ED007A 		vldr.32	s15, [r4]
 1392              		.loc 1 194 17 view .LVU287
 1393 00bc 37EE677A 		vsub.f32	s14, s14, s15
 1394 00c0 83ED007A 		vstr.32	s14, [r3]
 195:CONTROL/Src/current.c ****         I_error -= CHIPA_CURRENT;
 1395              		.loc 1 195 9 is_stmt 1 view .LVU288
 1396              		.loc 1 195 20 is_stmt 0 view .LVU289
 1397 00c4 D4ED027A 		vldr.32	s15, [r4, #8]
 1398              		.loc 1 195 17 view .LVU290
 1399 00c8 37EE677A 		vsub.f32	s14, s14, s15
 1400 00cc 83ED007A 		vstr.32	s14, [r3]
 196:CONTROL/Src/current.c ****         current_pid_result = arm_pid_f32(&S_3,I_error);
 1401              		.loc 1 196 9 is_stmt 1 view .LVU291
 1402              	.LVL113:
 1403              	.LBB12:
 1404              	.LBI12:
 1405              		.file 2 "DSP/Inc/arm_math.h"
   1:DSP/Inc/arm_math.h **** /******************************************************************************
   2:DSP/Inc/arm_math.h ****  * @file     arm_math.h
   3:DSP/Inc/arm_math.h ****  * @brief    Public header file for CMSIS DSP LibraryU
   4:DSP/Inc/arm_math.h ****  * @version  V1.5.3
   5:DSP/Inc/arm_math.h ****  * @date     10. January 2018
   6:DSP/Inc/arm_math.h ****  ******************************************************************************/
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 29


   7:DSP/Inc/arm_math.h **** /*
   8:DSP/Inc/arm_math.h ****  * Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved.
   9:DSP/Inc/arm_math.h ****  *
  10:DSP/Inc/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  11:DSP/Inc/arm_math.h ****  *
  12:DSP/Inc/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:DSP/Inc/arm_math.h ****  * not use this file except in compliance with the License.
  14:DSP/Inc/arm_math.h ****  * You may obtain a copy of the License at
  15:DSP/Inc/arm_math.h ****  *
  16:DSP/Inc/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:DSP/Inc/arm_math.h ****  *
  18:DSP/Inc/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  19:DSP/Inc/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:DSP/Inc/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:DSP/Inc/arm_math.h ****  * See the License for the specific language governing permissions and
  22:DSP/Inc/arm_math.h ****  * limitations under the License.
  23:DSP/Inc/arm_math.h ****  */
  24:DSP/Inc/arm_math.h **** 
  25:DSP/Inc/arm_math.h **** /**
  26:DSP/Inc/arm_math.h ****    \mainpage CMSIS DSP Software Library
  27:DSP/Inc/arm_math.h ****    *
  28:DSP/Inc/arm_math.h ****    * Introduction
  29:DSP/Inc/arm_math.h ****    * ------------
  30:DSP/Inc/arm_math.h ****    *
  31:DSP/Inc/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  32:DSP/Inc/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  33:DSP/Inc/arm_math.h ****    *
  34:DSP/Inc/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  35:DSP/Inc/arm_math.h ****    * - Basic math functions
  36:DSP/Inc/arm_math.h ****    * - Fast math functions
  37:DSP/Inc/arm_math.h ****    * - Complex math functions
  38:DSP/Inc/arm_math.h ****    * - Filters
  39:DSP/Inc/arm_math.h ****    * - Matrix functions
  40:DSP/Inc/arm_math.h ****    * - Transforms
  41:DSP/Inc/arm_math.h ****    * - Motor control functions
  42:DSP/Inc/arm_math.h ****    * - Statistical functions
  43:DSP/Inc/arm_math.h ****    * - Support functions
  44:DSP/Inc/arm_math.h ****    * - Interpolation functions
  45:DSP/Inc/arm_math.h ****    *
  46:DSP/Inc/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  47:DSP/Inc/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  48:DSP/Inc/arm_math.h ****    *
  49:DSP/Inc/arm_math.h ****    * Using the Library
  50:DSP/Inc/arm_math.h ****    * ------------
  51:DSP/Inc/arm_math.h ****    *
  52:DSP/Inc/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  53:DSP/Inc/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  54:DSP/Inc/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  55:DSP/Inc/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  56:DSP/Inc/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  57:DSP/Inc/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  58:DSP/Inc/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  59:DSP/Inc/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  60:DSP/Inc/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  61:DSP/Inc/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  62:DSP/Inc/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  63:DSP/Inc/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 30


  64:DSP/Inc/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  65:DSP/Inc/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  66:DSP/Inc/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  67:DSP/Inc/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (Armv8-M Baseline, Little endian)
  68:DSP/Inc/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (Armv8-M Mainline, Little endian)
  69:DSP/Inc/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (Armv8-M Mainline, Little endian, Single Precision Floating Point 
  70:DSP/Inc/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (Armv8-M Mainline, Little endian, DSP instructions)
  71:DSP/Inc/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (Armv8-M Mainline, Little endian, DSP instructions, Single Precis
  72:DSP/Inc/arm_math.h ****    *
  73:DSP/Inc/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  74:DSP/Inc/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  75:DSP/Inc/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  76:DSP/Inc/arm_math.h ****    * Define the appropriate preprocessor macro ARM_MATH_CM7 or ARM_MATH_CM4 or ARM_MATH_CM3 or
  77:DSP/Inc/arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  78:DSP/Inc/arm_math.h ****    * For Armv8-M cores define preprocessor macro ARM_MATH_ARMV8MBL or ARM_MATH_ARMV8MML.
  79:DSP/Inc/arm_math.h ****    * Set preprocessor macro __DSP_PRESENT if Armv8-M Mainline core supports DSP instructions.
  80:DSP/Inc/arm_math.h ****    * 
  81:DSP/Inc/arm_math.h ****    *
  82:DSP/Inc/arm_math.h ****    * Examples
  83:DSP/Inc/arm_math.h ****    * --------
  84:DSP/Inc/arm_math.h ****    *
  85:DSP/Inc/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  86:DSP/Inc/arm_math.h ****    *
  87:DSP/Inc/arm_math.h ****    * Toolchain Support
  88:DSP/Inc/arm_math.h ****    * ------------
  89:DSP/Inc/arm_math.h ****    *
  90:DSP/Inc/arm_math.h ****    * The library has been developed and tested with MDK version 5.14.0.0
  91:DSP/Inc/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  92:DSP/Inc/arm_math.h ****    *
  93:DSP/Inc/arm_math.h ****    * Building the Library
  94:DSP/Inc/arm_math.h ****    * ------------
  95:DSP/Inc/arm_math.h ****    *
  96:DSP/Inc/arm_math.h ****    * The library installer contains a project file to rebuild libraries on MDK toolchain in the <co
  97:DSP/Inc/arm_math.h ****    * - arm_cortexM_math.uvprojx
  98:DSP/Inc/arm_math.h ****    *
  99:DSP/Inc/arm_math.h ****    *
 100:DSP/Inc/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 101:DSP/Inc/arm_math.h ****    *
 102:DSP/Inc/arm_math.h ****    * Preprocessor Macros
 103:DSP/Inc/arm_math.h ****    * ------------
 104:DSP/Inc/arm_math.h ****    *
 105:DSP/Inc/arm_math.h ****    * Each library project have different preprocessor macros.
 106:DSP/Inc/arm_math.h ****    *
 107:DSP/Inc/arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 108:DSP/Inc/arm_math.h ****    *
 109:DSP/Inc/arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 110:DSP/Inc/arm_math.h ****    *
 111:DSP/Inc/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 112:DSP/Inc/arm_math.h ****    *
 113:DSP/Inc/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 114:DSP/Inc/arm_math.h ****    *
 115:DSP/Inc/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 116:DSP/Inc/arm_math.h ****    *
 117:DSP/Inc/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 118:DSP/Inc/arm_math.h ****    *
 119:DSP/Inc/arm_math.h ****    * - ARM_MATH_ROUNDING:
 120:DSP/Inc/arm_math.h ****    *
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 31


 121:DSP/Inc/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 122:DSP/Inc/arm_math.h ****    *
 123:DSP/Inc/arm_math.h ****    * - ARM_MATH_CMx:
 124:DSP/Inc/arm_math.h ****    *
 125:DSP/Inc/arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 126:DSP/Inc/arm_math.h ****    * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 127:DSP/Inc/arm_math.h ****    * ARM_MATH_CM7 for building the library on cortex-M7.
 128:DSP/Inc/arm_math.h ****    *
 129:DSP/Inc/arm_math.h ****    * - ARM_MATH_ARMV8MxL:
 130:DSP/Inc/arm_math.h ****    *
 131:DSP/Inc/arm_math.h ****    * Define macro ARM_MATH_ARMV8MBL for building the library on Armv8-M Baseline target, ARM_MATH_A
 132:DSP/Inc/arm_math.h ****    * on Armv8-M Mainline target.
 133:DSP/Inc/arm_math.h ****    *
 134:DSP/Inc/arm_math.h ****    * - __FPU_PRESENT:
 135:DSP/Inc/arm_math.h ****    *
 136:DSP/Inc/arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 137:DSP/Inc/arm_math.h ****    *
 138:DSP/Inc/arm_math.h ****    * - __DSP_PRESENT:
 139:DSP/Inc/arm_math.h ****    *
 140:DSP/Inc/arm_math.h ****    * Initialize macro __DSP_PRESENT = 1 when Armv8-M Mainline core supports DSP instructions.
 141:DSP/Inc/arm_math.h ****    *
 142:DSP/Inc/arm_math.h ****    * <hr>
 143:DSP/Inc/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 144:DSP/Inc/arm_math.h ****    * -----------------------------
 145:DSP/Inc/arm_math.h ****    *
 146:DSP/Inc/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 147:DSP/Inc/arm_math.h ****    * |File/Folder                   |Content                                                       
 148:DSP/Inc/arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 149:DSP/Inc/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 150:DSP/Inc/arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 151:DSP/Inc/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 152:DSP/Inc/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 153:DSP/Inc/arm_math.h ****    *
 154:DSP/Inc/arm_math.h ****    * <hr>
 155:DSP/Inc/arm_math.h ****    * Revision History of CMSIS-DSP
 156:DSP/Inc/arm_math.h ****    * ------------
 157:DSP/Inc/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 158:DSP/Inc/arm_math.h ****    *
 159:DSP/Inc/arm_math.h ****    * Copyright Notice
 160:DSP/Inc/arm_math.h ****    * ------------
 161:DSP/Inc/arm_math.h ****    *
 162:DSP/Inc/arm_math.h ****    * Copyright (C) 2010-2015 Arm Limited. All rights reserved.
 163:DSP/Inc/arm_math.h ****    */
 164:DSP/Inc/arm_math.h **** 
 165:DSP/Inc/arm_math.h **** 
 166:DSP/Inc/arm_math.h **** /**
 167:DSP/Inc/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 168:DSP/Inc/arm_math.h ****  */
 169:DSP/Inc/arm_math.h **** 
 170:DSP/Inc/arm_math.h **** /**
 171:DSP/Inc/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 172:DSP/Inc/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 173:DSP/Inc/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 174:DSP/Inc/arm_math.h ****  * operate on individual values and not arrays.
 175:DSP/Inc/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 176:DSP/Inc/arm_math.h ****  *
 177:DSP/Inc/arm_math.h ****  */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 32


 178:DSP/Inc/arm_math.h **** 
 179:DSP/Inc/arm_math.h **** /**
 180:DSP/Inc/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 181:DSP/Inc/arm_math.h ****  * This set of functions operates on complex data vectors.
 182:DSP/Inc/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 183:DSP/Inc/arm_math.h ****  * (real, imag, real, imag, ...).
 184:DSP/Inc/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 185:DSP/Inc/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 186:DSP/Inc/arm_math.h ****  * real values.
 187:DSP/Inc/arm_math.h ****  */
 188:DSP/Inc/arm_math.h **** 
 189:DSP/Inc/arm_math.h **** /**
 190:DSP/Inc/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 191:DSP/Inc/arm_math.h ****  */
 192:DSP/Inc/arm_math.h **** 
 193:DSP/Inc/arm_math.h **** /**
 194:DSP/Inc/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 195:DSP/Inc/arm_math.h ****  *
 196:DSP/Inc/arm_math.h ****  * This set of functions provides basic matrix math operations.
 197:DSP/Inc/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 198:DSP/Inc/arm_math.h ****  * the type
 199:DSP/Inc/arm_math.h ****  * definition for the floating-point matrix structure is shown
 200:DSP/Inc/arm_math.h ****  * below:
 201:DSP/Inc/arm_math.h ****  * <pre>
 202:DSP/Inc/arm_math.h ****  *     typedef struct
 203:DSP/Inc/arm_math.h ****  *     {
 204:DSP/Inc/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 205:DSP/Inc/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 206:DSP/Inc/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 207:DSP/Inc/arm_math.h ****  *     } arm_matrix_instance_f32;
 208:DSP/Inc/arm_math.h ****  * </pre>
 209:DSP/Inc/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 210:DSP/Inc/arm_math.h ****  *
 211:DSP/Inc/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 212:DSP/Inc/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 213:DSP/Inc/arm_math.h ****  * and the values are arranged in row order.  That is, the
 214:DSP/Inc/arm_math.h ****  * matrix element (i, j) is stored at:
 215:DSP/Inc/arm_math.h ****  * <pre>
 216:DSP/Inc/arm_math.h ****  *     pData[i*numCols + j]
 217:DSP/Inc/arm_math.h ****  * </pre>
 218:DSP/Inc/arm_math.h ****  *
 219:DSP/Inc/arm_math.h ****  * \par Init Functions
 220:DSP/Inc/arm_math.h ****  * There is an associated initialization function for each type of matrix
 221:DSP/Inc/arm_math.h ****  * data structure.
 222:DSP/Inc/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 223:DSP/Inc/arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 224:DSP/Inc/arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 225:DSP/Inc/arm_math.h ****  *
 226:DSP/Inc/arm_math.h ****  * \par
 227:DSP/Inc/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 228:DSP/Inc/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 229:DSP/Inc/arm_math.h ****  * To place the instance structure in a const data
 230:DSP/Inc/arm_math.h ****  * section, manually initialize the data structure.  For example:
 231:DSP/Inc/arm_math.h ****  * <pre>
 232:DSP/Inc/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 233:DSP/Inc/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 234:DSP/Inc/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 33


 235:DSP/Inc/arm_math.h ****  * </pre>
 236:DSP/Inc/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 237:DSP/Inc/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 238:DSP/Inc/arm_math.h ****  * data array.
 239:DSP/Inc/arm_math.h ****  *
 240:DSP/Inc/arm_math.h ****  * \par Size Checking
 241:DSP/Inc/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 242:DSP/Inc/arm_math.h ****  * output matrices. For example, the matrix addition function verifies that the
 243:DSP/Inc/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 244:DSP/Inc/arm_math.h ****  * columns. If the size check fails the functions return:
 245:DSP/Inc/arm_math.h ****  * <pre>
 246:DSP/Inc/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 247:DSP/Inc/arm_math.h ****  * </pre>
 248:DSP/Inc/arm_math.h ****  * Otherwise the functions return
 249:DSP/Inc/arm_math.h ****  * <pre>
 250:DSP/Inc/arm_math.h ****  *     ARM_MATH_SUCCESS
 251:DSP/Inc/arm_math.h ****  * </pre>
 252:DSP/Inc/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 253:DSP/Inc/arm_math.h ****  * The matrix size checking is enabled via the \#define
 254:DSP/Inc/arm_math.h ****  * <pre>
 255:DSP/Inc/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 256:DSP/Inc/arm_math.h ****  * </pre>
 257:DSP/Inc/arm_math.h ****  * within the library project settings.  By default this macro is defined
 258:DSP/Inc/arm_math.h ****  * and size checking is enabled. By changing the project settings and
 259:DSP/Inc/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 260:DSP/Inc/arm_math.h ****  * run a bit faster. With size checking disabled the functions always
 261:DSP/Inc/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 262:DSP/Inc/arm_math.h ****  */
 263:DSP/Inc/arm_math.h **** 
 264:DSP/Inc/arm_math.h **** /**
 265:DSP/Inc/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 266:DSP/Inc/arm_math.h ****  */
 267:DSP/Inc/arm_math.h **** 
 268:DSP/Inc/arm_math.h **** /**
 269:DSP/Inc/arm_math.h ****  * @defgroup groupController Controller Functions
 270:DSP/Inc/arm_math.h ****  */
 271:DSP/Inc/arm_math.h **** 
 272:DSP/Inc/arm_math.h **** /**
 273:DSP/Inc/arm_math.h ****  * @defgroup groupStats Statistics Functions
 274:DSP/Inc/arm_math.h ****  */
 275:DSP/Inc/arm_math.h **** /**
 276:DSP/Inc/arm_math.h ****  * @defgroup groupSupport Support Functions
 277:DSP/Inc/arm_math.h ****  */
 278:DSP/Inc/arm_math.h **** 
 279:DSP/Inc/arm_math.h **** /**
 280:DSP/Inc/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 281:DSP/Inc/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 282:DSP/Inc/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 283:DSP/Inc/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 284:DSP/Inc/arm_math.h ****  */
 285:DSP/Inc/arm_math.h **** 
 286:DSP/Inc/arm_math.h **** /**
 287:DSP/Inc/arm_math.h ****  * @defgroup groupExamples Examples
 288:DSP/Inc/arm_math.h ****  */
 289:DSP/Inc/arm_math.h **** #ifndef _ARM_MATH_H
 290:DSP/Inc/arm_math.h **** #define _ARM_MATH_H
 291:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 34


 292:DSP/Inc/arm_math.h **** /* Compiler specific diagnostic adjustment */
 293:DSP/Inc/arm_math.h **** #if   defined ( __CC_ARM )
 294:DSP/Inc/arm_math.h **** 
 295:DSP/Inc/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 296:DSP/Inc/arm_math.h **** 
 297:DSP/Inc/arm_math.h **** #elif defined ( __GNUC__ )
 298:DSP/Inc/arm_math.h **** #pragma GCC diagnostic push
 299:DSP/Inc/arm_math.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
 300:DSP/Inc/arm_math.h **** #pragma GCC diagnostic ignored "-Wconversion"
 301:DSP/Inc/arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 302:DSP/Inc/arm_math.h **** 
 303:DSP/Inc/arm_math.h **** #elif defined ( __ICCARM__ )
 304:DSP/Inc/arm_math.h **** 
 305:DSP/Inc/arm_math.h **** #elif defined ( __TI_ARM__ )
 306:DSP/Inc/arm_math.h **** 
 307:DSP/Inc/arm_math.h **** #elif defined ( __CSMC__ )
 308:DSP/Inc/arm_math.h **** 
 309:DSP/Inc/arm_math.h **** #elif defined ( __TASKING__ )
 310:DSP/Inc/arm_math.h **** 
 311:DSP/Inc/arm_math.h **** #else
 312:DSP/Inc/arm_math.h ****   #error Unknown compiler
 313:DSP/Inc/arm_math.h **** #endif
 314:DSP/Inc/arm_math.h **** 
 315:DSP/Inc/arm_math.h **** 
 316:DSP/Inc/arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 317:DSP/Inc/arm_math.h **** 
 318:DSP/Inc/arm_math.h **** #if defined(ARM_MATH_CM7)
 319:DSP/Inc/arm_math.h ****   #include "core_cm7.h"
 320:DSP/Inc/arm_math.h ****   #define ARM_MATH_DSP
 321:DSP/Inc/arm_math.h **** #elif defined (ARM_MATH_CM4)
 322:DSP/Inc/arm_math.h ****   #include "core_cm4.h"
 323:DSP/Inc/arm_math.h ****   #define ARM_MATH_DSP
 324:DSP/Inc/arm_math.h **** #elif defined (ARM_MATH_CM3)
 325:DSP/Inc/arm_math.h ****   #include "core_cm3.h"
 326:DSP/Inc/arm_math.h **** #elif defined (ARM_MATH_CM0)
 327:DSP/Inc/arm_math.h ****   #include "core_cm0.h"
 328:DSP/Inc/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 329:DSP/Inc/arm_math.h **** #elif defined (ARM_MATH_CM0PLUS)
 330:DSP/Inc/arm_math.h ****   #include "core_cm0plus.h"
 331:DSP/Inc/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 332:DSP/Inc/arm_math.h **** #elif defined (ARM_MATH_ARMV8MBL)
 333:DSP/Inc/arm_math.h ****   #include "core_armv8mbl.h"
 334:DSP/Inc/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 335:DSP/Inc/arm_math.h **** #elif defined (ARM_MATH_ARMV8MML)
 336:DSP/Inc/arm_math.h ****   #include "core_armv8mml.h"
 337:DSP/Inc/arm_math.h ****   #if (defined (__DSP_PRESENT) && (__DSP_PRESENT == 1))
 338:DSP/Inc/arm_math.h ****     #define ARM_MATH_DSP
 339:DSP/Inc/arm_math.h ****   #endif
 340:DSP/Inc/arm_math.h **** #else
 341:DSP/Inc/arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 342:DSP/Inc/arm_math.h **** #endif
 343:DSP/Inc/arm_math.h **** 
 344:DSP/Inc/arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 345:DSP/Inc/arm_math.h **** #include "string.h"
 346:DSP/Inc/arm_math.h **** #include "math.h"
 347:DSP/Inc/arm_math.h **** #ifdef   __cplusplus
 348:DSP/Inc/arm_math.h **** extern "C"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 35


 349:DSP/Inc/arm_math.h **** {
 350:DSP/Inc/arm_math.h **** #endif
 351:DSP/Inc/arm_math.h **** 
 352:DSP/Inc/arm_math.h **** 
 353:DSP/Inc/arm_math.h ****   /**
 354:DSP/Inc/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 355:DSP/Inc/arm_math.h ****    */
 356:DSP/Inc/arm_math.h **** 
 357:DSP/Inc/arm_math.h **** #define DELTA_Q31          (0x100)
 358:DSP/Inc/arm_math.h **** #define DELTA_Q15          0x5
 359:DSP/Inc/arm_math.h **** #define INDEX_MASK         0x0000003F
 360:DSP/Inc/arm_math.h **** #ifndef PI
 361:DSP/Inc/arm_math.h ****   #define PI               3.14159265358979f
 362:DSP/Inc/arm_math.h **** #endif
 363:DSP/Inc/arm_math.h **** 
 364:DSP/Inc/arm_math.h ****   /**
 365:DSP/Inc/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 366:DSP/Inc/arm_math.h ****    */
 367:DSP/Inc/arm_math.h **** 
 368:DSP/Inc/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 369:DSP/Inc/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 370:DSP/Inc/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 371:DSP/Inc/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 372:DSP/Inc/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 373:DSP/Inc/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 374:DSP/Inc/arm_math.h **** 
 375:DSP/Inc/arm_math.h ****   /**
 376:DSP/Inc/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 377:DSP/Inc/arm_math.h ****    */
 378:DSP/Inc/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 379:DSP/Inc/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 380:DSP/Inc/arm_math.h **** #define INPUT_SPACING         0xB60B61
 381:DSP/Inc/arm_math.h **** 
 382:DSP/Inc/arm_math.h ****   /**
 383:DSP/Inc/arm_math.h ****    * @brief Macro for Unaligned Support
 384:DSP/Inc/arm_math.h ****    */
 385:DSP/Inc/arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 386:DSP/Inc/arm_math.h ****     #define ALIGN4
 387:DSP/Inc/arm_math.h **** #else
 388:DSP/Inc/arm_math.h ****   #if defined  (__GNUC__)
 389:DSP/Inc/arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 390:DSP/Inc/arm_math.h ****   #else
 391:DSP/Inc/arm_math.h ****     #define ALIGN4 __align(4)
 392:DSP/Inc/arm_math.h ****   #endif
 393:DSP/Inc/arm_math.h **** #endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 394:DSP/Inc/arm_math.h **** 
 395:DSP/Inc/arm_math.h ****   /**
 396:DSP/Inc/arm_math.h ****    * @brief Error status returned by some functions in the library.
 397:DSP/Inc/arm_math.h ****    */
 398:DSP/Inc/arm_math.h **** 
 399:DSP/Inc/arm_math.h ****   typedef enum
 400:DSP/Inc/arm_math.h ****   {
 401:DSP/Inc/arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 402:DSP/Inc/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 403:DSP/Inc/arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 404:DSP/Inc/arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 405:DSP/Inc/arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 36


 406:DSP/Inc/arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 407:DSP/Inc/arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 408:DSP/Inc/arm_math.h ****   } arm_status;
 409:DSP/Inc/arm_math.h **** 
 410:DSP/Inc/arm_math.h ****   /**
 411:DSP/Inc/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 412:DSP/Inc/arm_math.h ****    */
 413:DSP/Inc/arm_math.h ****   typedef int8_t q7_t;
 414:DSP/Inc/arm_math.h **** 
 415:DSP/Inc/arm_math.h ****   /**
 416:DSP/Inc/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 417:DSP/Inc/arm_math.h ****    */
 418:DSP/Inc/arm_math.h ****   typedef int16_t q15_t;
 419:DSP/Inc/arm_math.h **** 
 420:DSP/Inc/arm_math.h ****   /**
 421:DSP/Inc/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 422:DSP/Inc/arm_math.h ****    */
 423:DSP/Inc/arm_math.h ****   typedef int32_t q31_t;
 424:DSP/Inc/arm_math.h **** 
 425:DSP/Inc/arm_math.h ****   /**
 426:DSP/Inc/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 427:DSP/Inc/arm_math.h ****    */
 428:DSP/Inc/arm_math.h ****   typedef int64_t q63_t;
 429:DSP/Inc/arm_math.h **** 
 430:DSP/Inc/arm_math.h ****   /**
 431:DSP/Inc/arm_math.h ****    * @brief 32-bit floating-point type definition.
 432:DSP/Inc/arm_math.h ****    */
 433:DSP/Inc/arm_math.h ****   typedef float float32_t;
 434:DSP/Inc/arm_math.h **** 
 435:DSP/Inc/arm_math.h ****   /**
 436:DSP/Inc/arm_math.h ****    * @brief 64-bit floating-point type definition.
 437:DSP/Inc/arm_math.h ****    */
 438:DSP/Inc/arm_math.h ****   typedef double float64_t;
 439:DSP/Inc/arm_math.h **** 
 440:DSP/Inc/arm_math.h ****   /**
 441:DSP/Inc/arm_math.h ****    * @brief definition to read/write two 16 bit values.
 442:DSP/Inc/arm_math.h ****    */
 443:DSP/Inc/arm_math.h **** #if   defined ( __CC_ARM )
 444:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 445:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 446:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 447:DSP/Inc/arm_math.h **** 
 448:DSP/Inc/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 449:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE int32_t
 450:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 451:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 452:DSP/Inc/arm_math.h **** 
 453:DSP/Inc/arm_math.h **** #elif defined ( __GNUC__ )
 454:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE int32_t
 455:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 456:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 457:DSP/Inc/arm_math.h **** 
 458:DSP/Inc/arm_math.h **** #elif defined ( __ICCARM__ )
 459:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 460:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED
 461:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE
 462:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 37


 463:DSP/Inc/arm_math.h **** #elif defined ( __TI_ARM__ )
 464:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE int32_t
 465:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 466:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE
 467:DSP/Inc/arm_math.h **** 
 468:DSP/Inc/arm_math.h **** #elif defined ( __CSMC__ )
 469:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE int32_t
 470:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED
 471:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE
 472:DSP/Inc/arm_math.h **** 
 473:DSP/Inc/arm_math.h **** #elif defined ( __TASKING__ )
 474:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE __unaligned int32_t
 475:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED
 476:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE
 477:DSP/Inc/arm_math.h **** 
 478:DSP/Inc/arm_math.h **** #else
 479:DSP/Inc/arm_math.h ****   #error Unknown compiler
 480:DSP/Inc/arm_math.h **** #endif
 481:DSP/Inc/arm_math.h **** 
 482:DSP/Inc/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 483:DSP/Inc/arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 484:DSP/Inc/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 485:DSP/Inc/arm_math.h **** #define __SIMD64(addr)        (*(int64_t **) & (addr))
 486:DSP/Inc/arm_math.h **** 
 487:DSP/Inc/arm_math.h **** #if !defined (ARM_MATH_DSP)
 488:DSP/Inc/arm_math.h ****   /**
 489:DSP/Inc/arm_math.h ****    * @brief definition to pack two 16 bit values.
 490:DSP/Inc/arm_math.h ****    */
 491:DSP/Inc/arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 492:DSP/Inc/arm_math.h ****                                     (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 493:DSP/Inc/arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 494:DSP/Inc/arm_math.h ****                                     (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 495:DSP/Inc/arm_math.h **** 
 496:DSP/Inc/arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
 497:DSP/Inc/arm_math.h **** 
 498:DSP/Inc/arm_math.h ****    /**
 499:DSP/Inc/arm_math.h ****    * @brief definition to pack four 8 bit values.
 500:DSP/Inc/arm_math.h ****    */
 501:DSP/Inc/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 502:DSP/Inc/arm_math.h **** 
 503:DSP/Inc/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 504:DSP/Inc/arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 505:DSP/Inc/arm_math.h ****                                 (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 506:DSP/Inc/arm_math.h ****                                 (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 507:DSP/Inc/arm_math.h **** #else
 508:DSP/Inc/arm_math.h **** 
 509:DSP/Inc/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 510:DSP/Inc/arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 511:DSP/Inc/arm_math.h ****                                 (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 512:DSP/Inc/arm_math.h ****                                 (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 513:DSP/Inc/arm_math.h **** 
 514:DSP/Inc/arm_math.h **** #endif
 515:DSP/Inc/arm_math.h **** 
 516:DSP/Inc/arm_math.h **** 
 517:DSP/Inc/arm_math.h ****   /**
 518:DSP/Inc/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 519:DSP/Inc/arm_math.h ****    */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 38


 520:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t clip_q63_to_q31(
 521:DSP/Inc/arm_math.h ****   q63_t x)
 522:DSP/Inc/arm_math.h ****   {
 523:DSP/Inc/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 524:DSP/Inc/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 525:DSP/Inc/arm_math.h ****   }
 526:DSP/Inc/arm_math.h **** 
 527:DSP/Inc/arm_math.h ****   /**
 528:DSP/Inc/arm_math.h ****    * @brief Clips Q63 to Q15 values.
 529:DSP/Inc/arm_math.h ****    */
 530:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q63_to_q15(
 531:DSP/Inc/arm_math.h ****   q63_t x)
 532:DSP/Inc/arm_math.h ****   {
 533:DSP/Inc/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 534:DSP/Inc/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 535:DSP/Inc/arm_math.h ****   }
 536:DSP/Inc/arm_math.h **** 
 537:DSP/Inc/arm_math.h ****   /**
 538:DSP/Inc/arm_math.h ****    * @brief Clips Q31 to Q7 values.
 539:DSP/Inc/arm_math.h ****    */
 540:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q7_t clip_q31_to_q7(
 541:DSP/Inc/arm_math.h ****   q31_t x)
 542:DSP/Inc/arm_math.h ****   {
 543:DSP/Inc/arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 544:DSP/Inc/arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 545:DSP/Inc/arm_math.h ****   }
 546:DSP/Inc/arm_math.h **** 
 547:DSP/Inc/arm_math.h ****   /**
 548:DSP/Inc/arm_math.h ****    * @brief Clips Q31 to Q15 values.
 549:DSP/Inc/arm_math.h ****    */
 550:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q31_to_q15(
 551:DSP/Inc/arm_math.h ****   q31_t x)
 552:DSP/Inc/arm_math.h ****   {
 553:DSP/Inc/arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 554:DSP/Inc/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 555:DSP/Inc/arm_math.h ****   }
 556:DSP/Inc/arm_math.h **** 
 557:DSP/Inc/arm_math.h ****   /**
 558:DSP/Inc/arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 559:DSP/Inc/arm_math.h ****    */
 560:DSP/Inc/arm_math.h **** 
 561:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q63_t mult32x64(
 562:DSP/Inc/arm_math.h ****   q63_t x,
 563:DSP/Inc/arm_math.h ****   q31_t y)
 564:DSP/Inc/arm_math.h ****   {
 565:DSP/Inc/arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 566:DSP/Inc/arm_math.h ****             (((q63_t) (x >> 32) * y)));
 567:DSP/Inc/arm_math.h ****   }
 568:DSP/Inc/arm_math.h **** 
 569:DSP/Inc/arm_math.h ****   /**
 570:DSP/Inc/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
 571:DSP/Inc/arm_math.h ****    */
 572:DSP/Inc/arm_math.h **** 
 573:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q31(
 574:DSP/Inc/arm_math.h ****   q31_t in,
 575:DSP/Inc/arm_math.h ****   q31_t * dst,
 576:DSP/Inc/arm_math.h ****   q31_t * pRecipTable)
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 39


 577:DSP/Inc/arm_math.h ****   {
 578:DSP/Inc/arm_math.h ****     q31_t out;
 579:DSP/Inc/arm_math.h ****     uint32_t tempVal;
 580:DSP/Inc/arm_math.h ****     uint32_t index, i;
 581:DSP/Inc/arm_math.h ****     uint32_t signBits;
 582:DSP/Inc/arm_math.h **** 
 583:DSP/Inc/arm_math.h ****     if (in > 0)
 584:DSP/Inc/arm_math.h ****     {
 585:DSP/Inc/arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
 586:DSP/Inc/arm_math.h ****     }
 587:DSP/Inc/arm_math.h ****     else
 588:DSP/Inc/arm_math.h ****     {
 589:DSP/Inc/arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
 590:DSP/Inc/arm_math.h ****     }
 591:DSP/Inc/arm_math.h **** 
 592:DSP/Inc/arm_math.h ****     /* Convert input sample to 1.31 format */
 593:DSP/Inc/arm_math.h ****     in = (in << signBits);
 594:DSP/Inc/arm_math.h **** 
 595:DSP/Inc/arm_math.h ****     /* calculation of index for initial approximated Val */
 596:DSP/Inc/arm_math.h ****     index = (uint32_t)(in >> 24);
 597:DSP/Inc/arm_math.h ****     index = (index & INDEX_MASK);
 598:DSP/Inc/arm_math.h **** 
 599:DSP/Inc/arm_math.h ****     /* 1.31 with exp 1 */
 600:DSP/Inc/arm_math.h ****     out = pRecipTable[index];
 601:DSP/Inc/arm_math.h **** 
 602:DSP/Inc/arm_math.h ****     /* calculation of reciprocal value */
 603:DSP/Inc/arm_math.h ****     /* running approximation for two iterations */
 604:DSP/Inc/arm_math.h ****     for (i = 0U; i < 2U; i++)
 605:DSP/Inc/arm_math.h ****     {
 606:DSP/Inc/arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
 607:DSP/Inc/arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
 608:DSP/Inc/arm_math.h ****       /*      1.31 with exp 1 */
 609:DSP/Inc/arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
 610:DSP/Inc/arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
 611:DSP/Inc/arm_math.h ****     }
 612:DSP/Inc/arm_math.h **** 
 613:DSP/Inc/arm_math.h ****     /* write output */
 614:DSP/Inc/arm_math.h ****     *dst = out;
 615:DSP/Inc/arm_math.h **** 
 616:DSP/Inc/arm_math.h ****     /* return num of signbits of out = 1/in value */
 617:DSP/Inc/arm_math.h ****     return (signBits + 1U);
 618:DSP/Inc/arm_math.h ****   }
 619:DSP/Inc/arm_math.h **** 
 620:DSP/Inc/arm_math.h **** 
 621:DSP/Inc/arm_math.h ****   /**
 622:DSP/Inc/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q15 Data type.
 623:DSP/Inc/arm_math.h ****    */
 624:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q15(
 625:DSP/Inc/arm_math.h ****   q15_t in,
 626:DSP/Inc/arm_math.h ****   q15_t * dst,
 627:DSP/Inc/arm_math.h ****   q15_t * pRecipTable)
 628:DSP/Inc/arm_math.h ****   {
 629:DSP/Inc/arm_math.h ****     q15_t out = 0;
 630:DSP/Inc/arm_math.h ****     uint32_t tempVal = 0;
 631:DSP/Inc/arm_math.h ****     uint32_t index = 0, i = 0;
 632:DSP/Inc/arm_math.h ****     uint32_t signBits = 0;
 633:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 40


 634:DSP/Inc/arm_math.h ****     if (in > 0)
 635:DSP/Inc/arm_math.h ****     {
 636:DSP/Inc/arm_math.h ****       signBits = ((uint32_t)(__CLZ( in) - 17));
 637:DSP/Inc/arm_math.h ****     }
 638:DSP/Inc/arm_math.h ****     else
 639:DSP/Inc/arm_math.h ****     {
 640:DSP/Inc/arm_math.h ****       signBits = ((uint32_t)(__CLZ(-in) - 17));
 641:DSP/Inc/arm_math.h ****     }
 642:DSP/Inc/arm_math.h **** 
 643:DSP/Inc/arm_math.h ****     /* Convert input sample to 1.15 format */
 644:DSP/Inc/arm_math.h ****     in = (in << signBits);
 645:DSP/Inc/arm_math.h **** 
 646:DSP/Inc/arm_math.h ****     /* calculation of index for initial approximated Val */
 647:DSP/Inc/arm_math.h ****     index = (uint32_t)(in >>  8);
 648:DSP/Inc/arm_math.h ****     index = (index & INDEX_MASK);
 649:DSP/Inc/arm_math.h **** 
 650:DSP/Inc/arm_math.h ****     /*      1.15 with exp 1  */
 651:DSP/Inc/arm_math.h ****     out = pRecipTable[index];
 652:DSP/Inc/arm_math.h **** 
 653:DSP/Inc/arm_math.h ****     /* calculation of reciprocal value */
 654:DSP/Inc/arm_math.h ****     /* running approximation for two iterations */
 655:DSP/Inc/arm_math.h ****     for (i = 0U; i < 2U; i++)
 656:DSP/Inc/arm_math.h ****     {
 657:DSP/Inc/arm_math.h ****       tempVal = (uint32_t) (((q31_t) in * out) >> 15);
 658:DSP/Inc/arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 659:DSP/Inc/arm_math.h ****       /*      1.15 with exp 1 */
 660:DSP/Inc/arm_math.h ****       out = (q15_t) (((q31_t) out * tempVal) >> 14);
 661:DSP/Inc/arm_math.h ****       /* out = clip_q31_to_q15(((q31_t) out * tempVal) >> 14); */
 662:DSP/Inc/arm_math.h ****     }
 663:DSP/Inc/arm_math.h **** 
 664:DSP/Inc/arm_math.h ****     /* write output */
 665:DSP/Inc/arm_math.h ****     *dst = out;
 666:DSP/Inc/arm_math.h **** 
 667:DSP/Inc/arm_math.h ****     /* return num of signbits of out = 1/in value */
 668:DSP/Inc/arm_math.h ****     return (signBits + 1);
 669:DSP/Inc/arm_math.h ****   }
 670:DSP/Inc/arm_math.h **** 
 671:DSP/Inc/arm_math.h **** 
 672:DSP/Inc/arm_math.h **** /*
 673:DSP/Inc/arm_math.h ****  * @brief C custom defined intrinsic function for M3 and M0 processors
 674:DSP/Inc/arm_math.h ****  */
 675:DSP/Inc/arm_math.h **** #if !defined (ARM_MATH_DSP)
 676:DSP/Inc/arm_math.h **** 
 677:DSP/Inc/arm_math.h ****   /*
 678:DSP/Inc/arm_math.h ****    * @brief C custom defined QADD8 for M3 and M0 processors
 679:DSP/Inc/arm_math.h ****    */
 680:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QADD8(
 681:DSP/Inc/arm_math.h ****   uint32_t x,
 682:DSP/Inc/arm_math.h ****   uint32_t y)
 683:DSP/Inc/arm_math.h ****   {
 684:DSP/Inc/arm_math.h ****     q31_t r, s, t, u;
 685:DSP/Inc/arm_math.h **** 
 686:DSP/Inc/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) + (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 687:DSP/Inc/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) + (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 688:DSP/Inc/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) + (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 689:DSP/Inc/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) + (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 690:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 41


 691:DSP/Inc/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 692:DSP/Inc/arm_math.h ****   }
 693:DSP/Inc/arm_math.h **** 
 694:DSP/Inc/arm_math.h **** 
 695:DSP/Inc/arm_math.h ****   /*
 696:DSP/Inc/arm_math.h ****    * @brief C custom defined QSUB8 for M3 and M0 processors
 697:DSP/Inc/arm_math.h ****    */
 698:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB8(
 699:DSP/Inc/arm_math.h ****   uint32_t x,
 700:DSP/Inc/arm_math.h ****   uint32_t y)
 701:DSP/Inc/arm_math.h ****   {
 702:DSP/Inc/arm_math.h ****     q31_t r, s, t, u;
 703:DSP/Inc/arm_math.h **** 
 704:DSP/Inc/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) - (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 705:DSP/Inc/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) - (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 706:DSP/Inc/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) - (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 707:DSP/Inc/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) - (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 708:DSP/Inc/arm_math.h **** 
 709:DSP/Inc/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 710:DSP/Inc/arm_math.h ****   }
 711:DSP/Inc/arm_math.h **** 
 712:DSP/Inc/arm_math.h **** 
 713:DSP/Inc/arm_math.h ****   /*
 714:DSP/Inc/arm_math.h ****    * @brief C custom defined QADD16 for M3 and M0 processors
 715:DSP/Inc/arm_math.h ****    */
 716:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QADD16(
 717:DSP/Inc/arm_math.h ****   uint32_t x,
 718:DSP/Inc/arm_math.h ****   uint32_t y)
 719:DSP/Inc/arm_math.h ****   {
 720:DSP/Inc/arm_math.h **** /*  q31_t r,     s;  without initialisation 'arm_offset_q15 test' fails  but 'intrinsic' tests pass
 721:DSP/Inc/arm_math.h ****     q31_t r = 0, s = 0;
 722:DSP/Inc/arm_math.h **** 
 723:DSP/Inc/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 724:DSP/Inc/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 725:DSP/Inc/arm_math.h **** 
 726:DSP/Inc/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 727:DSP/Inc/arm_math.h ****   }
 728:DSP/Inc/arm_math.h **** 
 729:DSP/Inc/arm_math.h **** 
 730:DSP/Inc/arm_math.h ****   /*
 731:DSP/Inc/arm_math.h ****    * @brief C custom defined SHADD16 for M3 and M0 processors
 732:DSP/Inc/arm_math.h ****    */
 733:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHADD16(
 734:DSP/Inc/arm_math.h ****   uint32_t x,
 735:DSP/Inc/arm_math.h ****   uint32_t y)
 736:DSP/Inc/arm_math.h ****   {
 737:DSP/Inc/arm_math.h ****     q31_t r, s;
 738:DSP/Inc/arm_math.h **** 
 739:DSP/Inc/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 740:DSP/Inc/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 741:DSP/Inc/arm_math.h **** 
 742:DSP/Inc/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 743:DSP/Inc/arm_math.h ****   }
 744:DSP/Inc/arm_math.h **** 
 745:DSP/Inc/arm_math.h **** 
 746:DSP/Inc/arm_math.h ****   /*
 747:DSP/Inc/arm_math.h ****    * @brief C custom defined QSUB16 for M3 and M0 processors
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 42


 748:DSP/Inc/arm_math.h ****    */
 749:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB16(
 750:DSP/Inc/arm_math.h ****   uint32_t x,
 751:DSP/Inc/arm_math.h ****   uint32_t y)
 752:DSP/Inc/arm_math.h ****   {
 753:DSP/Inc/arm_math.h ****     q31_t r, s;
 754:DSP/Inc/arm_math.h **** 
 755:DSP/Inc/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 756:DSP/Inc/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 757:DSP/Inc/arm_math.h **** 
 758:DSP/Inc/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 759:DSP/Inc/arm_math.h ****   }
 760:DSP/Inc/arm_math.h **** 
 761:DSP/Inc/arm_math.h **** 
 762:DSP/Inc/arm_math.h ****   /*
 763:DSP/Inc/arm_math.h ****    * @brief C custom defined SHSUB16 for M3 and M0 processors
 764:DSP/Inc/arm_math.h ****    */
 765:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHSUB16(
 766:DSP/Inc/arm_math.h ****   uint32_t x,
 767:DSP/Inc/arm_math.h ****   uint32_t y)
 768:DSP/Inc/arm_math.h ****   {
 769:DSP/Inc/arm_math.h ****     q31_t r, s;
 770:DSP/Inc/arm_math.h **** 
 771:DSP/Inc/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 772:DSP/Inc/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 773:DSP/Inc/arm_math.h **** 
 774:DSP/Inc/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 775:DSP/Inc/arm_math.h ****   }
 776:DSP/Inc/arm_math.h **** 
 777:DSP/Inc/arm_math.h **** 
 778:DSP/Inc/arm_math.h ****   /*
 779:DSP/Inc/arm_math.h ****    * @brief C custom defined QASX for M3 and M0 processors
 780:DSP/Inc/arm_math.h ****    */
 781:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QASX(
 782:DSP/Inc/arm_math.h ****   uint32_t x,
 783:DSP/Inc/arm_math.h ****   uint32_t y)
 784:DSP/Inc/arm_math.h ****   {
 785:DSP/Inc/arm_math.h ****     q31_t r, s;
 786:DSP/Inc/arm_math.h **** 
 787:DSP/Inc/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 788:DSP/Inc/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 789:DSP/Inc/arm_math.h **** 
 790:DSP/Inc/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 791:DSP/Inc/arm_math.h ****   }
 792:DSP/Inc/arm_math.h **** 
 793:DSP/Inc/arm_math.h **** 
 794:DSP/Inc/arm_math.h ****   /*
 795:DSP/Inc/arm_math.h ****    * @brief C custom defined SHASX for M3 and M0 processors
 796:DSP/Inc/arm_math.h ****    */
 797:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHASX(
 798:DSP/Inc/arm_math.h ****   uint32_t x,
 799:DSP/Inc/arm_math.h ****   uint32_t y)
 800:DSP/Inc/arm_math.h ****   {
 801:DSP/Inc/arm_math.h ****     q31_t r, s;
 802:DSP/Inc/arm_math.h **** 
 803:DSP/Inc/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 804:DSP/Inc/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 43


 805:DSP/Inc/arm_math.h **** 
 806:DSP/Inc/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 807:DSP/Inc/arm_math.h ****   }
 808:DSP/Inc/arm_math.h **** 
 809:DSP/Inc/arm_math.h **** 
 810:DSP/Inc/arm_math.h ****   /*
 811:DSP/Inc/arm_math.h ****    * @brief C custom defined QSAX for M3 and M0 processors
 812:DSP/Inc/arm_math.h ****    */
 813:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSAX(
 814:DSP/Inc/arm_math.h ****   uint32_t x,
 815:DSP/Inc/arm_math.h ****   uint32_t y)
 816:DSP/Inc/arm_math.h ****   {
 817:DSP/Inc/arm_math.h ****     q31_t r, s;
 818:DSP/Inc/arm_math.h **** 
 819:DSP/Inc/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 820:DSP/Inc/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 821:DSP/Inc/arm_math.h **** 
 822:DSP/Inc/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 823:DSP/Inc/arm_math.h ****   }
 824:DSP/Inc/arm_math.h **** 
 825:DSP/Inc/arm_math.h **** 
 826:DSP/Inc/arm_math.h ****   /*
 827:DSP/Inc/arm_math.h ****    * @brief C custom defined SHSAX for M3 and M0 processors
 828:DSP/Inc/arm_math.h ****    */
 829:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHSAX(
 830:DSP/Inc/arm_math.h ****   uint32_t x,
 831:DSP/Inc/arm_math.h ****   uint32_t y)
 832:DSP/Inc/arm_math.h ****   {
 833:DSP/Inc/arm_math.h ****     q31_t r, s;
 834:DSP/Inc/arm_math.h **** 
 835:DSP/Inc/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 836:DSP/Inc/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 837:DSP/Inc/arm_math.h **** 
 838:DSP/Inc/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 839:DSP/Inc/arm_math.h ****   }
 840:DSP/Inc/arm_math.h **** 
 841:DSP/Inc/arm_math.h **** 
 842:DSP/Inc/arm_math.h ****   /*
 843:DSP/Inc/arm_math.h ****    * @brief C custom defined SMUSDX for M3 and M0 processors
 844:DSP/Inc/arm_math.h ****    */
 845:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUSDX(
 846:DSP/Inc/arm_math.h ****   uint32_t x,
 847:DSP/Inc/arm_math.h ****   uint32_t y)
 848:DSP/Inc/arm_math.h ****   {
 849:DSP/Inc/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 850:DSP/Inc/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 851:DSP/Inc/arm_math.h ****   }
 852:DSP/Inc/arm_math.h **** 
 853:DSP/Inc/arm_math.h ****   /*
 854:DSP/Inc/arm_math.h ****    * @brief C custom defined SMUADX for M3 and M0 processors
 855:DSP/Inc/arm_math.h ****    */
 856:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUADX(
 857:DSP/Inc/arm_math.h ****   uint32_t x,
 858:DSP/Inc/arm_math.h ****   uint32_t y)
 859:DSP/Inc/arm_math.h ****   {
 860:DSP/Inc/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 861:DSP/Inc/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 44


 862:DSP/Inc/arm_math.h ****   }
 863:DSP/Inc/arm_math.h **** 
 864:DSP/Inc/arm_math.h **** 
 865:DSP/Inc/arm_math.h ****   /*
 866:DSP/Inc/arm_math.h ****    * @brief C custom defined QADD for M3 and M0 processors
 867:DSP/Inc/arm_math.h ****    */
 868:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __QADD(
 869:DSP/Inc/arm_math.h ****   int32_t x,
 870:DSP/Inc/arm_math.h ****   int32_t y)
 871:DSP/Inc/arm_math.h ****   {
 872:DSP/Inc/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x + (q31_t)y)));
 873:DSP/Inc/arm_math.h ****   }
 874:DSP/Inc/arm_math.h **** 
 875:DSP/Inc/arm_math.h **** 
 876:DSP/Inc/arm_math.h ****   /*
 877:DSP/Inc/arm_math.h ****    * @brief C custom defined QSUB for M3 and M0 processors
 878:DSP/Inc/arm_math.h ****    */
 879:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __QSUB(
 880:DSP/Inc/arm_math.h ****   int32_t x,
 881:DSP/Inc/arm_math.h ****   int32_t y)
 882:DSP/Inc/arm_math.h ****   {
 883:DSP/Inc/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x - (q31_t)y)));
 884:DSP/Inc/arm_math.h ****   }
 885:DSP/Inc/arm_math.h **** 
 886:DSP/Inc/arm_math.h **** 
 887:DSP/Inc/arm_math.h ****   /*
 888:DSP/Inc/arm_math.h ****    * @brief C custom defined SMLAD for M3 and M0 processors
 889:DSP/Inc/arm_math.h ****    */
 890:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLAD(
 891:DSP/Inc/arm_math.h ****   uint32_t x,
 892:DSP/Inc/arm_math.h ****   uint32_t y,
 893:DSP/Inc/arm_math.h ****   uint32_t sum)
 894:DSP/Inc/arm_math.h ****   {
 895:DSP/Inc/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 896:DSP/Inc/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 897:DSP/Inc/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 898:DSP/Inc/arm_math.h ****   }
 899:DSP/Inc/arm_math.h **** 
 900:DSP/Inc/arm_math.h **** 
 901:DSP/Inc/arm_math.h ****   /*
 902:DSP/Inc/arm_math.h ****    * @brief C custom defined SMLADX for M3 and M0 processors
 903:DSP/Inc/arm_math.h ****    */
 904:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLADX(
 905:DSP/Inc/arm_math.h ****   uint32_t x,
 906:DSP/Inc/arm_math.h ****   uint32_t y,
 907:DSP/Inc/arm_math.h ****   uint32_t sum)
 908:DSP/Inc/arm_math.h ****   {
 909:DSP/Inc/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 910:DSP/Inc/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 911:DSP/Inc/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 912:DSP/Inc/arm_math.h ****   }
 913:DSP/Inc/arm_math.h **** 
 914:DSP/Inc/arm_math.h **** 
 915:DSP/Inc/arm_math.h ****   /*
 916:DSP/Inc/arm_math.h ****    * @brief C custom defined SMLSDX for M3 and M0 processors
 917:DSP/Inc/arm_math.h ****    */
 918:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLSDX(
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 45


 919:DSP/Inc/arm_math.h ****   uint32_t x,
 920:DSP/Inc/arm_math.h ****   uint32_t y,
 921:DSP/Inc/arm_math.h ****   uint32_t sum)
 922:DSP/Inc/arm_math.h ****   {
 923:DSP/Inc/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 924:DSP/Inc/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 925:DSP/Inc/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 926:DSP/Inc/arm_math.h ****   }
 927:DSP/Inc/arm_math.h **** 
 928:DSP/Inc/arm_math.h **** 
 929:DSP/Inc/arm_math.h ****   /*
 930:DSP/Inc/arm_math.h ****    * @brief C custom defined SMLALD for M3 and M0 processors
 931:DSP/Inc/arm_math.h ****    */
 932:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint64_t __SMLALD(
 933:DSP/Inc/arm_math.h ****   uint32_t x,
 934:DSP/Inc/arm_math.h ****   uint32_t y,
 935:DSP/Inc/arm_math.h ****   uint64_t sum)
 936:DSP/Inc/arm_math.h ****   {
 937:DSP/Inc/arm_math.h **** /*  return (sum + ((q15_t) (x >> 16) * (q15_t) (y >> 16)) + ((q15_t) x * (q15_t) y)); */
 938:DSP/Inc/arm_math.h ****     return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 939:DSP/Inc/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 940:DSP/Inc/arm_math.h ****                        ( ((q63_t)sum    )                                  )   ));
 941:DSP/Inc/arm_math.h ****   }
 942:DSP/Inc/arm_math.h **** 
 943:DSP/Inc/arm_math.h **** 
 944:DSP/Inc/arm_math.h ****   /*
 945:DSP/Inc/arm_math.h ****    * @brief C custom defined SMLALDX for M3 and M0 processors
 946:DSP/Inc/arm_math.h ****    */
 947:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint64_t __SMLALDX(
 948:DSP/Inc/arm_math.h ****   uint32_t x,
 949:DSP/Inc/arm_math.h ****   uint32_t y,
 950:DSP/Inc/arm_math.h ****   uint64_t sum)
 951:DSP/Inc/arm_math.h ****   {
 952:DSP/Inc/arm_math.h **** /*  return (sum + ((q15_t) (x >> 16) * (q15_t) y)) + ((q15_t) x * (q15_t) (y >> 16)); */
 953:DSP/Inc/arm_math.h ****     return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 954:DSP/Inc/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 955:DSP/Inc/arm_math.h ****                        ( ((q63_t)sum    )                                  )   ));
 956:DSP/Inc/arm_math.h ****   }
 957:DSP/Inc/arm_math.h **** 
 958:DSP/Inc/arm_math.h **** 
 959:DSP/Inc/arm_math.h ****   /*
 960:DSP/Inc/arm_math.h ****    * @brief C custom defined SMUAD for M3 and M0 processors
 961:DSP/Inc/arm_math.h ****    */
 962:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUAD(
 963:DSP/Inc/arm_math.h ****   uint32_t x,
 964:DSP/Inc/arm_math.h ****   uint32_t y)
 965:DSP/Inc/arm_math.h ****   {
 966:DSP/Inc/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 967:DSP/Inc/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
 968:DSP/Inc/arm_math.h ****   }
 969:DSP/Inc/arm_math.h **** 
 970:DSP/Inc/arm_math.h **** 
 971:DSP/Inc/arm_math.h ****   /*
 972:DSP/Inc/arm_math.h ****    * @brief C custom defined SMUSD for M3 and M0 processors
 973:DSP/Inc/arm_math.h ****    */
 974:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUSD(
 975:DSP/Inc/arm_math.h ****   uint32_t x,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 46


 976:DSP/Inc/arm_math.h ****   uint32_t y)
 977:DSP/Inc/arm_math.h ****   {
 978:DSP/Inc/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) -
 979:DSP/Inc/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
 980:DSP/Inc/arm_math.h ****   }
 981:DSP/Inc/arm_math.h **** 
 982:DSP/Inc/arm_math.h **** 
 983:DSP/Inc/arm_math.h ****   /*
 984:DSP/Inc/arm_math.h ****    * @brief C custom defined SXTB16 for M3 and M0 processors
 985:DSP/Inc/arm_math.h ****    */
 986:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SXTB16(
 987:DSP/Inc/arm_math.h ****   uint32_t x)
 988:DSP/Inc/arm_math.h ****   {
 989:DSP/Inc/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 24) >> 24) & (q31_t)0x0000FFFF) |
 990:DSP/Inc/arm_math.h ****                        ((((q31_t)x <<  8) >>  8) & (q31_t)0xFFFF0000)  ));
 991:DSP/Inc/arm_math.h ****   }
 992:DSP/Inc/arm_math.h **** 
 993:DSP/Inc/arm_math.h ****   /*
 994:DSP/Inc/arm_math.h ****    * @brief C custom defined SMMLA for M3 and M0 processors
 995:DSP/Inc/arm_math.h ****    */
 996:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __SMMLA(
 997:DSP/Inc/arm_math.h ****   int32_t x,
 998:DSP/Inc/arm_math.h ****   int32_t y,
 999:DSP/Inc/arm_math.h ****   int32_t sum)
1000:DSP/Inc/arm_math.h ****   {
1001:DSP/Inc/arm_math.h ****     return (sum + (int32_t) (((int64_t) x * y) >> 32));
1002:DSP/Inc/arm_math.h ****   }
1003:DSP/Inc/arm_math.h **** 
1004:DSP/Inc/arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
1005:DSP/Inc/arm_math.h **** 
1006:DSP/Inc/arm_math.h **** 
1007:DSP/Inc/arm_math.h ****   /**
1008:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q7 FIR filter.
1009:DSP/Inc/arm_math.h ****    */
1010:DSP/Inc/arm_math.h ****   typedef struct
1011:DSP/Inc/arm_math.h ****   {
1012:DSP/Inc/arm_math.h ****     uint16_t numTaps;        /**< number of filter coefficients in the filter. */
1013:DSP/Inc/arm_math.h ****     q7_t *pState;            /**< points to the state variable array. The array is of length numTap
1014:DSP/Inc/arm_math.h ****     q7_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.*
1015:DSP/Inc/arm_math.h ****   } arm_fir_instance_q7;
1016:DSP/Inc/arm_math.h **** 
1017:DSP/Inc/arm_math.h ****   /**
1018:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 FIR filter.
1019:DSP/Inc/arm_math.h ****    */
1020:DSP/Inc/arm_math.h ****   typedef struct
1021:DSP/Inc/arm_math.h ****   {
1022:DSP/Inc/arm_math.h ****     uint16_t numTaps;         /**< number of filter coefficients in the filter. */
1023:DSP/Inc/arm_math.h ****     q15_t *pState;            /**< points to the state variable array. The array is of length numTa
1024:DSP/Inc/arm_math.h ****     q15_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.
1025:DSP/Inc/arm_math.h ****   } arm_fir_instance_q15;
1026:DSP/Inc/arm_math.h **** 
1027:DSP/Inc/arm_math.h ****   /**
1028:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 FIR filter.
1029:DSP/Inc/arm_math.h ****    */
1030:DSP/Inc/arm_math.h ****   typedef struct
1031:DSP/Inc/arm_math.h ****   {
1032:DSP/Inc/arm_math.h ****     uint16_t numTaps;         /**< number of filter coefficients in the filter. */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 47


1033:DSP/Inc/arm_math.h ****     q31_t *pState;            /**< points to the state variable array. The array is of length numTa
1034:DSP/Inc/arm_math.h ****     q31_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.
1035:DSP/Inc/arm_math.h ****   } arm_fir_instance_q31;
1036:DSP/Inc/arm_math.h **** 
1037:DSP/Inc/arm_math.h ****   /**
1038:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point FIR filter.
1039:DSP/Inc/arm_math.h ****    */
1040:DSP/Inc/arm_math.h ****   typedef struct
1041:DSP/Inc/arm_math.h ****   {
1042:DSP/Inc/arm_math.h ****     uint16_t numTaps;     /**< number of filter coefficients in the filter. */
1043:DSP/Inc/arm_math.h ****     float32_t *pState;    /**< points to the state variable array. The array is of length numTaps+b
1044:DSP/Inc/arm_math.h ****     float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTaps. */
1045:DSP/Inc/arm_math.h ****   } arm_fir_instance_f32;
1046:DSP/Inc/arm_math.h **** 
1047:DSP/Inc/arm_math.h **** 
1048:DSP/Inc/arm_math.h ****   /**
1049:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q7 FIR filter.
1050:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q7 FIR filter structure.
1051:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1052:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1053:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1054:DSP/Inc/arm_math.h ****    */
1055:DSP/Inc/arm_math.h ****   void arm_fir_q7(
1056:DSP/Inc/arm_math.h ****   const arm_fir_instance_q7 * S,
1057:DSP/Inc/arm_math.h ****   q7_t * pSrc,
1058:DSP/Inc/arm_math.h ****   q7_t * pDst,
1059:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1060:DSP/Inc/arm_math.h **** 
1061:DSP/Inc/arm_math.h **** 
1062:DSP/Inc/arm_math.h ****   /**
1063:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q7 FIR filter.
1064:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q7 FIR structure.
1065:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1066:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1067:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1068:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed.
1069:DSP/Inc/arm_math.h ****    */
1070:DSP/Inc/arm_math.h ****   void arm_fir_init_q7(
1071:DSP/Inc/arm_math.h ****   arm_fir_instance_q7 * S,
1072:DSP/Inc/arm_math.h ****   uint16_t numTaps,
1073:DSP/Inc/arm_math.h ****   q7_t * pCoeffs,
1074:DSP/Inc/arm_math.h ****   q7_t * pState,
1075:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1076:DSP/Inc/arm_math.h **** 
1077:DSP/Inc/arm_math.h **** 
1078:DSP/Inc/arm_math.h ****   /**
1079:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q15 FIR filter.
1080:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR structure.
1081:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1082:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1083:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1084:DSP/Inc/arm_math.h ****    */
1085:DSP/Inc/arm_math.h ****   void arm_fir_q15(
1086:DSP/Inc/arm_math.h ****   const arm_fir_instance_q15 * S,
1087:DSP/Inc/arm_math.h ****   q15_t * pSrc,
1088:DSP/Inc/arm_math.h ****   q15_t * pDst,
1089:DSP/Inc/arm_math.h ****   uint32_t blockSize);
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 48


1090:DSP/Inc/arm_math.h **** 
1091:DSP/Inc/arm_math.h **** 
1092:DSP/Inc/arm_math.h ****   /**
1093:DSP/Inc/arm_math.h ****    * @brief Processing function for the fast Q15 FIR filter for Cortex-M3 and Cortex-M4.
1094:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR filter structure.
1095:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1096:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1097:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1098:DSP/Inc/arm_math.h ****    */
1099:DSP/Inc/arm_math.h ****   void arm_fir_fast_q15(
1100:DSP/Inc/arm_math.h ****   const arm_fir_instance_q15 * S,
1101:DSP/Inc/arm_math.h ****   q15_t * pSrc,
1102:DSP/Inc/arm_math.h ****   q15_t * pDst,
1103:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1104:DSP/Inc/arm_math.h **** 
1105:DSP/Inc/arm_math.h **** 
1106:DSP/Inc/arm_math.h ****   /**
1107:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q15 FIR filter.
1108:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR filter structure.
1109:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter. Must be even and greate
1110:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1111:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1112:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1113:DSP/Inc/arm_math.h ****    * @return The function returns ARM_MATH_SUCCESS if initialization was successful or ARM_MATH_ARG
1114:DSP/Inc/arm_math.h ****    * <code>numTaps</code> is not a supported value.
1115:DSP/Inc/arm_math.h ****    */
1116:DSP/Inc/arm_math.h ****   arm_status arm_fir_init_q15(
1117:DSP/Inc/arm_math.h ****   arm_fir_instance_q15 * S,
1118:DSP/Inc/arm_math.h ****   uint16_t numTaps,
1119:DSP/Inc/arm_math.h ****   q15_t * pCoeffs,
1120:DSP/Inc/arm_math.h ****   q15_t * pState,
1121:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1122:DSP/Inc/arm_math.h **** 
1123:DSP/Inc/arm_math.h **** 
1124:DSP/Inc/arm_math.h ****   /**
1125:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q31 FIR filter.
1126:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR filter structure.
1127:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1128:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1129:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1130:DSP/Inc/arm_math.h ****    */
1131:DSP/Inc/arm_math.h ****   void arm_fir_q31(
1132:DSP/Inc/arm_math.h ****   const arm_fir_instance_q31 * S,
1133:DSP/Inc/arm_math.h ****   q31_t * pSrc,
1134:DSP/Inc/arm_math.h ****   q31_t * pDst,
1135:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1136:DSP/Inc/arm_math.h **** 
1137:DSP/Inc/arm_math.h **** 
1138:DSP/Inc/arm_math.h ****   /**
1139:DSP/Inc/arm_math.h ****    * @brief Processing function for the fast Q31 FIR filter for Cortex-M3 and Cortex-M4.
1140:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR structure.
1141:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1142:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1143:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1144:DSP/Inc/arm_math.h ****    */
1145:DSP/Inc/arm_math.h ****   void arm_fir_fast_q31(
1146:DSP/Inc/arm_math.h ****   const arm_fir_instance_q31 * S,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 49


1147:DSP/Inc/arm_math.h ****   q31_t * pSrc,
1148:DSP/Inc/arm_math.h ****   q31_t * pDst,
1149:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1150:DSP/Inc/arm_math.h **** 
1151:DSP/Inc/arm_math.h **** 
1152:DSP/Inc/arm_math.h ****   /**
1153:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q31 FIR filter.
1154:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR structure.
1155:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1156:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1157:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1158:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1159:DSP/Inc/arm_math.h ****    */
1160:DSP/Inc/arm_math.h ****   void arm_fir_init_q31(
1161:DSP/Inc/arm_math.h ****   arm_fir_instance_q31 * S,
1162:DSP/Inc/arm_math.h ****   uint16_t numTaps,
1163:DSP/Inc/arm_math.h ****   q31_t * pCoeffs,
1164:DSP/Inc/arm_math.h ****   q31_t * pState,
1165:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1166:DSP/Inc/arm_math.h **** 
1167:DSP/Inc/arm_math.h **** 
1168:DSP/Inc/arm_math.h ****   /**
1169:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point FIR filter.
1170:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR structure.
1171:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1172:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1173:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1174:DSP/Inc/arm_math.h ****    */
1175:DSP/Inc/arm_math.h ****   void arm_fir_f32(
1176:DSP/Inc/arm_math.h ****   const arm_fir_instance_f32 * S,
1177:DSP/Inc/arm_math.h ****   float32_t * pSrc,
1178:DSP/Inc/arm_math.h ****   float32_t * pDst,
1179:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1180:DSP/Inc/arm_math.h **** 
1181:DSP/Inc/arm_math.h **** 
1182:DSP/Inc/arm_math.h ****   /**
1183:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the floating-point FIR filter.
1184:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR filter structure.
1185:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1186:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1187:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1188:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1189:DSP/Inc/arm_math.h ****    */
1190:DSP/Inc/arm_math.h ****   void arm_fir_init_f32(
1191:DSP/Inc/arm_math.h ****   arm_fir_instance_f32 * S,
1192:DSP/Inc/arm_math.h ****   uint16_t numTaps,
1193:DSP/Inc/arm_math.h ****   float32_t * pCoeffs,
1194:DSP/Inc/arm_math.h ****   float32_t * pState,
1195:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1196:DSP/Inc/arm_math.h **** 
1197:DSP/Inc/arm_math.h **** 
1198:DSP/Inc/arm_math.h ****   /**
1199:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 Biquad cascade filter.
1200:DSP/Inc/arm_math.h ****    */
1201:DSP/Inc/arm_math.h ****   typedef struct
1202:DSP/Inc/arm_math.h ****   {
1203:DSP/Inc/arm_math.h ****     int8_t numStages;        /**< number of 2nd order stages in the filter.  Overall order is 2*num
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 50


1204:DSP/Inc/arm_math.h ****     q15_t *pState;           /**< Points to the array of state coefficients.  The array is of lengt
1205:DSP/Inc/arm_math.h ****     q15_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of length 5*nu
1206:DSP/Inc/arm_math.h ****     int8_t postShift;        /**< Additional shift, in bits, applied to each output sample. */
1207:DSP/Inc/arm_math.h ****   } arm_biquad_casd_df1_inst_q15;
1208:DSP/Inc/arm_math.h **** 
1209:DSP/Inc/arm_math.h ****   /**
1210:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 Biquad cascade filter.
1211:DSP/Inc/arm_math.h ****    */
1212:DSP/Inc/arm_math.h ****   typedef struct
1213:DSP/Inc/arm_math.h ****   {
1214:DSP/Inc/arm_math.h ****     uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is 2*num
1215:DSP/Inc/arm_math.h ****     q31_t *pState;           /**< Points to the array of state coefficients.  The array is of lengt
1216:DSP/Inc/arm_math.h ****     q31_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of length 5*nu
1217:DSP/Inc/arm_math.h ****     uint8_t postShift;       /**< Additional shift, in bits, applied to each output sample. */
1218:DSP/Inc/arm_math.h ****   } arm_biquad_casd_df1_inst_q31;
1219:DSP/Inc/arm_math.h **** 
1220:DSP/Inc/arm_math.h ****   /**
1221:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point Biquad cascade filter.
1222:DSP/Inc/arm_math.h ****    */
1223:DSP/Inc/arm_math.h ****   typedef struct
1224:DSP/Inc/arm_math.h ****   {
1225:DSP/Inc/arm_math.h ****     uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is 2*num
1226:DSP/Inc/arm_math.h ****     float32_t *pState;       /**< Points to the array of state coefficients.  The array is of lengt
1227:DSP/Inc/arm_math.h ****     float32_t *pCoeffs;      /**< Points to the array of coefficients.  The array is of length 5*nu
1228:DSP/Inc/arm_math.h ****   } arm_biquad_casd_df1_inst_f32;
1229:DSP/Inc/arm_math.h **** 
1230:DSP/Inc/arm_math.h **** 
1231:DSP/Inc/arm_math.h ****   /**
1232:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q15 Biquad cascade filter.
1233:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
1234:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1235:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1236:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1237:DSP/Inc/arm_math.h ****    */
1238:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df1_q15(
1239:DSP/Inc/arm_math.h ****   const arm_biquad_casd_df1_inst_q15 * S,
1240:DSP/Inc/arm_math.h ****   q15_t * pSrc,
1241:DSP/Inc/arm_math.h ****   q15_t * pDst,
1242:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1243:DSP/Inc/arm_math.h **** 
1244:DSP/Inc/arm_math.h **** 
1245:DSP/Inc/arm_math.h ****   /**
1246:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q15 Biquad cascade filter.
1247:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 Biquad cascade structure.
1248:DSP/Inc/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1249:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1250:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1251:DSP/Inc/arm_math.h ****    * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficie
1252:DSP/Inc/arm_math.h ****    */
1253:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df1_init_q15(
1254:DSP/Inc/arm_math.h ****   arm_biquad_casd_df1_inst_q15 * S,
1255:DSP/Inc/arm_math.h ****   uint8_t numStages,
1256:DSP/Inc/arm_math.h ****   q15_t * pCoeffs,
1257:DSP/Inc/arm_math.h ****   q15_t * pState,
1258:DSP/Inc/arm_math.h ****   int8_t postShift);
1259:DSP/Inc/arm_math.h **** 
1260:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 51


1261:DSP/Inc/arm_math.h ****   /**
1262:DSP/Inc/arm_math.h ****    * @brief Fast but less precise processing function for the Q15 Biquad cascade filter for Cortex-
1263:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
1264:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1265:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1266:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1267:DSP/Inc/arm_math.h ****    */
1268:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df1_fast_q15(
1269:DSP/Inc/arm_math.h ****   const arm_biquad_casd_df1_inst_q15 * S,
1270:DSP/Inc/arm_math.h ****   q15_t * pSrc,
1271:DSP/Inc/arm_math.h ****   q15_t * pDst,
1272:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1273:DSP/Inc/arm_math.h **** 
1274:DSP/Inc/arm_math.h **** 
1275:DSP/Inc/arm_math.h ****   /**
1276:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q31 Biquad cascade filter
1277:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
1278:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1279:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1280:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1281:DSP/Inc/arm_math.h ****    */
1282:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df1_q31(
1283:DSP/Inc/arm_math.h ****   const arm_biquad_casd_df1_inst_q31 * S,
1284:DSP/Inc/arm_math.h ****   q31_t * pSrc,
1285:DSP/Inc/arm_math.h ****   q31_t * pDst,
1286:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1287:DSP/Inc/arm_math.h **** 
1288:DSP/Inc/arm_math.h **** 
1289:DSP/Inc/arm_math.h ****   /**
1290:DSP/Inc/arm_math.h ****    * @brief Fast but less precise processing function for the Q31 Biquad cascade filter for Cortex-
1291:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
1292:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1293:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1294:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1295:DSP/Inc/arm_math.h ****    */
1296:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df1_fast_q31(
1297:DSP/Inc/arm_math.h ****   const arm_biquad_casd_df1_inst_q31 * S,
1298:DSP/Inc/arm_math.h ****   q31_t * pSrc,
1299:DSP/Inc/arm_math.h ****   q31_t * pDst,
1300:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1301:DSP/Inc/arm_math.h **** 
1302:DSP/Inc/arm_math.h **** 
1303:DSP/Inc/arm_math.h ****   /**
1304:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q31 Biquad cascade filter.
1305:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 Biquad cascade structure.
1306:DSP/Inc/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1307:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1308:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1309:DSP/Inc/arm_math.h ****    * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficie
1310:DSP/Inc/arm_math.h ****    */
1311:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df1_init_q31(
1312:DSP/Inc/arm_math.h ****   arm_biquad_casd_df1_inst_q31 * S,
1313:DSP/Inc/arm_math.h ****   uint8_t numStages,
1314:DSP/Inc/arm_math.h ****   q31_t * pCoeffs,
1315:DSP/Inc/arm_math.h ****   q31_t * pState,
1316:DSP/Inc/arm_math.h ****   int8_t postShift);
1317:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 52


1318:DSP/Inc/arm_math.h **** 
1319:DSP/Inc/arm_math.h ****   /**
1320:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point Biquad cascade filter.
1321:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point Biquad cascade structure.
1322:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1323:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1324:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1325:DSP/Inc/arm_math.h ****    */
1326:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df1_f32(
1327:DSP/Inc/arm_math.h ****   const arm_biquad_casd_df1_inst_f32 * S,
1328:DSP/Inc/arm_math.h ****   float32_t * pSrc,
1329:DSP/Inc/arm_math.h ****   float32_t * pDst,
1330:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1331:DSP/Inc/arm_math.h **** 
1332:DSP/Inc/arm_math.h **** 
1333:DSP/Inc/arm_math.h ****   /**
1334:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the floating-point Biquad cascade filter.
1335:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point Biquad cascade structure
1336:DSP/Inc/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1337:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1338:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1339:DSP/Inc/arm_math.h ****    */
1340:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df1_init_f32(
1341:DSP/Inc/arm_math.h ****   arm_biquad_casd_df1_inst_f32 * S,
1342:DSP/Inc/arm_math.h ****   uint8_t numStages,
1343:DSP/Inc/arm_math.h ****   float32_t * pCoeffs,
1344:DSP/Inc/arm_math.h ****   float32_t * pState);
1345:DSP/Inc/arm_math.h **** 
1346:DSP/Inc/arm_math.h **** 
1347:DSP/Inc/arm_math.h ****   /**
1348:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point matrix structure.
1349:DSP/Inc/arm_math.h ****    */
1350:DSP/Inc/arm_math.h ****   typedef struct
1351:DSP/Inc/arm_math.h ****   {
1352:DSP/Inc/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1353:DSP/Inc/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1354:DSP/Inc/arm_math.h ****     float32_t *pData;     /**< points to the data of the matrix. */
1355:DSP/Inc/arm_math.h ****   } arm_matrix_instance_f32;
1356:DSP/Inc/arm_math.h **** 
1357:DSP/Inc/arm_math.h **** 
1358:DSP/Inc/arm_math.h ****   /**
1359:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point matrix structure.
1360:DSP/Inc/arm_math.h ****    */
1361:DSP/Inc/arm_math.h ****   typedef struct
1362:DSP/Inc/arm_math.h ****   {
1363:DSP/Inc/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1364:DSP/Inc/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1365:DSP/Inc/arm_math.h ****     float64_t *pData;     /**< points to the data of the matrix. */
1366:DSP/Inc/arm_math.h ****   } arm_matrix_instance_f64;
1367:DSP/Inc/arm_math.h **** 
1368:DSP/Inc/arm_math.h ****   /**
1369:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 matrix structure.
1370:DSP/Inc/arm_math.h ****    */
1371:DSP/Inc/arm_math.h ****   typedef struct
1372:DSP/Inc/arm_math.h ****   {
1373:DSP/Inc/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1374:DSP/Inc/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 53


1375:DSP/Inc/arm_math.h ****     q15_t *pData;         /**< points to the data of the matrix. */
1376:DSP/Inc/arm_math.h ****   } arm_matrix_instance_q15;
1377:DSP/Inc/arm_math.h **** 
1378:DSP/Inc/arm_math.h ****   /**
1379:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 matrix structure.
1380:DSP/Inc/arm_math.h ****    */
1381:DSP/Inc/arm_math.h ****   typedef struct
1382:DSP/Inc/arm_math.h ****   {
1383:DSP/Inc/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1384:DSP/Inc/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1385:DSP/Inc/arm_math.h ****     q31_t *pData;         /**< points to the data of the matrix. */
1386:DSP/Inc/arm_math.h ****   } arm_matrix_instance_q31;
1387:DSP/Inc/arm_math.h **** 
1388:DSP/Inc/arm_math.h **** 
1389:DSP/Inc/arm_math.h ****   /**
1390:DSP/Inc/arm_math.h ****    * @brief Floating-point matrix addition.
1391:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1392:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1393:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1394:DSP/Inc/arm_math.h ****    * @return     The function returns either
1395:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1396:DSP/Inc/arm_math.h ****    */
1397:DSP/Inc/arm_math.h ****   arm_status arm_mat_add_f32(
1398:DSP/Inc/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1399:DSP/Inc/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1400:DSP/Inc/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1401:DSP/Inc/arm_math.h **** 
1402:DSP/Inc/arm_math.h **** 
1403:DSP/Inc/arm_math.h ****   /**
1404:DSP/Inc/arm_math.h ****    * @brief Q15 matrix addition.
1405:DSP/Inc/arm_math.h ****    * @param[in]   pSrcA  points to the first input matrix structure
1406:DSP/Inc/arm_math.h ****    * @param[in]   pSrcB  points to the second input matrix structure
1407:DSP/Inc/arm_math.h ****    * @param[out]  pDst   points to output matrix structure
1408:DSP/Inc/arm_math.h ****    * @return     The function returns either
1409:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1410:DSP/Inc/arm_math.h ****    */
1411:DSP/Inc/arm_math.h ****   arm_status arm_mat_add_q15(
1412:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1413:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1414:DSP/Inc/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1415:DSP/Inc/arm_math.h **** 
1416:DSP/Inc/arm_math.h **** 
1417:DSP/Inc/arm_math.h ****   /**
1418:DSP/Inc/arm_math.h ****    * @brief Q31 matrix addition.
1419:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1420:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1421:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1422:DSP/Inc/arm_math.h ****    * @return     The function returns either
1423:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1424:DSP/Inc/arm_math.h ****    */
1425:DSP/Inc/arm_math.h ****   arm_status arm_mat_add_q31(
1426:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1427:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1428:DSP/Inc/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1429:DSP/Inc/arm_math.h **** 
1430:DSP/Inc/arm_math.h **** 
1431:DSP/Inc/arm_math.h ****   /**
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 54


1432:DSP/Inc/arm_math.h ****    * @brief Floating-point, complex, matrix multiplication.
1433:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1434:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1435:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1436:DSP/Inc/arm_math.h ****    * @return     The function returns either
1437:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1438:DSP/Inc/arm_math.h ****    */
1439:DSP/Inc/arm_math.h ****   arm_status arm_mat_cmplx_mult_f32(
1440:DSP/Inc/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1441:DSP/Inc/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1442:DSP/Inc/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1443:DSP/Inc/arm_math.h **** 
1444:DSP/Inc/arm_math.h **** 
1445:DSP/Inc/arm_math.h ****   /**
1446:DSP/Inc/arm_math.h ****    * @brief Q15, complex,  matrix multiplication.
1447:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1448:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1449:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1450:DSP/Inc/arm_math.h ****    * @return     The function returns either
1451:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1452:DSP/Inc/arm_math.h ****    */
1453:DSP/Inc/arm_math.h ****   arm_status arm_mat_cmplx_mult_q15(
1454:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1455:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1456:DSP/Inc/arm_math.h ****   arm_matrix_instance_q15 * pDst,
1457:DSP/Inc/arm_math.h ****   q15_t * pScratch);
1458:DSP/Inc/arm_math.h **** 
1459:DSP/Inc/arm_math.h **** 
1460:DSP/Inc/arm_math.h ****   /**
1461:DSP/Inc/arm_math.h ****    * @brief Q31, complex, matrix multiplication.
1462:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1463:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1464:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1465:DSP/Inc/arm_math.h ****    * @return     The function returns either
1466:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1467:DSP/Inc/arm_math.h ****    */
1468:DSP/Inc/arm_math.h ****   arm_status arm_mat_cmplx_mult_q31(
1469:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1470:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1471:DSP/Inc/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1472:DSP/Inc/arm_math.h **** 
1473:DSP/Inc/arm_math.h **** 
1474:DSP/Inc/arm_math.h ****   /**
1475:DSP/Inc/arm_math.h ****    * @brief Floating-point matrix transpose.
1476:DSP/Inc/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1477:DSP/Inc/arm_math.h ****    * @param[out] pDst  points to the output matrix
1478:DSP/Inc/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1479:DSP/Inc/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1480:DSP/Inc/arm_math.h ****    */
1481:DSP/Inc/arm_math.h ****   arm_status arm_mat_trans_f32(
1482:DSP/Inc/arm_math.h ****   const arm_matrix_instance_f32 * pSrc,
1483:DSP/Inc/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1484:DSP/Inc/arm_math.h **** 
1485:DSP/Inc/arm_math.h **** 
1486:DSP/Inc/arm_math.h ****   /**
1487:DSP/Inc/arm_math.h ****    * @brief Q15 matrix transpose.
1488:DSP/Inc/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 55


1489:DSP/Inc/arm_math.h ****    * @param[out] pDst  points to the output matrix
1490:DSP/Inc/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1491:DSP/Inc/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1492:DSP/Inc/arm_math.h ****    */
1493:DSP/Inc/arm_math.h ****   arm_status arm_mat_trans_q15(
1494:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrc,
1495:DSP/Inc/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1496:DSP/Inc/arm_math.h **** 
1497:DSP/Inc/arm_math.h **** 
1498:DSP/Inc/arm_math.h ****   /**
1499:DSP/Inc/arm_math.h ****    * @brief Q31 matrix transpose.
1500:DSP/Inc/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1501:DSP/Inc/arm_math.h ****    * @param[out] pDst  points to the output matrix
1502:DSP/Inc/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1503:DSP/Inc/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1504:DSP/Inc/arm_math.h ****    */
1505:DSP/Inc/arm_math.h ****   arm_status arm_mat_trans_q31(
1506:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrc,
1507:DSP/Inc/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1508:DSP/Inc/arm_math.h **** 
1509:DSP/Inc/arm_math.h **** 
1510:DSP/Inc/arm_math.h ****   /**
1511:DSP/Inc/arm_math.h ****    * @brief Floating-point matrix multiplication
1512:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1513:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1514:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1515:DSP/Inc/arm_math.h ****    * @return     The function returns either
1516:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1517:DSP/Inc/arm_math.h ****    */
1518:DSP/Inc/arm_math.h ****   arm_status arm_mat_mult_f32(
1519:DSP/Inc/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1520:DSP/Inc/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1521:DSP/Inc/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1522:DSP/Inc/arm_math.h **** 
1523:DSP/Inc/arm_math.h **** 
1524:DSP/Inc/arm_math.h ****   /**
1525:DSP/Inc/arm_math.h ****    * @brief Q15 matrix multiplication
1526:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA   points to the first input matrix structure
1527:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB   points to the second input matrix structure
1528:DSP/Inc/arm_math.h ****    * @param[out] pDst    points to output matrix structure
1529:DSP/Inc/arm_math.h ****    * @param[in]  pState  points to the array for storing intermediate results
1530:DSP/Inc/arm_math.h ****    * @return     The function returns either
1531:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1532:DSP/Inc/arm_math.h ****    */
1533:DSP/Inc/arm_math.h ****   arm_status arm_mat_mult_q15(
1534:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1535:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1536:DSP/Inc/arm_math.h ****   arm_matrix_instance_q15 * pDst,
1537:DSP/Inc/arm_math.h ****   q15_t * pState);
1538:DSP/Inc/arm_math.h **** 
1539:DSP/Inc/arm_math.h **** 
1540:DSP/Inc/arm_math.h ****   /**
1541:DSP/Inc/arm_math.h ****    * @brief Q15 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
1542:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA   points to the first input matrix structure
1543:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB   points to the second input matrix structure
1544:DSP/Inc/arm_math.h ****    * @param[out] pDst    points to output matrix structure
1545:DSP/Inc/arm_math.h ****    * @param[in]  pState  points to the array for storing intermediate results
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 56


1546:DSP/Inc/arm_math.h ****    * @return     The function returns either
1547:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1548:DSP/Inc/arm_math.h ****    */
1549:DSP/Inc/arm_math.h ****   arm_status arm_mat_mult_fast_q15(
1550:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1551:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1552:DSP/Inc/arm_math.h ****   arm_matrix_instance_q15 * pDst,
1553:DSP/Inc/arm_math.h ****   q15_t * pState);
1554:DSP/Inc/arm_math.h **** 
1555:DSP/Inc/arm_math.h **** 
1556:DSP/Inc/arm_math.h ****   /**
1557:DSP/Inc/arm_math.h ****    * @brief Q31 matrix multiplication
1558:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1559:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1560:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1561:DSP/Inc/arm_math.h ****    * @return     The function returns either
1562:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1563:DSP/Inc/arm_math.h ****    */
1564:DSP/Inc/arm_math.h ****   arm_status arm_mat_mult_q31(
1565:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1566:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1567:DSP/Inc/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1568:DSP/Inc/arm_math.h **** 
1569:DSP/Inc/arm_math.h **** 
1570:DSP/Inc/arm_math.h ****   /**
1571:DSP/Inc/arm_math.h ****    * @brief Q31 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
1572:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1573:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1574:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1575:DSP/Inc/arm_math.h ****    * @return     The function returns either
1576:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1577:DSP/Inc/arm_math.h ****    */
1578:DSP/Inc/arm_math.h ****   arm_status arm_mat_mult_fast_q31(
1579:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1580:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1581:DSP/Inc/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1582:DSP/Inc/arm_math.h **** 
1583:DSP/Inc/arm_math.h **** 
1584:DSP/Inc/arm_math.h ****   /**
1585:DSP/Inc/arm_math.h ****    * @brief Floating-point matrix subtraction
1586:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1587:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1588:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1589:DSP/Inc/arm_math.h ****    * @return     The function returns either
1590:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1591:DSP/Inc/arm_math.h ****    */
1592:DSP/Inc/arm_math.h ****   arm_status arm_mat_sub_f32(
1593:DSP/Inc/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1594:DSP/Inc/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1595:DSP/Inc/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1596:DSP/Inc/arm_math.h **** 
1597:DSP/Inc/arm_math.h **** 
1598:DSP/Inc/arm_math.h ****   /**
1599:DSP/Inc/arm_math.h ****    * @brief Q15 matrix subtraction
1600:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1601:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1602:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 57


1603:DSP/Inc/arm_math.h ****    * @return     The function returns either
1604:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1605:DSP/Inc/arm_math.h ****    */
1606:DSP/Inc/arm_math.h ****   arm_status arm_mat_sub_q15(
1607:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1608:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1609:DSP/Inc/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1610:DSP/Inc/arm_math.h **** 
1611:DSP/Inc/arm_math.h **** 
1612:DSP/Inc/arm_math.h ****   /**
1613:DSP/Inc/arm_math.h ****    * @brief Q31 matrix subtraction
1614:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1615:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1616:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1617:DSP/Inc/arm_math.h ****    * @return     The function returns either
1618:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1619:DSP/Inc/arm_math.h ****    */
1620:DSP/Inc/arm_math.h ****   arm_status arm_mat_sub_q31(
1621:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1622:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1623:DSP/Inc/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1624:DSP/Inc/arm_math.h **** 
1625:DSP/Inc/arm_math.h **** 
1626:DSP/Inc/arm_math.h ****   /**
1627:DSP/Inc/arm_math.h ****    * @brief Floating-point matrix scaling.
1628:DSP/Inc/arm_math.h ****    * @param[in]  pSrc   points to the input matrix
1629:DSP/Inc/arm_math.h ****    * @param[in]  scale  scale factor
1630:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to the output matrix
1631:DSP/Inc/arm_math.h ****    * @return     The function returns either
1632:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1633:DSP/Inc/arm_math.h ****    */
1634:DSP/Inc/arm_math.h ****   arm_status arm_mat_scale_f32(
1635:DSP/Inc/arm_math.h ****   const arm_matrix_instance_f32 * pSrc,
1636:DSP/Inc/arm_math.h ****   float32_t scale,
1637:DSP/Inc/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1638:DSP/Inc/arm_math.h **** 
1639:DSP/Inc/arm_math.h **** 
1640:DSP/Inc/arm_math.h ****   /**
1641:DSP/Inc/arm_math.h ****    * @brief Q15 matrix scaling.
1642:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to input matrix
1643:DSP/Inc/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale factor
1644:DSP/Inc/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
1645:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to output matrix
1646:DSP/Inc/arm_math.h ****    * @return     The function returns either
1647:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1648:DSP/Inc/arm_math.h ****    */
1649:DSP/Inc/arm_math.h ****   arm_status arm_mat_scale_q15(
1650:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrc,
1651:DSP/Inc/arm_math.h ****   q15_t scaleFract,
1652:DSP/Inc/arm_math.h ****   int32_t shift,
1653:DSP/Inc/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1654:DSP/Inc/arm_math.h **** 
1655:DSP/Inc/arm_math.h **** 
1656:DSP/Inc/arm_math.h ****   /**
1657:DSP/Inc/arm_math.h ****    * @brief Q31 matrix scaling.
1658:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to input matrix
1659:DSP/Inc/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale factor
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 58


1660:DSP/Inc/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
1661:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to output matrix structure
1662:DSP/Inc/arm_math.h ****    * @return     The function returns either
1663:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1664:DSP/Inc/arm_math.h ****    */
1665:DSP/Inc/arm_math.h ****   arm_status arm_mat_scale_q31(
1666:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrc,
1667:DSP/Inc/arm_math.h ****   q31_t scaleFract,
1668:DSP/Inc/arm_math.h ****   int32_t shift,
1669:DSP/Inc/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1670:DSP/Inc/arm_math.h **** 
1671:DSP/Inc/arm_math.h **** 
1672:DSP/Inc/arm_math.h ****   /**
1673:DSP/Inc/arm_math.h ****    * @brief  Q31 matrix initialization.
1674:DSP/Inc/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1675:DSP/Inc/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1676:DSP/Inc/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1677:DSP/Inc/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1678:DSP/Inc/arm_math.h ****    */
1679:DSP/Inc/arm_math.h ****   void arm_mat_init_q31(
1680:DSP/Inc/arm_math.h ****   arm_matrix_instance_q31 * S,
1681:DSP/Inc/arm_math.h ****   uint16_t nRows,
1682:DSP/Inc/arm_math.h ****   uint16_t nColumns,
1683:DSP/Inc/arm_math.h ****   q31_t * pData);
1684:DSP/Inc/arm_math.h **** 
1685:DSP/Inc/arm_math.h **** 
1686:DSP/Inc/arm_math.h ****   /**
1687:DSP/Inc/arm_math.h ****    * @brief  Q15 matrix initialization.
1688:DSP/Inc/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1689:DSP/Inc/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1690:DSP/Inc/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1691:DSP/Inc/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1692:DSP/Inc/arm_math.h ****    */
1693:DSP/Inc/arm_math.h ****   void arm_mat_init_q15(
1694:DSP/Inc/arm_math.h ****   arm_matrix_instance_q15 * S,
1695:DSP/Inc/arm_math.h ****   uint16_t nRows,
1696:DSP/Inc/arm_math.h ****   uint16_t nColumns,
1697:DSP/Inc/arm_math.h ****   q15_t * pData);
1698:DSP/Inc/arm_math.h **** 
1699:DSP/Inc/arm_math.h **** 
1700:DSP/Inc/arm_math.h ****   /**
1701:DSP/Inc/arm_math.h ****    * @brief  Floating-point matrix initialization.
1702:DSP/Inc/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1703:DSP/Inc/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1704:DSP/Inc/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1705:DSP/Inc/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1706:DSP/Inc/arm_math.h ****    */
1707:DSP/Inc/arm_math.h ****   void arm_mat_init_f32(
1708:DSP/Inc/arm_math.h ****   arm_matrix_instance_f32 * S,
1709:DSP/Inc/arm_math.h ****   uint16_t nRows,
1710:DSP/Inc/arm_math.h ****   uint16_t nColumns,
1711:DSP/Inc/arm_math.h ****   float32_t * pData);
1712:DSP/Inc/arm_math.h **** 
1713:DSP/Inc/arm_math.h **** 
1714:DSP/Inc/arm_math.h **** 
1715:DSP/Inc/arm_math.h ****   /**
1716:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 PID Control.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 59


1717:DSP/Inc/arm_math.h ****    */
1718:DSP/Inc/arm_math.h ****   typedef struct
1719:DSP/Inc/arm_math.h ****   {
1720:DSP/Inc/arm_math.h ****     q15_t A0;           /**< The derived gain, A0 = Kp + Ki + Kd . */
1721:DSP/Inc/arm_math.h **** #if !defined (ARM_MATH_DSP)
1722:DSP/Inc/arm_math.h ****     q15_t A1;
1723:DSP/Inc/arm_math.h ****     q15_t A2;
1724:DSP/Inc/arm_math.h **** #else
1725:DSP/Inc/arm_math.h ****     q31_t A1;           /**< The derived gain A1 = -Kp - 2Kd | Kd.*/
1726:DSP/Inc/arm_math.h **** #endif
1727:DSP/Inc/arm_math.h ****     q15_t state[3];     /**< The state array of length 3. */
1728:DSP/Inc/arm_math.h ****     q15_t Kp;           /**< The proportional gain. */
1729:DSP/Inc/arm_math.h ****     q15_t Ki;           /**< The integral gain. */
1730:DSP/Inc/arm_math.h ****     q15_t Kd;           /**< The derivative gain. */
1731:DSP/Inc/arm_math.h ****   } arm_pid_instance_q15;
1732:DSP/Inc/arm_math.h **** 
1733:DSP/Inc/arm_math.h ****   /**
1734:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 PID Control.
1735:DSP/Inc/arm_math.h ****    */
1736:DSP/Inc/arm_math.h ****   typedef struct
1737:DSP/Inc/arm_math.h ****   {
1738:DSP/Inc/arm_math.h ****     q31_t A0;            /**< The derived gain, A0 = Kp + Ki + Kd . */
1739:DSP/Inc/arm_math.h ****     q31_t A1;            /**< The derived gain, A1 = -Kp - 2Kd. */
1740:DSP/Inc/arm_math.h ****     q31_t A2;            /**< The derived gain, A2 = Kd . */
1741:DSP/Inc/arm_math.h ****     q31_t state[3];      /**< The state array of length 3. */
1742:DSP/Inc/arm_math.h ****     q31_t Kp;            /**< The proportional gain. */
1743:DSP/Inc/arm_math.h ****     q31_t Ki;            /**< The integral gain. */
1744:DSP/Inc/arm_math.h ****     q31_t Kd;            /**< The derivative gain. */
1745:DSP/Inc/arm_math.h ****   } arm_pid_instance_q31;
1746:DSP/Inc/arm_math.h **** 
1747:DSP/Inc/arm_math.h ****   /**
1748:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point PID Control.
1749:DSP/Inc/arm_math.h ****    */
1750:DSP/Inc/arm_math.h ****   typedef struct
1751:DSP/Inc/arm_math.h ****   {
1752:DSP/Inc/arm_math.h ****     float32_t A0;          /**< The derived gain, A0 = Kp + Ki + Kd . */
1753:DSP/Inc/arm_math.h ****     float32_t A1;          /**< The derived gain, A1 = -Kp - 2Kd. */
1754:DSP/Inc/arm_math.h ****     float32_t A2;          /**< The derived gain, A2 = Kd . */
1755:DSP/Inc/arm_math.h ****     float32_t state[3];    /**< The state array of length 3. */
1756:DSP/Inc/arm_math.h ****     float32_t Kp;          /**< The proportional gain. */
1757:DSP/Inc/arm_math.h ****     float32_t Ki;          /**< The integral gain. */
1758:DSP/Inc/arm_math.h ****     float32_t Kd;          /**< The derivative gain. */
1759:DSP/Inc/arm_math.h ****   } arm_pid_instance_f32;
1760:DSP/Inc/arm_math.h **** 
1761:DSP/Inc/arm_math.h **** 
1762:DSP/Inc/arm_math.h **** 
1763:DSP/Inc/arm_math.h ****   /**
1764:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the floating-point PID Control.
1765:DSP/Inc/arm_math.h ****    * @param[in,out] S               points to an instance of the PID structure.
1766:DSP/Inc/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1767:DSP/Inc/arm_math.h ****    */
1768:DSP/Inc/arm_math.h ****   void arm_pid_init_f32(
1769:DSP/Inc/arm_math.h ****   arm_pid_instance_f32 * S,
1770:DSP/Inc/arm_math.h ****   int32_t resetStateFlag);
1771:DSP/Inc/arm_math.h **** 
1772:DSP/Inc/arm_math.h **** 
1773:DSP/Inc/arm_math.h ****   /**
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 60


1774:DSP/Inc/arm_math.h ****    * @brief  Reset function for the floating-point PID Control.
1775:DSP/Inc/arm_math.h ****    * @param[in,out] S  is an instance of the floating-point PID Control structure
1776:DSP/Inc/arm_math.h ****    */
1777:DSP/Inc/arm_math.h ****   void arm_pid_reset_f32(
1778:DSP/Inc/arm_math.h ****   arm_pid_instance_f32 * S);
1779:DSP/Inc/arm_math.h **** 
1780:DSP/Inc/arm_math.h **** 
1781:DSP/Inc/arm_math.h ****   /**
1782:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q31 PID Control.
1783:DSP/Inc/arm_math.h ****    * @param[in,out] S               points to an instance of the Q15 PID structure.
1784:DSP/Inc/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1785:DSP/Inc/arm_math.h ****    */
1786:DSP/Inc/arm_math.h ****   void arm_pid_init_q31(
1787:DSP/Inc/arm_math.h ****   arm_pid_instance_q31 * S,
1788:DSP/Inc/arm_math.h ****   int32_t resetStateFlag);
1789:DSP/Inc/arm_math.h **** 
1790:DSP/Inc/arm_math.h **** 
1791:DSP/Inc/arm_math.h ****   /**
1792:DSP/Inc/arm_math.h ****    * @brief  Reset function for the Q31 PID Control.
1793:DSP/Inc/arm_math.h ****    * @param[in,out] S   points to an instance of the Q31 PID Control structure
1794:DSP/Inc/arm_math.h ****    */
1795:DSP/Inc/arm_math.h **** 
1796:DSP/Inc/arm_math.h ****   void arm_pid_reset_q31(
1797:DSP/Inc/arm_math.h ****   arm_pid_instance_q31 * S);
1798:DSP/Inc/arm_math.h **** 
1799:DSP/Inc/arm_math.h **** 
1800:DSP/Inc/arm_math.h ****   /**
1801:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q15 PID Control.
1802:DSP/Inc/arm_math.h ****    * @param[in,out] S               points to an instance of the Q15 PID structure.
1803:DSP/Inc/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1804:DSP/Inc/arm_math.h ****    */
1805:DSP/Inc/arm_math.h ****   void arm_pid_init_q15(
1806:DSP/Inc/arm_math.h ****   arm_pid_instance_q15 * S,
1807:DSP/Inc/arm_math.h ****   int32_t resetStateFlag);
1808:DSP/Inc/arm_math.h **** 
1809:DSP/Inc/arm_math.h **** 
1810:DSP/Inc/arm_math.h ****   /**
1811:DSP/Inc/arm_math.h ****    * @brief  Reset function for the Q15 PID Control.
1812:DSP/Inc/arm_math.h ****    * @param[in,out] S  points to an instance of the q15 PID Control structure
1813:DSP/Inc/arm_math.h ****    */
1814:DSP/Inc/arm_math.h ****   void arm_pid_reset_q15(
1815:DSP/Inc/arm_math.h ****   arm_pid_instance_q15 * S);
1816:DSP/Inc/arm_math.h **** 
1817:DSP/Inc/arm_math.h **** 
1818:DSP/Inc/arm_math.h ****   /**
1819:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point Linear Interpolate function.
1820:DSP/Inc/arm_math.h ****    */
1821:DSP/Inc/arm_math.h ****   typedef struct
1822:DSP/Inc/arm_math.h ****   {
1823:DSP/Inc/arm_math.h ****     uint32_t nValues;           /**< nValues */
1824:DSP/Inc/arm_math.h ****     float32_t x1;               /**< x1 */
1825:DSP/Inc/arm_math.h ****     float32_t xSpacing;         /**< xSpacing */
1826:DSP/Inc/arm_math.h ****     float32_t *pYData;          /**< pointer to the table of Y values */
1827:DSP/Inc/arm_math.h ****   } arm_linear_interp_instance_f32;
1828:DSP/Inc/arm_math.h **** 
1829:DSP/Inc/arm_math.h ****   /**
1830:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point bilinear interpolation function.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 61


1831:DSP/Inc/arm_math.h ****    */
1832:DSP/Inc/arm_math.h ****   typedef struct
1833:DSP/Inc/arm_math.h ****   {
1834:DSP/Inc/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1835:DSP/Inc/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1836:DSP/Inc/arm_math.h ****     float32_t *pData;   /**< points to the data table. */
1837:DSP/Inc/arm_math.h ****   } arm_bilinear_interp_instance_f32;
1838:DSP/Inc/arm_math.h **** 
1839:DSP/Inc/arm_math.h ****    /**
1840:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 bilinear interpolation function.
1841:DSP/Inc/arm_math.h ****    */
1842:DSP/Inc/arm_math.h ****   typedef struct
1843:DSP/Inc/arm_math.h ****   {
1844:DSP/Inc/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1845:DSP/Inc/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1846:DSP/Inc/arm_math.h ****     q31_t *pData;       /**< points to the data table. */
1847:DSP/Inc/arm_math.h ****   } arm_bilinear_interp_instance_q31;
1848:DSP/Inc/arm_math.h **** 
1849:DSP/Inc/arm_math.h ****    /**
1850:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 bilinear interpolation function.
1851:DSP/Inc/arm_math.h ****    */
1852:DSP/Inc/arm_math.h ****   typedef struct
1853:DSP/Inc/arm_math.h ****   {
1854:DSP/Inc/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1855:DSP/Inc/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1856:DSP/Inc/arm_math.h ****     q15_t *pData;       /**< points to the data table. */
1857:DSP/Inc/arm_math.h ****   } arm_bilinear_interp_instance_q15;
1858:DSP/Inc/arm_math.h **** 
1859:DSP/Inc/arm_math.h ****    /**
1860:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 bilinear interpolation function.
1861:DSP/Inc/arm_math.h ****    */
1862:DSP/Inc/arm_math.h ****   typedef struct
1863:DSP/Inc/arm_math.h ****   {
1864:DSP/Inc/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1865:DSP/Inc/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1866:DSP/Inc/arm_math.h ****     q7_t *pData;        /**< points to the data table. */
1867:DSP/Inc/arm_math.h ****   } arm_bilinear_interp_instance_q7;
1868:DSP/Inc/arm_math.h **** 
1869:DSP/Inc/arm_math.h **** 
1870:DSP/Inc/arm_math.h ****   /**
1871:DSP/Inc/arm_math.h ****    * @brief Q7 vector multiplication.
1872:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1873:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1874:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
1875:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1876:DSP/Inc/arm_math.h ****    */
1877:DSP/Inc/arm_math.h ****   void arm_mult_q7(
1878:DSP/Inc/arm_math.h ****   q7_t * pSrcA,
1879:DSP/Inc/arm_math.h ****   q7_t * pSrcB,
1880:DSP/Inc/arm_math.h ****   q7_t * pDst,
1881:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1882:DSP/Inc/arm_math.h **** 
1883:DSP/Inc/arm_math.h **** 
1884:DSP/Inc/arm_math.h ****   /**
1885:DSP/Inc/arm_math.h ****    * @brief Q15 vector multiplication.
1886:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1887:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 62


1888:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
1889:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1890:DSP/Inc/arm_math.h ****    */
1891:DSP/Inc/arm_math.h ****   void arm_mult_q15(
1892:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
1893:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
1894:DSP/Inc/arm_math.h ****   q15_t * pDst,
1895:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1896:DSP/Inc/arm_math.h **** 
1897:DSP/Inc/arm_math.h **** 
1898:DSP/Inc/arm_math.h ****   /**
1899:DSP/Inc/arm_math.h ****    * @brief Q31 vector multiplication.
1900:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1901:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1902:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
1903:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1904:DSP/Inc/arm_math.h ****    */
1905:DSP/Inc/arm_math.h ****   void arm_mult_q31(
1906:DSP/Inc/arm_math.h ****   q31_t * pSrcA,
1907:DSP/Inc/arm_math.h ****   q31_t * pSrcB,
1908:DSP/Inc/arm_math.h ****   q31_t * pDst,
1909:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1910:DSP/Inc/arm_math.h **** 
1911:DSP/Inc/arm_math.h **** 
1912:DSP/Inc/arm_math.h ****   /**
1913:DSP/Inc/arm_math.h ****    * @brief Floating-point vector multiplication.
1914:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1915:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1916:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
1917:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1918:DSP/Inc/arm_math.h ****    */
1919:DSP/Inc/arm_math.h ****   void arm_mult_f32(
1920:DSP/Inc/arm_math.h ****   float32_t * pSrcA,
1921:DSP/Inc/arm_math.h ****   float32_t * pSrcB,
1922:DSP/Inc/arm_math.h ****   float32_t * pDst,
1923:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1924:DSP/Inc/arm_math.h **** 
1925:DSP/Inc/arm_math.h **** 
1926:DSP/Inc/arm_math.h ****   /**
1927:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 CFFT/CIFFT function.
1928:DSP/Inc/arm_math.h ****    */
1929:DSP/Inc/arm_math.h ****   typedef struct
1930:DSP/Inc/arm_math.h ****   {
1931:DSP/Inc/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
1932:DSP/Inc/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
1933:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
1934:DSP/Inc/arm_math.h ****     q15_t *pTwiddle;                 /**< points to the Sin twiddle factor table. */
1935:DSP/Inc/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
1936:DSP/Inc/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
1937:DSP/Inc/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
1938:DSP/Inc/arm_math.h ****   } arm_cfft_radix2_instance_q15;
1939:DSP/Inc/arm_math.h **** 
1940:DSP/Inc/arm_math.h **** /* Deprecated */
1941:DSP/Inc/arm_math.h ****   arm_status arm_cfft_radix2_init_q15(
1942:DSP/Inc/arm_math.h ****   arm_cfft_radix2_instance_q15 * S,
1943:DSP/Inc/arm_math.h ****   uint16_t fftLen,
1944:DSP/Inc/arm_math.h ****   uint8_t ifftFlag,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 63


1945:DSP/Inc/arm_math.h ****   uint8_t bitReverseFlag);
1946:DSP/Inc/arm_math.h **** 
1947:DSP/Inc/arm_math.h **** /* Deprecated */
1948:DSP/Inc/arm_math.h ****   void arm_cfft_radix2_q15(
1949:DSP/Inc/arm_math.h ****   const arm_cfft_radix2_instance_q15 * S,
1950:DSP/Inc/arm_math.h ****   q15_t * pSrc);
1951:DSP/Inc/arm_math.h **** 
1952:DSP/Inc/arm_math.h **** 
1953:DSP/Inc/arm_math.h ****   /**
1954:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 CFFT/CIFFT function.
1955:DSP/Inc/arm_math.h ****    */
1956:DSP/Inc/arm_math.h ****   typedef struct
1957:DSP/Inc/arm_math.h ****   {
1958:DSP/Inc/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
1959:DSP/Inc/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
1960:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
1961:DSP/Inc/arm_math.h ****     q15_t *pTwiddle;                 /**< points to the twiddle factor table. */
1962:DSP/Inc/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
1963:DSP/Inc/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
1964:DSP/Inc/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
1965:DSP/Inc/arm_math.h ****   } arm_cfft_radix4_instance_q15;
1966:DSP/Inc/arm_math.h **** 
1967:DSP/Inc/arm_math.h **** /* Deprecated */
1968:DSP/Inc/arm_math.h ****   arm_status arm_cfft_radix4_init_q15(
1969:DSP/Inc/arm_math.h ****   arm_cfft_radix4_instance_q15 * S,
1970:DSP/Inc/arm_math.h ****   uint16_t fftLen,
1971:DSP/Inc/arm_math.h ****   uint8_t ifftFlag,
1972:DSP/Inc/arm_math.h ****   uint8_t bitReverseFlag);
1973:DSP/Inc/arm_math.h **** 
1974:DSP/Inc/arm_math.h **** /* Deprecated */
1975:DSP/Inc/arm_math.h ****   void arm_cfft_radix4_q15(
1976:DSP/Inc/arm_math.h ****   const arm_cfft_radix4_instance_q15 * S,
1977:DSP/Inc/arm_math.h ****   q15_t * pSrc);
1978:DSP/Inc/arm_math.h **** 
1979:DSP/Inc/arm_math.h ****   /**
1980:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Radix-2 Q31 CFFT/CIFFT function.
1981:DSP/Inc/arm_math.h ****    */
1982:DSP/Inc/arm_math.h ****   typedef struct
1983:DSP/Inc/arm_math.h ****   {
1984:DSP/Inc/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
1985:DSP/Inc/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
1986:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
1987:DSP/Inc/arm_math.h ****     q31_t *pTwiddle;                 /**< points to the Twiddle factor table. */
1988:DSP/Inc/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
1989:DSP/Inc/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
1990:DSP/Inc/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
1991:DSP/Inc/arm_math.h ****   } arm_cfft_radix2_instance_q31;
1992:DSP/Inc/arm_math.h **** 
1993:DSP/Inc/arm_math.h **** /* Deprecated */
1994:DSP/Inc/arm_math.h ****   arm_status arm_cfft_radix2_init_q31(
1995:DSP/Inc/arm_math.h ****   arm_cfft_radix2_instance_q31 * S,
1996:DSP/Inc/arm_math.h ****   uint16_t fftLen,
1997:DSP/Inc/arm_math.h ****   uint8_t ifftFlag,
1998:DSP/Inc/arm_math.h ****   uint8_t bitReverseFlag);
1999:DSP/Inc/arm_math.h **** 
2000:DSP/Inc/arm_math.h **** /* Deprecated */
2001:DSP/Inc/arm_math.h ****   void arm_cfft_radix2_q31(
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 64


2002:DSP/Inc/arm_math.h ****   const arm_cfft_radix2_instance_q31 * S,
2003:DSP/Inc/arm_math.h ****   q31_t * pSrc);
2004:DSP/Inc/arm_math.h **** 
2005:DSP/Inc/arm_math.h ****   /**
2006:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 CFFT/CIFFT function.
2007:DSP/Inc/arm_math.h ****    */
2008:DSP/Inc/arm_math.h ****   typedef struct
2009:DSP/Inc/arm_math.h ****   {
2010:DSP/Inc/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
2011:DSP/Inc/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
2012:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
2013:DSP/Inc/arm_math.h ****     q31_t *pTwiddle;                 /**< points to the twiddle factor table. */
2014:DSP/Inc/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2015:DSP/Inc/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
2016:DSP/Inc/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
2017:DSP/Inc/arm_math.h ****   } arm_cfft_radix4_instance_q31;
2018:DSP/Inc/arm_math.h **** 
2019:DSP/Inc/arm_math.h **** /* Deprecated */
2020:DSP/Inc/arm_math.h ****   void arm_cfft_radix4_q31(
2021:DSP/Inc/arm_math.h ****   const arm_cfft_radix4_instance_q31 * S,
2022:DSP/Inc/arm_math.h ****   q31_t * pSrc);
2023:DSP/Inc/arm_math.h **** 
2024:DSP/Inc/arm_math.h **** /* Deprecated */
2025:DSP/Inc/arm_math.h ****   arm_status arm_cfft_radix4_init_q31(
2026:DSP/Inc/arm_math.h ****   arm_cfft_radix4_instance_q31 * S,
2027:DSP/Inc/arm_math.h ****   uint16_t fftLen,
2028:DSP/Inc/arm_math.h ****   uint8_t ifftFlag,
2029:DSP/Inc/arm_math.h ****   uint8_t bitReverseFlag);
2030:DSP/Inc/arm_math.h **** 
2031:DSP/Inc/arm_math.h ****   /**
2032:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2033:DSP/Inc/arm_math.h ****    */
2034:DSP/Inc/arm_math.h ****   typedef struct
2035:DSP/Inc/arm_math.h ****   {
2036:DSP/Inc/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2037:DSP/Inc/arm_math.h ****     uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse (ifft
2038:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables (bitRe
2039:DSP/Inc/arm_math.h ****     float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
2040:DSP/Inc/arm_math.h ****     uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
2041:DSP/Inc/arm_math.h ****     uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports different si
2042:DSP/Inc/arm_math.h ****     uint16_t bitRevFactor;             /**< bit reversal modifier that supports different size FFTs
2043:DSP/Inc/arm_math.h ****     float32_t onebyfftLen;             /**< value of 1/fftLen. */
2044:DSP/Inc/arm_math.h ****   } arm_cfft_radix2_instance_f32;
2045:DSP/Inc/arm_math.h **** 
2046:DSP/Inc/arm_math.h **** /* Deprecated */
2047:DSP/Inc/arm_math.h ****   arm_status arm_cfft_radix2_init_f32(
2048:DSP/Inc/arm_math.h ****   arm_cfft_radix2_instance_f32 * S,
2049:DSP/Inc/arm_math.h ****   uint16_t fftLen,
2050:DSP/Inc/arm_math.h ****   uint8_t ifftFlag,
2051:DSP/Inc/arm_math.h ****   uint8_t bitReverseFlag);
2052:DSP/Inc/arm_math.h **** 
2053:DSP/Inc/arm_math.h **** /* Deprecated */
2054:DSP/Inc/arm_math.h ****   void arm_cfft_radix2_f32(
2055:DSP/Inc/arm_math.h ****   const arm_cfft_radix2_instance_f32 * S,
2056:DSP/Inc/arm_math.h ****   float32_t * pSrc);
2057:DSP/Inc/arm_math.h **** 
2058:DSP/Inc/arm_math.h ****   /**
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 65


2059:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2060:DSP/Inc/arm_math.h ****    */
2061:DSP/Inc/arm_math.h ****   typedef struct
2062:DSP/Inc/arm_math.h ****   {
2063:DSP/Inc/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2064:DSP/Inc/arm_math.h ****     uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse (ifft
2065:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables (bitRe
2066:DSP/Inc/arm_math.h ****     float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
2067:DSP/Inc/arm_math.h ****     uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
2068:DSP/Inc/arm_math.h ****     uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports different si
2069:DSP/Inc/arm_math.h ****     uint16_t bitRevFactor;             /**< bit reversal modifier that supports different size FFTs
2070:DSP/Inc/arm_math.h ****     float32_t onebyfftLen;             /**< value of 1/fftLen. */
2071:DSP/Inc/arm_math.h ****   } arm_cfft_radix4_instance_f32;
2072:DSP/Inc/arm_math.h **** 
2073:DSP/Inc/arm_math.h **** /* Deprecated */
2074:DSP/Inc/arm_math.h ****   arm_status arm_cfft_radix4_init_f32(
2075:DSP/Inc/arm_math.h ****   arm_cfft_radix4_instance_f32 * S,
2076:DSP/Inc/arm_math.h ****   uint16_t fftLen,
2077:DSP/Inc/arm_math.h ****   uint8_t ifftFlag,
2078:DSP/Inc/arm_math.h ****   uint8_t bitReverseFlag);
2079:DSP/Inc/arm_math.h **** 
2080:DSP/Inc/arm_math.h **** /* Deprecated */
2081:DSP/Inc/arm_math.h ****   void arm_cfft_radix4_f32(
2082:DSP/Inc/arm_math.h ****   const arm_cfft_radix4_instance_f32 * S,
2083:DSP/Inc/arm_math.h ****   float32_t * pSrc);
2084:DSP/Inc/arm_math.h **** 
2085:DSP/Inc/arm_math.h ****   /**
2086:DSP/Inc/arm_math.h ****    * @brief Instance structure for the fixed-point CFFT/CIFFT function.
2087:DSP/Inc/arm_math.h ****    */
2088:DSP/Inc/arm_math.h ****   typedef struct
2089:DSP/Inc/arm_math.h ****   {
2090:DSP/Inc/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2091:DSP/Inc/arm_math.h ****     const q15_t *pTwiddle;             /**< points to the Twiddle factor table. */
2092:DSP/Inc/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2093:DSP/Inc/arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2094:DSP/Inc/arm_math.h ****   } arm_cfft_instance_q15;
2095:DSP/Inc/arm_math.h **** 
2096:DSP/Inc/arm_math.h **** void arm_cfft_q15(
2097:DSP/Inc/arm_math.h ****     const arm_cfft_instance_q15 * S,
2098:DSP/Inc/arm_math.h ****     q15_t * p1,
2099:DSP/Inc/arm_math.h ****     uint8_t ifftFlag,
2100:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlag);
2101:DSP/Inc/arm_math.h **** 
2102:DSP/Inc/arm_math.h ****   /**
2103:DSP/Inc/arm_math.h ****    * @brief Instance structure for the fixed-point CFFT/CIFFT function.
2104:DSP/Inc/arm_math.h ****    */
2105:DSP/Inc/arm_math.h ****   typedef struct
2106:DSP/Inc/arm_math.h ****   {
2107:DSP/Inc/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2108:DSP/Inc/arm_math.h ****     const q31_t *pTwiddle;             /**< points to the Twiddle factor table. */
2109:DSP/Inc/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2110:DSP/Inc/arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2111:DSP/Inc/arm_math.h ****   } arm_cfft_instance_q31;
2112:DSP/Inc/arm_math.h **** 
2113:DSP/Inc/arm_math.h **** void arm_cfft_q31(
2114:DSP/Inc/arm_math.h ****     const arm_cfft_instance_q31 * S,
2115:DSP/Inc/arm_math.h ****     q31_t * p1,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 66


2116:DSP/Inc/arm_math.h ****     uint8_t ifftFlag,
2117:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlag);
2118:DSP/Inc/arm_math.h **** 
2119:DSP/Inc/arm_math.h ****   /**
2120:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2121:DSP/Inc/arm_math.h ****    */
2122:DSP/Inc/arm_math.h ****   typedef struct
2123:DSP/Inc/arm_math.h ****   {
2124:DSP/Inc/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2125:DSP/Inc/arm_math.h ****     const float32_t *pTwiddle;         /**< points to the Twiddle factor table. */
2126:DSP/Inc/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2127:DSP/Inc/arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2128:DSP/Inc/arm_math.h ****   } arm_cfft_instance_f32;
2129:DSP/Inc/arm_math.h **** 
2130:DSP/Inc/arm_math.h ****   void arm_cfft_f32(
2131:DSP/Inc/arm_math.h ****   const arm_cfft_instance_f32 * S,
2132:DSP/Inc/arm_math.h ****   float32_t * p1,
2133:DSP/Inc/arm_math.h ****   uint8_t ifftFlag,
2134:DSP/Inc/arm_math.h ****   uint8_t bitReverseFlag);
2135:DSP/Inc/arm_math.h **** 
2136:DSP/Inc/arm_math.h ****   /**
2137:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 RFFT/RIFFT function.
2138:DSP/Inc/arm_math.h ****    */
2139:DSP/Inc/arm_math.h ****   typedef struct
2140:DSP/Inc/arm_math.h ****   {
2141:DSP/Inc/arm_math.h ****     uint32_t fftLenReal;                      /**< length of the real FFT. */
2142:DSP/Inc/arm_math.h ****     uint8_t ifftFlagR;                        /**< flag that selects forward (ifftFlagR=0) or inver
2143:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlagR;                  /**< flag that enables (bitReverseFlagR=1) or disable
2144:DSP/Inc/arm_math.h ****     uint32_t twidCoefRModifier;               /**< twiddle coefficient modifier that supports diffe
2145:DSP/Inc/arm_math.h ****     q15_t *pTwiddleAReal;                     /**< points to the real twiddle factor table. */
2146:DSP/Inc/arm_math.h ****     q15_t *pTwiddleBReal;                     /**< points to the imag twiddle factor table. */
2147:DSP/Inc/arm_math.h ****     const arm_cfft_instance_q15 *pCfft;       /**< points to the complex FFT instance. */
2148:DSP/Inc/arm_math.h ****   } arm_rfft_instance_q15;
2149:DSP/Inc/arm_math.h **** 
2150:DSP/Inc/arm_math.h ****   arm_status arm_rfft_init_q15(
2151:DSP/Inc/arm_math.h ****   arm_rfft_instance_q15 * S,
2152:DSP/Inc/arm_math.h ****   uint32_t fftLenReal,
2153:DSP/Inc/arm_math.h ****   uint32_t ifftFlagR,
2154:DSP/Inc/arm_math.h ****   uint32_t bitReverseFlag);
2155:DSP/Inc/arm_math.h **** 
2156:DSP/Inc/arm_math.h ****   void arm_rfft_q15(
2157:DSP/Inc/arm_math.h ****   const arm_rfft_instance_q15 * S,
2158:DSP/Inc/arm_math.h ****   q15_t * pSrc,
2159:DSP/Inc/arm_math.h ****   q15_t * pDst);
2160:DSP/Inc/arm_math.h **** 
2161:DSP/Inc/arm_math.h ****   /**
2162:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 RFFT/RIFFT function.
2163:DSP/Inc/arm_math.h ****    */
2164:DSP/Inc/arm_math.h ****   typedef struct
2165:DSP/Inc/arm_math.h ****   {
2166:DSP/Inc/arm_math.h ****     uint32_t fftLenReal;                        /**< length of the real FFT. */
2167:DSP/Inc/arm_math.h ****     uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) or inv
2168:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or disab
2169:DSP/Inc/arm_math.h ****     uint32_t twidCoefRModifier;                 /**< twiddle coefficient modifier that supports dif
2170:DSP/Inc/arm_math.h ****     q31_t *pTwiddleAReal;                       /**< points to the real twiddle factor table. */
2171:DSP/Inc/arm_math.h ****     q31_t *pTwiddleBReal;                       /**< points to the imag twiddle factor table. */
2172:DSP/Inc/arm_math.h ****     const arm_cfft_instance_q31 *pCfft;         /**< points to the complex FFT instance. */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 67


2173:DSP/Inc/arm_math.h ****   } arm_rfft_instance_q31;
2174:DSP/Inc/arm_math.h **** 
2175:DSP/Inc/arm_math.h ****   arm_status arm_rfft_init_q31(
2176:DSP/Inc/arm_math.h ****   arm_rfft_instance_q31 * S,
2177:DSP/Inc/arm_math.h ****   uint32_t fftLenReal,
2178:DSP/Inc/arm_math.h ****   uint32_t ifftFlagR,
2179:DSP/Inc/arm_math.h ****   uint32_t bitReverseFlag);
2180:DSP/Inc/arm_math.h **** 
2181:DSP/Inc/arm_math.h ****   void arm_rfft_q31(
2182:DSP/Inc/arm_math.h ****   const arm_rfft_instance_q31 * S,
2183:DSP/Inc/arm_math.h ****   q31_t * pSrc,
2184:DSP/Inc/arm_math.h ****   q31_t * pDst);
2185:DSP/Inc/arm_math.h **** 
2186:DSP/Inc/arm_math.h ****   /**
2187:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point RFFT/RIFFT function.
2188:DSP/Inc/arm_math.h ****    */
2189:DSP/Inc/arm_math.h ****   typedef struct
2190:DSP/Inc/arm_math.h ****   {
2191:DSP/Inc/arm_math.h ****     uint32_t fftLenReal;                        /**< length of the real FFT. */
2192:DSP/Inc/arm_math.h ****     uint16_t fftLenBy2;                         /**< length of the complex FFT. */
2193:DSP/Inc/arm_math.h ****     uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) or inv
2194:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or disab
2195:DSP/Inc/arm_math.h ****     uint32_t twidCoefRModifier;                     /**< twiddle coefficient modifier that supports
2196:DSP/Inc/arm_math.h ****     float32_t *pTwiddleAReal;                   /**< points to the real twiddle factor table. */
2197:DSP/Inc/arm_math.h ****     float32_t *pTwiddleBReal;                   /**< points to the imag twiddle factor table. */
2198:DSP/Inc/arm_math.h ****     arm_cfft_radix4_instance_f32 *pCfft;        /**< points to the complex FFT instance. */
2199:DSP/Inc/arm_math.h ****   } arm_rfft_instance_f32;
2200:DSP/Inc/arm_math.h **** 
2201:DSP/Inc/arm_math.h ****   arm_status arm_rfft_init_f32(
2202:DSP/Inc/arm_math.h ****   arm_rfft_instance_f32 * S,
2203:DSP/Inc/arm_math.h ****   arm_cfft_radix4_instance_f32 * S_CFFT,
2204:DSP/Inc/arm_math.h ****   uint32_t fftLenReal,
2205:DSP/Inc/arm_math.h ****   uint32_t ifftFlagR,
2206:DSP/Inc/arm_math.h ****   uint32_t bitReverseFlag);
2207:DSP/Inc/arm_math.h **** 
2208:DSP/Inc/arm_math.h ****   void arm_rfft_f32(
2209:DSP/Inc/arm_math.h ****   const arm_rfft_instance_f32 * S,
2210:DSP/Inc/arm_math.h ****   float32_t * pSrc,
2211:DSP/Inc/arm_math.h ****   float32_t * pDst);
2212:DSP/Inc/arm_math.h **** 
2213:DSP/Inc/arm_math.h ****   /**
2214:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point RFFT/RIFFT function.
2215:DSP/Inc/arm_math.h ****    */
2216:DSP/Inc/arm_math.h **** typedef struct
2217:DSP/Inc/arm_math.h ****   {
2218:DSP/Inc/arm_math.h ****     arm_cfft_instance_f32 Sint;      /**< Internal CFFT structure. */
2219:DSP/Inc/arm_math.h ****     uint16_t fftLenRFFT;             /**< length of the real sequence */
2220:DSP/Inc/arm_math.h ****     float32_t * pTwiddleRFFT;        /**< Twiddle factors real stage  */
2221:DSP/Inc/arm_math.h ****   } arm_rfft_fast_instance_f32 ;
2222:DSP/Inc/arm_math.h **** 
2223:DSP/Inc/arm_math.h **** arm_status arm_rfft_fast_init_f32 (
2224:DSP/Inc/arm_math.h ****    arm_rfft_fast_instance_f32 * S,
2225:DSP/Inc/arm_math.h ****    uint16_t fftLen);
2226:DSP/Inc/arm_math.h **** 
2227:DSP/Inc/arm_math.h **** void arm_rfft_fast_f32(
2228:DSP/Inc/arm_math.h ****   arm_rfft_fast_instance_f32 * S,
2229:DSP/Inc/arm_math.h ****   float32_t * p, float32_t * pOut,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 68


2230:DSP/Inc/arm_math.h ****   uint8_t ifftFlag);
2231:DSP/Inc/arm_math.h **** 
2232:DSP/Inc/arm_math.h ****   /**
2233:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point DCT4/IDCT4 function.
2234:DSP/Inc/arm_math.h ****    */
2235:DSP/Inc/arm_math.h ****   typedef struct
2236:DSP/Inc/arm_math.h ****   {
2237:DSP/Inc/arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2238:DSP/Inc/arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2239:DSP/Inc/arm_math.h ****     float32_t normalize;                 /**< normalizing factor. */
2240:DSP/Inc/arm_math.h ****     float32_t *pTwiddle;                 /**< points to the twiddle factor table. */
2241:DSP/Inc/arm_math.h ****     float32_t *pCosFactor;               /**< points to the cosFactor table. */
2242:DSP/Inc/arm_math.h ****     arm_rfft_instance_f32 *pRfft;        /**< points to the real FFT instance. */
2243:DSP/Inc/arm_math.h ****     arm_cfft_radix4_instance_f32 *pCfft; /**< points to the complex FFT instance. */
2244:DSP/Inc/arm_math.h ****   } arm_dct4_instance_f32;
2245:DSP/Inc/arm_math.h **** 
2246:DSP/Inc/arm_math.h **** 
2247:DSP/Inc/arm_math.h ****   /**
2248:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the floating-point DCT4/IDCT4.
2249:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of floating-point DCT4/IDCT4 structure.
2250:DSP/Inc/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of floating-point RFFT/RIFFT structure.
2251:DSP/Inc/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of floating-point CFFT/CIFFT structure.
2252:DSP/Inc/arm_math.h ****    * @param[in]     N          length of the DCT4.
2253:DSP/Inc/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2254:DSP/Inc/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2255:DSP/Inc/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2256:DSP/Inc/arm_math.h ****    */
2257:DSP/Inc/arm_math.h ****   arm_status arm_dct4_init_f32(
2258:DSP/Inc/arm_math.h ****   arm_dct4_instance_f32 * S,
2259:DSP/Inc/arm_math.h ****   arm_rfft_instance_f32 * S_RFFT,
2260:DSP/Inc/arm_math.h ****   arm_cfft_radix4_instance_f32 * S_CFFT,
2261:DSP/Inc/arm_math.h ****   uint16_t N,
2262:DSP/Inc/arm_math.h ****   uint16_t Nby2,
2263:DSP/Inc/arm_math.h ****   float32_t normalize);
2264:DSP/Inc/arm_math.h **** 
2265:DSP/Inc/arm_math.h **** 
2266:DSP/Inc/arm_math.h ****   /**
2267:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point DCT4/IDCT4.
2268:DSP/Inc/arm_math.h ****    * @param[in]     S              points to an instance of the floating-point DCT4/IDCT4 structure
2269:DSP/Inc/arm_math.h ****    * @param[in]     pState         points to state buffer.
2270:DSP/Inc/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2271:DSP/Inc/arm_math.h ****    */
2272:DSP/Inc/arm_math.h ****   void arm_dct4_f32(
2273:DSP/Inc/arm_math.h ****   const arm_dct4_instance_f32 * S,
2274:DSP/Inc/arm_math.h ****   float32_t * pState,
2275:DSP/Inc/arm_math.h ****   float32_t * pInlineBuffer);
2276:DSP/Inc/arm_math.h **** 
2277:DSP/Inc/arm_math.h **** 
2278:DSP/Inc/arm_math.h ****   /**
2279:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 DCT4/IDCT4 function.
2280:DSP/Inc/arm_math.h ****    */
2281:DSP/Inc/arm_math.h ****   typedef struct
2282:DSP/Inc/arm_math.h ****   {
2283:DSP/Inc/arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2284:DSP/Inc/arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2285:DSP/Inc/arm_math.h ****     q31_t normalize;                     /**< normalizing factor. */
2286:DSP/Inc/arm_math.h ****     q31_t *pTwiddle;                     /**< points to the twiddle factor table. */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 69


2287:DSP/Inc/arm_math.h ****     q31_t *pCosFactor;                   /**< points to the cosFactor table. */
2288:DSP/Inc/arm_math.h ****     arm_rfft_instance_q31 *pRfft;        /**< points to the real FFT instance. */
2289:DSP/Inc/arm_math.h ****     arm_cfft_radix4_instance_q31 *pCfft; /**< points to the complex FFT instance. */
2290:DSP/Inc/arm_math.h ****   } arm_dct4_instance_q31;
2291:DSP/Inc/arm_math.h **** 
2292:DSP/Inc/arm_math.h **** 
2293:DSP/Inc/arm_math.h ****   /**
2294:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q31 DCT4/IDCT4.
2295:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of Q31 DCT4/IDCT4 structure.
2296:DSP/Inc/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of Q31 RFFT/RIFFT structure
2297:DSP/Inc/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of Q31 CFFT/CIFFT structure
2298:DSP/Inc/arm_math.h ****    * @param[in]     N          length of the DCT4.
2299:DSP/Inc/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2300:DSP/Inc/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2301:DSP/Inc/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2302:DSP/Inc/arm_math.h ****    */
2303:DSP/Inc/arm_math.h ****   arm_status arm_dct4_init_q31(
2304:DSP/Inc/arm_math.h ****   arm_dct4_instance_q31 * S,
2305:DSP/Inc/arm_math.h ****   arm_rfft_instance_q31 * S_RFFT,
2306:DSP/Inc/arm_math.h ****   arm_cfft_radix4_instance_q31 * S_CFFT,
2307:DSP/Inc/arm_math.h ****   uint16_t N,
2308:DSP/Inc/arm_math.h ****   uint16_t Nby2,
2309:DSP/Inc/arm_math.h ****   q31_t normalize);
2310:DSP/Inc/arm_math.h **** 
2311:DSP/Inc/arm_math.h **** 
2312:DSP/Inc/arm_math.h ****   /**
2313:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q31 DCT4/IDCT4.
2314:DSP/Inc/arm_math.h ****    * @param[in]     S              points to an instance of the Q31 DCT4 structure.
2315:DSP/Inc/arm_math.h ****    * @param[in]     pState         points to state buffer.
2316:DSP/Inc/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2317:DSP/Inc/arm_math.h ****    */
2318:DSP/Inc/arm_math.h ****   void arm_dct4_q31(
2319:DSP/Inc/arm_math.h ****   const arm_dct4_instance_q31 * S,
2320:DSP/Inc/arm_math.h ****   q31_t * pState,
2321:DSP/Inc/arm_math.h ****   q31_t * pInlineBuffer);
2322:DSP/Inc/arm_math.h **** 
2323:DSP/Inc/arm_math.h **** 
2324:DSP/Inc/arm_math.h ****   /**
2325:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 DCT4/IDCT4 function.
2326:DSP/Inc/arm_math.h ****    */
2327:DSP/Inc/arm_math.h ****   typedef struct
2328:DSP/Inc/arm_math.h ****   {
2329:DSP/Inc/arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2330:DSP/Inc/arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2331:DSP/Inc/arm_math.h ****     q15_t normalize;                     /**< normalizing factor. */
2332:DSP/Inc/arm_math.h ****     q15_t *pTwiddle;                     /**< points to the twiddle factor table. */
2333:DSP/Inc/arm_math.h ****     q15_t *pCosFactor;                   /**< points to the cosFactor table. */
2334:DSP/Inc/arm_math.h ****     arm_rfft_instance_q15 *pRfft;        /**< points to the real FFT instance. */
2335:DSP/Inc/arm_math.h ****     arm_cfft_radix4_instance_q15 *pCfft; /**< points to the complex FFT instance. */
2336:DSP/Inc/arm_math.h ****   } arm_dct4_instance_q15;
2337:DSP/Inc/arm_math.h **** 
2338:DSP/Inc/arm_math.h **** 
2339:DSP/Inc/arm_math.h ****   /**
2340:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q15 DCT4/IDCT4.
2341:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of Q15 DCT4/IDCT4 structure.
2342:DSP/Inc/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of Q15 RFFT/RIFFT structure.
2343:DSP/Inc/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of Q15 CFFT/CIFFT structure.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 70


2344:DSP/Inc/arm_math.h ****    * @param[in]     N          length of the DCT4.
2345:DSP/Inc/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2346:DSP/Inc/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2347:DSP/Inc/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2348:DSP/Inc/arm_math.h ****    */
2349:DSP/Inc/arm_math.h ****   arm_status arm_dct4_init_q15(
2350:DSP/Inc/arm_math.h ****   arm_dct4_instance_q15 * S,
2351:DSP/Inc/arm_math.h ****   arm_rfft_instance_q15 * S_RFFT,
2352:DSP/Inc/arm_math.h ****   arm_cfft_radix4_instance_q15 * S_CFFT,
2353:DSP/Inc/arm_math.h ****   uint16_t N,
2354:DSP/Inc/arm_math.h ****   uint16_t Nby2,
2355:DSP/Inc/arm_math.h ****   q15_t normalize);
2356:DSP/Inc/arm_math.h **** 
2357:DSP/Inc/arm_math.h **** 
2358:DSP/Inc/arm_math.h ****   /**
2359:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q15 DCT4/IDCT4.
2360:DSP/Inc/arm_math.h ****    * @param[in]     S              points to an instance of the Q15 DCT4 structure.
2361:DSP/Inc/arm_math.h ****    * @param[in]     pState         points to state buffer.
2362:DSP/Inc/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2363:DSP/Inc/arm_math.h ****    */
2364:DSP/Inc/arm_math.h ****   void arm_dct4_q15(
2365:DSP/Inc/arm_math.h ****   const arm_dct4_instance_q15 * S,
2366:DSP/Inc/arm_math.h ****   q15_t * pState,
2367:DSP/Inc/arm_math.h ****   q15_t * pInlineBuffer);
2368:DSP/Inc/arm_math.h **** 
2369:DSP/Inc/arm_math.h **** 
2370:DSP/Inc/arm_math.h ****   /**
2371:DSP/Inc/arm_math.h ****    * @brief Floating-point vector addition.
2372:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2373:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2374:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2375:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2376:DSP/Inc/arm_math.h ****    */
2377:DSP/Inc/arm_math.h ****   void arm_add_f32(
2378:DSP/Inc/arm_math.h ****   float32_t * pSrcA,
2379:DSP/Inc/arm_math.h ****   float32_t * pSrcB,
2380:DSP/Inc/arm_math.h ****   float32_t * pDst,
2381:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2382:DSP/Inc/arm_math.h **** 
2383:DSP/Inc/arm_math.h **** 
2384:DSP/Inc/arm_math.h ****   /**
2385:DSP/Inc/arm_math.h ****    * @brief Q7 vector addition.
2386:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2387:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2388:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2389:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2390:DSP/Inc/arm_math.h ****    */
2391:DSP/Inc/arm_math.h ****   void arm_add_q7(
2392:DSP/Inc/arm_math.h ****   q7_t * pSrcA,
2393:DSP/Inc/arm_math.h ****   q7_t * pSrcB,
2394:DSP/Inc/arm_math.h ****   q7_t * pDst,
2395:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2396:DSP/Inc/arm_math.h **** 
2397:DSP/Inc/arm_math.h **** 
2398:DSP/Inc/arm_math.h ****   /**
2399:DSP/Inc/arm_math.h ****    * @brief Q15 vector addition.
2400:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 71


2401:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2402:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2403:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2404:DSP/Inc/arm_math.h ****    */
2405:DSP/Inc/arm_math.h ****   void arm_add_q15(
2406:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
2407:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
2408:DSP/Inc/arm_math.h ****   q15_t * pDst,
2409:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2410:DSP/Inc/arm_math.h **** 
2411:DSP/Inc/arm_math.h **** 
2412:DSP/Inc/arm_math.h ****   /**
2413:DSP/Inc/arm_math.h ****    * @brief Q31 vector addition.
2414:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2415:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2416:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2417:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2418:DSP/Inc/arm_math.h ****    */
2419:DSP/Inc/arm_math.h ****   void arm_add_q31(
2420:DSP/Inc/arm_math.h ****   q31_t * pSrcA,
2421:DSP/Inc/arm_math.h ****   q31_t * pSrcB,
2422:DSP/Inc/arm_math.h ****   q31_t * pDst,
2423:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2424:DSP/Inc/arm_math.h **** 
2425:DSP/Inc/arm_math.h **** 
2426:DSP/Inc/arm_math.h ****   /**
2427:DSP/Inc/arm_math.h ****    * @brief Floating-point vector subtraction.
2428:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2429:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2430:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2431:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2432:DSP/Inc/arm_math.h ****    */
2433:DSP/Inc/arm_math.h ****   void arm_sub_f32(
2434:DSP/Inc/arm_math.h ****   float32_t * pSrcA,
2435:DSP/Inc/arm_math.h ****   float32_t * pSrcB,
2436:DSP/Inc/arm_math.h ****   float32_t * pDst,
2437:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2438:DSP/Inc/arm_math.h **** 
2439:DSP/Inc/arm_math.h **** 
2440:DSP/Inc/arm_math.h ****   /**
2441:DSP/Inc/arm_math.h ****    * @brief Q7 vector subtraction.
2442:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2443:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2444:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2445:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2446:DSP/Inc/arm_math.h ****    */
2447:DSP/Inc/arm_math.h ****   void arm_sub_q7(
2448:DSP/Inc/arm_math.h ****   q7_t * pSrcA,
2449:DSP/Inc/arm_math.h ****   q7_t * pSrcB,
2450:DSP/Inc/arm_math.h ****   q7_t * pDst,
2451:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2452:DSP/Inc/arm_math.h **** 
2453:DSP/Inc/arm_math.h **** 
2454:DSP/Inc/arm_math.h ****   /**
2455:DSP/Inc/arm_math.h ****    * @brief Q15 vector subtraction.
2456:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2457:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 72


2458:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2459:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2460:DSP/Inc/arm_math.h ****    */
2461:DSP/Inc/arm_math.h ****   void arm_sub_q15(
2462:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
2463:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
2464:DSP/Inc/arm_math.h ****   q15_t * pDst,
2465:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2466:DSP/Inc/arm_math.h **** 
2467:DSP/Inc/arm_math.h **** 
2468:DSP/Inc/arm_math.h ****   /**
2469:DSP/Inc/arm_math.h ****    * @brief Q31 vector subtraction.
2470:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2471:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2472:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2473:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2474:DSP/Inc/arm_math.h ****    */
2475:DSP/Inc/arm_math.h ****   void arm_sub_q31(
2476:DSP/Inc/arm_math.h ****   q31_t * pSrcA,
2477:DSP/Inc/arm_math.h ****   q31_t * pSrcB,
2478:DSP/Inc/arm_math.h ****   q31_t * pDst,
2479:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2480:DSP/Inc/arm_math.h **** 
2481:DSP/Inc/arm_math.h **** 
2482:DSP/Inc/arm_math.h ****   /**
2483:DSP/Inc/arm_math.h ****    * @brief Multiplies a floating-point vector by a scalar.
2484:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2485:DSP/Inc/arm_math.h ****    * @param[in]  scale      scale factor to be applied
2486:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2487:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2488:DSP/Inc/arm_math.h ****    */
2489:DSP/Inc/arm_math.h ****   void arm_scale_f32(
2490:DSP/Inc/arm_math.h ****   float32_t * pSrc,
2491:DSP/Inc/arm_math.h ****   float32_t scale,
2492:DSP/Inc/arm_math.h ****   float32_t * pDst,
2493:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2494:DSP/Inc/arm_math.h **** 
2495:DSP/Inc/arm_math.h **** 
2496:DSP/Inc/arm_math.h ****   /**
2497:DSP/Inc/arm_math.h ****    * @brief Multiplies a Q7 vector by a scalar.
2498:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2499:DSP/Inc/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2500:DSP/Inc/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2501:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the output vector
2502:DSP/Inc/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2503:DSP/Inc/arm_math.h ****    */
2504:DSP/Inc/arm_math.h ****   void arm_scale_q7(
2505:DSP/Inc/arm_math.h ****   q7_t * pSrc,
2506:DSP/Inc/arm_math.h ****   q7_t scaleFract,
2507:DSP/Inc/arm_math.h ****   int8_t shift,
2508:DSP/Inc/arm_math.h ****   q7_t * pDst,
2509:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2510:DSP/Inc/arm_math.h **** 
2511:DSP/Inc/arm_math.h **** 
2512:DSP/Inc/arm_math.h ****   /**
2513:DSP/Inc/arm_math.h ****    * @brief Multiplies a Q15 vector by a scalar.
2514:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the input vector
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 73


2515:DSP/Inc/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2516:DSP/Inc/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2517:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the output vector
2518:DSP/Inc/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2519:DSP/Inc/arm_math.h ****    */
2520:DSP/Inc/arm_math.h ****   void arm_scale_q15(
2521:DSP/Inc/arm_math.h ****   q15_t * pSrc,
2522:DSP/Inc/arm_math.h ****   q15_t scaleFract,
2523:DSP/Inc/arm_math.h ****   int8_t shift,
2524:DSP/Inc/arm_math.h ****   q15_t * pDst,
2525:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2526:DSP/Inc/arm_math.h **** 
2527:DSP/Inc/arm_math.h **** 
2528:DSP/Inc/arm_math.h ****   /**
2529:DSP/Inc/arm_math.h ****    * @brief Multiplies a Q31 vector by a scalar.
2530:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2531:DSP/Inc/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2532:DSP/Inc/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2533:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the output vector
2534:DSP/Inc/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2535:DSP/Inc/arm_math.h ****    */
2536:DSP/Inc/arm_math.h ****   void arm_scale_q31(
2537:DSP/Inc/arm_math.h ****   q31_t * pSrc,
2538:DSP/Inc/arm_math.h ****   q31_t scaleFract,
2539:DSP/Inc/arm_math.h ****   int8_t shift,
2540:DSP/Inc/arm_math.h ****   q31_t * pDst,
2541:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2542:DSP/Inc/arm_math.h **** 
2543:DSP/Inc/arm_math.h **** 
2544:DSP/Inc/arm_math.h ****   /**
2545:DSP/Inc/arm_math.h ****    * @brief Q7 vector absolute value.
2546:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2547:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output buffer
2548:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2549:DSP/Inc/arm_math.h ****    */
2550:DSP/Inc/arm_math.h ****   void arm_abs_q7(
2551:DSP/Inc/arm_math.h ****   q7_t * pSrc,
2552:DSP/Inc/arm_math.h ****   q7_t * pDst,
2553:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2554:DSP/Inc/arm_math.h **** 
2555:DSP/Inc/arm_math.h **** 
2556:DSP/Inc/arm_math.h ****   /**
2557:DSP/Inc/arm_math.h ****    * @brief Floating-point vector absolute value.
2558:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2559:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output buffer
2560:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2561:DSP/Inc/arm_math.h ****    */
2562:DSP/Inc/arm_math.h ****   void arm_abs_f32(
2563:DSP/Inc/arm_math.h ****   float32_t * pSrc,
2564:DSP/Inc/arm_math.h ****   float32_t * pDst,
2565:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2566:DSP/Inc/arm_math.h **** 
2567:DSP/Inc/arm_math.h **** 
2568:DSP/Inc/arm_math.h ****   /**
2569:DSP/Inc/arm_math.h ****    * @brief Q15 vector absolute value.
2570:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2571:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output buffer
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 74


2572:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2573:DSP/Inc/arm_math.h ****    */
2574:DSP/Inc/arm_math.h ****   void arm_abs_q15(
2575:DSP/Inc/arm_math.h ****   q15_t * pSrc,
2576:DSP/Inc/arm_math.h ****   q15_t * pDst,
2577:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2578:DSP/Inc/arm_math.h **** 
2579:DSP/Inc/arm_math.h **** 
2580:DSP/Inc/arm_math.h ****   /**
2581:DSP/Inc/arm_math.h ****    * @brief Q31 vector absolute value.
2582:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2583:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output buffer
2584:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2585:DSP/Inc/arm_math.h ****    */
2586:DSP/Inc/arm_math.h ****   void arm_abs_q31(
2587:DSP/Inc/arm_math.h ****   q31_t * pSrc,
2588:DSP/Inc/arm_math.h ****   q31_t * pDst,
2589:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2590:DSP/Inc/arm_math.h **** 
2591:DSP/Inc/arm_math.h **** 
2592:DSP/Inc/arm_math.h ****   /**
2593:DSP/Inc/arm_math.h ****    * @brief Dot product of floating-point vectors.
2594:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2595:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2596:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2597:DSP/Inc/arm_math.h ****    * @param[out] result     output result returned here
2598:DSP/Inc/arm_math.h ****    */
2599:DSP/Inc/arm_math.h ****   void arm_dot_prod_f32(
2600:DSP/Inc/arm_math.h ****   float32_t * pSrcA,
2601:DSP/Inc/arm_math.h ****   float32_t * pSrcB,
2602:DSP/Inc/arm_math.h ****   uint32_t blockSize,
2603:DSP/Inc/arm_math.h ****   float32_t * result);
2604:DSP/Inc/arm_math.h **** 
2605:DSP/Inc/arm_math.h **** 
2606:DSP/Inc/arm_math.h ****   /**
2607:DSP/Inc/arm_math.h ****    * @brief Dot product of Q7 vectors.
2608:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2609:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2610:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2611:DSP/Inc/arm_math.h ****    * @param[out] result     output result returned here
2612:DSP/Inc/arm_math.h ****    */
2613:DSP/Inc/arm_math.h ****   void arm_dot_prod_q7(
2614:DSP/Inc/arm_math.h ****   q7_t * pSrcA,
2615:DSP/Inc/arm_math.h ****   q7_t * pSrcB,
2616:DSP/Inc/arm_math.h ****   uint32_t blockSize,
2617:DSP/Inc/arm_math.h ****   q31_t * result);
2618:DSP/Inc/arm_math.h **** 
2619:DSP/Inc/arm_math.h **** 
2620:DSP/Inc/arm_math.h ****   /**
2621:DSP/Inc/arm_math.h ****    * @brief Dot product of Q15 vectors.
2622:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2623:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2624:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2625:DSP/Inc/arm_math.h ****    * @param[out] result     output result returned here
2626:DSP/Inc/arm_math.h ****    */
2627:DSP/Inc/arm_math.h ****   void arm_dot_prod_q15(
2628:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 75


2629:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
2630:DSP/Inc/arm_math.h ****   uint32_t blockSize,
2631:DSP/Inc/arm_math.h ****   q63_t * result);
2632:DSP/Inc/arm_math.h **** 
2633:DSP/Inc/arm_math.h **** 
2634:DSP/Inc/arm_math.h ****   /**
2635:DSP/Inc/arm_math.h ****    * @brief Dot product of Q31 vectors.
2636:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2637:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2638:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2639:DSP/Inc/arm_math.h ****    * @param[out] result     output result returned here
2640:DSP/Inc/arm_math.h ****    */
2641:DSP/Inc/arm_math.h ****   void arm_dot_prod_q31(
2642:DSP/Inc/arm_math.h ****   q31_t * pSrcA,
2643:DSP/Inc/arm_math.h ****   q31_t * pSrcB,
2644:DSP/Inc/arm_math.h ****   uint32_t blockSize,
2645:DSP/Inc/arm_math.h ****   q63_t * result);
2646:DSP/Inc/arm_math.h **** 
2647:DSP/Inc/arm_math.h **** 
2648:DSP/Inc/arm_math.h ****   /**
2649:DSP/Inc/arm_math.h ****    * @brief  Shifts the elements of a Q7 vector a specified number of bits.
2650:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2651:DSP/Inc/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2652:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2653:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2654:DSP/Inc/arm_math.h ****    */
2655:DSP/Inc/arm_math.h ****   void arm_shift_q7(
2656:DSP/Inc/arm_math.h ****   q7_t * pSrc,
2657:DSP/Inc/arm_math.h ****   int8_t shiftBits,
2658:DSP/Inc/arm_math.h ****   q7_t * pDst,
2659:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2660:DSP/Inc/arm_math.h **** 
2661:DSP/Inc/arm_math.h **** 
2662:DSP/Inc/arm_math.h ****   /**
2663:DSP/Inc/arm_math.h ****    * @brief  Shifts the elements of a Q15 vector a specified number of bits.
2664:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2665:DSP/Inc/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2666:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2667:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2668:DSP/Inc/arm_math.h ****    */
2669:DSP/Inc/arm_math.h ****   void arm_shift_q15(
2670:DSP/Inc/arm_math.h ****   q15_t * pSrc,
2671:DSP/Inc/arm_math.h ****   int8_t shiftBits,
2672:DSP/Inc/arm_math.h ****   q15_t * pDst,
2673:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2674:DSP/Inc/arm_math.h **** 
2675:DSP/Inc/arm_math.h **** 
2676:DSP/Inc/arm_math.h ****   /**
2677:DSP/Inc/arm_math.h ****    * @brief  Shifts the elements of a Q31 vector a specified number of bits.
2678:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2679:DSP/Inc/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2680:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2681:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2682:DSP/Inc/arm_math.h ****    */
2683:DSP/Inc/arm_math.h ****   void arm_shift_q31(
2684:DSP/Inc/arm_math.h ****   q31_t * pSrc,
2685:DSP/Inc/arm_math.h ****   int8_t shiftBits,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 76


2686:DSP/Inc/arm_math.h ****   q31_t * pDst,
2687:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2688:DSP/Inc/arm_math.h **** 
2689:DSP/Inc/arm_math.h **** 
2690:DSP/Inc/arm_math.h ****   /**
2691:DSP/Inc/arm_math.h ****    * @brief  Adds a constant offset to a floating-point vector.
2692:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2693:DSP/Inc/arm_math.h ****    * @param[in]  offset     is the offset to be added
2694:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2695:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2696:DSP/Inc/arm_math.h ****    */
2697:DSP/Inc/arm_math.h ****   void arm_offset_f32(
2698:DSP/Inc/arm_math.h ****   float32_t * pSrc,
2699:DSP/Inc/arm_math.h ****   float32_t offset,
2700:DSP/Inc/arm_math.h ****   float32_t * pDst,
2701:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2702:DSP/Inc/arm_math.h **** 
2703:DSP/Inc/arm_math.h **** 
2704:DSP/Inc/arm_math.h ****   /**
2705:DSP/Inc/arm_math.h ****    * @brief  Adds a constant offset to a Q7 vector.
2706:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2707:DSP/Inc/arm_math.h ****    * @param[in]  offset     is the offset to be added
2708:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2709:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2710:DSP/Inc/arm_math.h ****    */
2711:DSP/Inc/arm_math.h ****   void arm_offset_q7(
2712:DSP/Inc/arm_math.h ****   q7_t * pSrc,
2713:DSP/Inc/arm_math.h ****   q7_t offset,
2714:DSP/Inc/arm_math.h ****   q7_t * pDst,
2715:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2716:DSP/Inc/arm_math.h **** 
2717:DSP/Inc/arm_math.h **** 
2718:DSP/Inc/arm_math.h ****   /**
2719:DSP/Inc/arm_math.h ****    * @brief  Adds a constant offset to a Q15 vector.
2720:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2721:DSP/Inc/arm_math.h ****    * @param[in]  offset     is the offset to be added
2722:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2723:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2724:DSP/Inc/arm_math.h ****    */
2725:DSP/Inc/arm_math.h ****   void arm_offset_q15(
2726:DSP/Inc/arm_math.h ****   q15_t * pSrc,
2727:DSP/Inc/arm_math.h ****   q15_t offset,
2728:DSP/Inc/arm_math.h ****   q15_t * pDst,
2729:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2730:DSP/Inc/arm_math.h **** 
2731:DSP/Inc/arm_math.h **** 
2732:DSP/Inc/arm_math.h ****   /**
2733:DSP/Inc/arm_math.h ****    * @brief  Adds a constant offset to a Q31 vector.
2734:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2735:DSP/Inc/arm_math.h ****    * @param[in]  offset     is the offset to be added
2736:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2737:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2738:DSP/Inc/arm_math.h ****    */
2739:DSP/Inc/arm_math.h ****   void arm_offset_q31(
2740:DSP/Inc/arm_math.h ****   q31_t * pSrc,
2741:DSP/Inc/arm_math.h ****   q31_t offset,
2742:DSP/Inc/arm_math.h ****   q31_t * pDst,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 77


2743:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2744:DSP/Inc/arm_math.h **** 
2745:DSP/Inc/arm_math.h **** 
2746:DSP/Inc/arm_math.h ****   /**
2747:DSP/Inc/arm_math.h ****    * @brief  Negates the elements of a floating-point vector.
2748:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2749:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2750:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2751:DSP/Inc/arm_math.h ****    */
2752:DSP/Inc/arm_math.h ****   void arm_negate_f32(
2753:DSP/Inc/arm_math.h ****   float32_t * pSrc,
2754:DSP/Inc/arm_math.h ****   float32_t * pDst,
2755:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2756:DSP/Inc/arm_math.h **** 
2757:DSP/Inc/arm_math.h **** 
2758:DSP/Inc/arm_math.h ****   /**
2759:DSP/Inc/arm_math.h ****    * @brief  Negates the elements of a Q7 vector.
2760:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2761:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2762:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2763:DSP/Inc/arm_math.h ****    */
2764:DSP/Inc/arm_math.h ****   void arm_negate_q7(
2765:DSP/Inc/arm_math.h ****   q7_t * pSrc,
2766:DSP/Inc/arm_math.h ****   q7_t * pDst,
2767:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2768:DSP/Inc/arm_math.h **** 
2769:DSP/Inc/arm_math.h **** 
2770:DSP/Inc/arm_math.h ****   /**
2771:DSP/Inc/arm_math.h ****    * @brief  Negates the elements of a Q15 vector.
2772:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2773:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2774:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2775:DSP/Inc/arm_math.h ****    */
2776:DSP/Inc/arm_math.h ****   void arm_negate_q15(
2777:DSP/Inc/arm_math.h ****   q15_t * pSrc,
2778:DSP/Inc/arm_math.h ****   q15_t * pDst,
2779:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2780:DSP/Inc/arm_math.h **** 
2781:DSP/Inc/arm_math.h **** 
2782:DSP/Inc/arm_math.h ****   /**
2783:DSP/Inc/arm_math.h ****    * @brief  Negates the elements of a Q31 vector.
2784:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2785:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2786:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2787:DSP/Inc/arm_math.h ****    */
2788:DSP/Inc/arm_math.h ****   void arm_negate_q31(
2789:DSP/Inc/arm_math.h ****   q31_t * pSrc,
2790:DSP/Inc/arm_math.h ****   q31_t * pDst,
2791:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2792:DSP/Inc/arm_math.h **** 
2793:DSP/Inc/arm_math.h **** 
2794:DSP/Inc/arm_math.h ****   /**
2795:DSP/Inc/arm_math.h ****    * @brief  Copies the elements of a floating-point vector.
2796:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       input pointer
2797:DSP/Inc/arm_math.h ****    * @param[out] pDst       output pointer
2798:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2799:DSP/Inc/arm_math.h ****    */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 78


2800:DSP/Inc/arm_math.h ****   void arm_copy_f32(
2801:DSP/Inc/arm_math.h ****   float32_t * pSrc,
2802:DSP/Inc/arm_math.h ****   float32_t * pDst,
2803:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2804:DSP/Inc/arm_math.h **** 
2805:DSP/Inc/arm_math.h **** 
2806:DSP/Inc/arm_math.h ****   /**
2807:DSP/Inc/arm_math.h ****    * @brief  Copies the elements of a Q7 vector.
2808:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       input pointer
2809:DSP/Inc/arm_math.h ****    * @param[out] pDst       output pointer
2810:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2811:DSP/Inc/arm_math.h ****    */
2812:DSP/Inc/arm_math.h ****   void arm_copy_q7(
2813:DSP/Inc/arm_math.h ****   q7_t * pSrc,
2814:DSP/Inc/arm_math.h ****   q7_t * pDst,
2815:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2816:DSP/Inc/arm_math.h **** 
2817:DSP/Inc/arm_math.h **** 
2818:DSP/Inc/arm_math.h ****   /**
2819:DSP/Inc/arm_math.h ****    * @brief  Copies the elements of a Q15 vector.
2820:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       input pointer
2821:DSP/Inc/arm_math.h ****    * @param[out] pDst       output pointer
2822:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2823:DSP/Inc/arm_math.h ****    */
2824:DSP/Inc/arm_math.h ****   void arm_copy_q15(
2825:DSP/Inc/arm_math.h ****   q15_t * pSrc,
2826:DSP/Inc/arm_math.h ****   q15_t * pDst,
2827:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2828:DSP/Inc/arm_math.h **** 
2829:DSP/Inc/arm_math.h **** 
2830:DSP/Inc/arm_math.h ****   /**
2831:DSP/Inc/arm_math.h ****    * @brief  Copies the elements of a Q31 vector.
2832:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       input pointer
2833:DSP/Inc/arm_math.h ****    * @param[out] pDst       output pointer
2834:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2835:DSP/Inc/arm_math.h ****    */
2836:DSP/Inc/arm_math.h ****   void arm_copy_q31(
2837:DSP/Inc/arm_math.h ****   q31_t * pSrc,
2838:DSP/Inc/arm_math.h ****   q31_t * pDst,
2839:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2840:DSP/Inc/arm_math.h **** 
2841:DSP/Inc/arm_math.h **** 
2842:DSP/Inc/arm_math.h ****   /**
2843:DSP/Inc/arm_math.h ****    * @brief  Fills a constant value into a floating-point vector.
2844:DSP/Inc/arm_math.h ****    * @param[in]  value      input value to be filled
2845:DSP/Inc/arm_math.h ****    * @param[out] pDst       output pointer
2846:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2847:DSP/Inc/arm_math.h ****    */
2848:DSP/Inc/arm_math.h ****   void arm_fill_f32(
2849:DSP/Inc/arm_math.h ****   float32_t value,
2850:DSP/Inc/arm_math.h ****   float32_t * pDst,
2851:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2852:DSP/Inc/arm_math.h **** 
2853:DSP/Inc/arm_math.h **** 
2854:DSP/Inc/arm_math.h ****   /**
2855:DSP/Inc/arm_math.h ****    * @brief  Fills a constant value into a Q7 vector.
2856:DSP/Inc/arm_math.h ****    * @param[in]  value      input value to be filled
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 79


2857:DSP/Inc/arm_math.h ****    * @param[out] pDst       output pointer
2858:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2859:DSP/Inc/arm_math.h ****    */
2860:DSP/Inc/arm_math.h ****   void arm_fill_q7(
2861:DSP/Inc/arm_math.h ****   q7_t value,
2862:DSP/Inc/arm_math.h ****   q7_t * pDst,
2863:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2864:DSP/Inc/arm_math.h **** 
2865:DSP/Inc/arm_math.h **** 
2866:DSP/Inc/arm_math.h ****   /**
2867:DSP/Inc/arm_math.h ****    * @brief  Fills a constant value into a Q15 vector.
2868:DSP/Inc/arm_math.h ****    * @param[in]  value      input value to be filled
2869:DSP/Inc/arm_math.h ****    * @param[out] pDst       output pointer
2870:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2871:DSP/Inc/arm_math.h ****    */
2872:DSP/Inc/arm_math.h ****   void arm_fill_q15(
2873:DSP/Inc/arm_math.h ****   q15_t value,
2874:DSP/Inc/arm_math.h ****   q15_t * pDst,
2875:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2876:DSP/Inc/arm_math.h **** 
2877:DSP/Inc/arm_math.h **** 
2878:DSP/Inc/arm_math.h ****   /**
2879:DSP/Inc/arm_math.h ****    * @brief  Fills a constant value into a Q31 vector.
2880:DSP/Inc/arm_math.h ****    * @param[in]  value      input value to be filled
2881:DSP/Inc/arm_math.h ****    * @param[out] pDst       output pointer
2882:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2883:DSP/Inc/arm_math.h ****    */
2884:DSP/Inc/arm_math.h ****   void arm_fill_q31(
2885:DSP/Inc/arm_math.h ****   q31_t value,
2886:DSP/Inc/arm_math.h ****   q31_t * pDst,
2887:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2888:DSP/Inc/arm_math.h **** 
2889:DSP/Inc/arm_math.h **** 
2890:DSP/Inc/arm_math.h **** /**
2891:DSP/Inc/arm_math.h ****  * @brief Convolution of floating-point sequences.
2892:DSP/Inc/arm_math.h ****  * @param[in]  pSrcA    points to the first input sequence.
2893:DSP/Inc/arm_math.h ****  * @param[in]  srcALen  length of the first input sequence.
2894:DSP/Inc/arm_math.h ****  * @param[in]  pSrcB    points to the second input sequence.
2895:DSP/Inc/arm_math.h ****  * @param[in]  srcBLen  length of the second input sequence.
2896:DSP/Inc/arm_math.h ****  * @param[out] pDst     points to the location where the output result is written.  Length srcALen+
2897:DSP/Inc/arm_math.h ****  */
2898:DSP/Inc/arm_math.h ****   void arm_conv_f32(
2899:DSP/Inc/arm_math.h ****   float32_t * pSrcA,
2900:DSP/Inc/arm_math.h ****   uint32_t srcALen,
2901:DSP/Inc/arm_math.h ****   float32_t * pSrcB,
2902:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
2903:DSP/Inc/arm_math.h ****   float32_t * pDst);
2904:DSP/Inc/arm_math.h **** 
2905:DSP/Inc/arm_math.h **** 
2906:DSP/Inc/arm_math.h ****   /**
2907:DSP/Inc/arm_math.h ****    * @brief Convolution of Q15 sequences.
2908:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
2909:DSP/Inc/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
2910:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
2911:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
2912:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
2913:DSP/Inc/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 80


2914:DSP/Inc/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
2915:DSP/Inc/arm_math.h ****    */
2916:DSP/Inc/arm_math.h ****   void arm_conv_opt_q15(
2917:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
2918:DSP/Inc/arm_math.h ****   uint32_t srcALen,
2919:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
2920:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
2921:DSP/Inc/arm_math.h ****   q15_t * pDst,
2922:DSP/Inc/arm_math.h ****   q15_t * pScratch1,
2923:DSP/Inc/arm_math.h ****   q15_t * pScratch2);
2924:DSP/Inc/arm_math.h **** 
2925:DSP/Inc/arm_math.h **** 
2926:DSP/Inc/arm_math.h **** /**
2927:DSP/Inc/arm_math.h ****  * @brief Convolution of Q15 sequences.
2928:DSP/Inc/arm_math.h ****  * @param[in]  pSrcA    points to the first input sequence.
2929:DSP/Inc/arm_math.h ****  * @param[in]  srcALen  length of the first input sequence.
2930:DSP/Inc/arm_math.h ****  * @param[in]  pSrcB    points to the second input sequence.
2931:DSP/Inc/arm_math.h ****  * @param[in]  srcBLen  length of the second input sequence.
2932:DSP/Inc/arm_math.h ****  * @param[out] pDst     points to the location where the output result is written.  Length srcALen+
2933:DSP/Inc/arm_math.h ****  */
2934:DSP/Inc/arm_math.h ****   void arm_conv_q15(
2935:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
2936:DSP/Inc/arm_math.h ****   uint32_t srcALen,
2937:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
2938:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
2939:DSP/Inc/arm_math.h ****   q15_t * pDst);
2940:DSP/Inc/arm_math.h **** 
2941:DSP/Inc/arm_math.h **** 
2942:DSP/Inc/arm_math.h ****   /**
2943:DSP/Inc/arm_math.h ****    * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
2944:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
2945:DSP/Inc/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
2946:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
2947:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
2948:DSP/Inc/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
2949:DSP/Inc/arm_math.h ****    */
2950:DSP/Inc/arm_math.h ****   void arm_conv_fast_q15(
2951:DSP/Inc/arm_math.h ****           q15_t * pSrcA,
2952:DSP/Inc/arm_math.h ****           uint32_t srcALen,
2953:DSP/Inc/arm_math.h ****           q15_t * pSrcB,
2954:DSP/Inc/arm_math.h ****           uint32_t srcBLen,
2955:DSP/Inc/arm_math.h ****           q15_t * pDst);
2956:DSP/Inc/arm_math.h **** 
2957:DSP/Inc/arm_math.h **** 
2958:DSP/Inc/arm_math.h ****   /**
2959:DSP/Inc/arm_math.h ****    * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
2960:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
2961:DSP/Inc/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
2962:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
2963:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
2964:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
2965:DSP/Inc/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen,
2966:DSP/Inc/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
2967:DSP/Inc/arm_math.h ****    */
2968:DSP/Inc/arm_math.h ****   void arm_conv_fast_opt_q15(
2969:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
2970:DSP/Inc/arm_math.h ****   uint32_t srcALen,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 81


2971:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
2972:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
2973:DSP/Inc/arm_math.h ****   q15_t * pDst,
2974:DSP/Inc/arm_math.h ****   q15_t * pScratch1,
2975:DSP/Inc/arm_math.h ****   q15_t * pScratch2);
2976:DSP/Inc/arm_math.h **** 
2977:DSP/Inc/arm_math.h **** 
2978:DSP/Inc/arm_math.h ****   /**
2979:DSP/Inc/arm_math.h ****    * @brief Convolution of Q31 sequences.
2980:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
2981:DSP/Inc/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
2982:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
2983:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
2984:DSP/Inc/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
2985:DSP/Inc/arm_math.h ****    */
2986:DSP/Inc/arm_math.h ****   void arm_conv_q31(
2987:DSP/Inc/arm_math.h ****   q31_t * pSrcA,
2988:DSP/Inc/arm_math.h ****   uint32_t srcALen,
2989:DSP/Inc/arm_math.h ****   q31_t * pSrcB,
2990:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
2991:DSP/Inc/arm_math.h ****   q31_t * pDst);
2992:DSP/Inc/arm_math.h **** 
2993:DSP/Inc/arm_math.h **** 
2994:DSP/Inc/arm_math.h ****   /**
2995:DSP/Inc/arm_math.h ****    * @brief Convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
2996:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
2997:DSP/Inc/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
2998:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
2999:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3000:DSP/Inc/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3001:DSP/Inc/arm_math.h ****    */
3002:DSP/Inc/arm_math.h ****   void arm_conv_fast_q31(
3003:DSP/Inc/arm_math.h ****   q31_t * pSrcA,
3004:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3005:DSP/Inc/arm_math.h ****   q31_t * pSrcB,
3006:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3007:DSP/Inc/arm_math.h ****   q31_t * pDst);
3008:DSP/Inc/arm_math.h **** 
3009:DSP/Inc/arm_math.h **** 
3010:DSP/Inc/arm_math.h ****     /**
3011:DSP/Inc/arm_math.h ****    * @brief Convolution of Q7 sequences.
3012:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
3013:DSP/Inc/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
3014:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
3015:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
3016:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
3017:DSP/Inc/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
3018:DSP/Inc/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
3019:DSP/Inc/arm_math.h ****    */
3020:DSP/Inc/arm_math.h ****   void arm_conv_opt_q7(
3021:DSP/Inc/arm_math.h ****   q7_t * pSrcA,
3022:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3023:DSP/Inc/arm_math.h ****   q7_t * pSrcB,
3024:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3025:DSP/Inc/arm_math.h ****   q7_t * pDst,
3026:DSP/Inc/arm_math.h ****   q15_t * pScratch1,
3027:DSP/Inc/arm_math.h ****   q15_t * pScratch2);
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 82


3028:DSP/Inc/arm_math.h **** 
3029:DSP/Inc/arm_math.h **** 
3030:DSP/Inc/arm_math.h ****   /**
3031:DSP/Inc/arm_math.h ****    * @brief Convolution of Q7 sequences.
3032:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3033:DSP/Inc/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3034:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3035:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3036:DSP/Inc/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3037:DSP/Inc/arm_math.h ****    */
3038:DSP/Inc/arm_math.h ****   void arm_conv_q7(
3039:DSP/Inc/arm_math.h ****   q7_t * pSrcA,
3040:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3041:DSP/Inc/arm_math.h ****   q7_t * pSrcB,
3042:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3043:DSP/Inc/arm_math.h ****   q7_t * pDst);
3044:DSP/Inc/arm_math.h **** 
3045:DSP/Inc/arm_math.h **** 
3046:DSP/Inc/arm_math.h ****   /**
3047:DSP/Inc/arm_math.h ****    * @brief Partial convolution of floating-point sequences.
3048:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3049:DSP/Inc/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3050:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3051:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3052:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
3053:DSP/Inc/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3054:DSP/Inc/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3055:DSP/Inc/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3056:DSP/Inc/arm_math.h ****    */
3057:DSP/Inc/arm_math.h ****   arm_status arm_conv_partial_f32(
3058:DSP/Inc/arm_math.h ****   float32_t * pSrcA,
3059:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3060:DSP/Inc/arm_math.h ****   float32_t * pSrcB,
3061:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3062:DSP/Inc/arm_math.h ****   float32_t * pDst,
3063:DSP/Inc/arm_math.h ****   uint32_t firstIndex,
3064:DSP/Inc/arm_math.h ****   uint32_t numPoints);
3065:DSP/Inc/arm_math.h **** 
3066:DSP/Inc/arm_math.h **** 
3067:DSP/Inc/arm_math.h ****   /**
3068:DSP/Inc/arm_math.h ****    * @brief Partial convolution of Q15 sequences.
3069:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3070:DSP/Inc/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3071:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3072:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3073:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
3074:DSP/Inc/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3075:DSP/Inc/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3076:DSP/Inc/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen
3077:DSP/Inc/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
3078:DSP/Inc/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3079:DSP/Inc/arm_math.h ****    */
3080:DSP/Inc/arm_math.h ****   arm_status arm_conv_partial_opt_q15(
3081:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
3082:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3083:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
3084:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 83


3085:DSP/Inc/arm_math.h ****   q15_t * pDst,
3086:DSP/Inc/arm_math.h ****   uint32_t firstIndex,
3087:DSP/Inc/arm_math.h ****   uint32_t numPoints,
3088:DSP/Inc/arm_math.h ****   q15_t * pScratch1,
3089:DSP/Inc/arm_math.h ****   q15_t * pScratch2);
3090:DSP/Inc/arm_math.h **** 
3091:DSP/Inc/arm_math.h **** 
3092:DSP/Inc/arm_math.h ****   /**
3093:DSP/Inc/arm_math.h ****    * @brief Partial convolution of Q15 sequences.
3094:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3095:DSP/Inc/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3096:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3097:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3098:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
3099:DSP/Inc/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3100:DSP/Inc/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3101:DSP/Inc/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3102:DSP/Inc/arm_math.h ****    */
3103:DSP/Inc/arm_math.h ****   arm_status arm_conv_partial_q15(
3104:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
3105:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3106:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
3107:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3108:DSP/Inc/arm_math.h ****   q15_t * pDst,
3109:DSP/Inc/arm_math.h ****   uint32_t firstIndex,
3110:DSP/Inc/arm_math.h ****   uint32_t numPoints);
3111:DSP/Inc/arm_math.h **** 
3112:DSP/Inc/arm_math.h **** 
3113:DSP/Inc/arm_math.h ****   /**
3114:DSP/Inc/arm_math.h ****    * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3115:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3116:DSP/Inc/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3117:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3118:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3119:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
3120:DSP/Inc/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3121:DSP/Inc/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3122:DSP/Inc/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3123:DSP/Inc/arm_math.h ****    */
3124:DSP/Inc/arm_math.h ****   arm_status arm_conv_partial_fast_q15(
3125:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
3126:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3127:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
3128:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3129:DSP/Inc/arm_math.h ****   q15_t * pDst,
3130:DSP/Inc/arm_math.h ****   uint32_t firstIndex,
3131:DSP/Inc/arm_math.h ****   uint32_t numPoints);
3132:DSP/Inc/arm_math.h **** 
3133:DSP/Inc/arm_math.h **** 
3134:DSP/Inc/arm_math.h ****   /**
3135:DSP/Inc/arm_math.h ****    * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3136:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3137:DSP/Inc/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3138:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3139:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3140:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
3141:DSP/Inc/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 84


3142:DSP/Inc/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3143:DSP/Inc/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen
3144:DSP/Inc/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
3145:DSP/Inc/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3146:DSP/Inc/arm_math.h ****    */
3147:DSP/Inc/arm_math.h ****   arm_status arm_conv_partial_fast_opt_q15(
3148:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
3149:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3150:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
3151:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3152:DSP/Inc/arm_math.h ****   q15_t * pDst,
3153:DSP/Inc/arm_math.h ****   uint32_t firstIndex,
3154:DSP/Inc/arm_math.h ****   uint32_t numPoints,
3155:DSP/Inc/arm_math.h ****   q15_t * pScratch1,
3156:DSP/Inc/arm_math.h ****   q15_t * pScratch2);
3157:DSP/Inc/arm_math.h **** 
3158:DSP/Inc/arm_math.h **** 
3159:DSP/Inc/arm_math.h ****   /**
3160:DSP/Inc/arm_math.h ****    * @brief Partial convolution of Q31 sequences.
3161:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3162:DSP/Inc/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3163:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3164:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3165:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
3166:DSP/Inc/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3167:DSP/Inc/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3168:DSP/Inc/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3169:DSP/Inc/arm_math.h ****    */
3170:DSP/Inc/arm_math.h ****   arm_status arm_conv_partial_q31(
3171:DSP/Inc/arm_math.h ****   q31_t * pSrcA,
3172:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3173:DSP/Inc/arm_math.h ****   q31_t * pSrcB,
3174:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3175:DSP/Inc/arm_math.h ****   q31_t * pDst,
3176:DSP/Inc/arm_math.h ****   uint32_t firstIndex,
3177:DSP/Inc/arm_math.h ****   uint32_t numPoints);
3178:DSP/Inc/arm_math.h **** 
3179:DSP/Inc/arm_math.h **** 
3180:DSP/Inc/arm_math.h ****   /**
3181:DSP/Inc/arm_math.h ****    * @brief Partial convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
3182:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3183:DSP/Inc/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3184:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3185:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3186:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
3187:DSP/Inc/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3188:DSP/Inc/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3189:DSP/Inc/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3190:DSP/Inc/arm_math.h ****    */
3191:DSP/Inc/arm_math.h ****   arm_status arm_conv_partial_fast_q31(
3192:DSP/Inc/arm_math.h ****   q31_t * pSrcA,
3193:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3194:DSP/Inc/arm_math.h ****   q31_t * pSrcB,
3195:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3196:DSP/Inc/arm_math.h ****   q31_t * pDst,
3197:DSP/Inc/arm_math.h ****   uint32_t firstIndex,
3198:DSP/Inc/arm_math.h ****   uint32_t numPoints);
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 85


3199:DSP/Inc/arm_math.h **** 
3200:DSP/Inc/arm_math.h **** 
3201:DSP/Inc/arm_math.h ****   /**
3202:DSP/Inc/arm_math.h ****    * @brief Partial convolution of Q7 sequences
3203:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3204:DSP/Inc/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3205:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3206:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3207:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
3208:DSP/Inc/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3209:DSP/Inc/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3210:DSP/Inc/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) 
3211:DSP/Inc/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen)
3212:DSP/Inc/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3213:DSP/Inc/arm_math.h ****    */
3214:DSP/Inc/arm_math.h ****   arm_status arm_conv_partial_opt_q7(
3215:DSP/Inc/arm_math.h ****   q7_t * pSrcA,
3216:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3217:DSP/Inc/arm_math.h ****   q7_t * pSrcB,
3218:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3219:DSP/Inc/arm_math.h ****   q7_t * pDst,
3220:DSP/Inc/arm_math.h ****   uint32_t firstIndex,
3221:DSP/Inc/arm_math.h ****   uint32_t numPoints,
3222:DSP/Inc/arm_math.h ****   q15_t * pScratch1,
3223:DSP/Inc/arm_math.h ****   q15_t * pScratch2);
3224:DSP/Inc/arm_math.h **** 
3225:DSP/Inc/arm_math.h **** 
3226:DSP/Inc/arm_math.h **** /**
3227:DSP/Inc/arm_math.h ****    * @brief Partial convolution of Q7 sequences.
3228:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3229:DSP/Inc/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3230:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3231:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3232:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
3233:DSP/Inc/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3234:DSP/Inc/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3235:DSP/Inc/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3236:DSP/Inc/arm_math.h ****    */
3237:DSP/Inc/arm_math.h ****   arm_status arm_conv_partial_q7(
3238:DSP/Inc/arm_math.h ****   q7_t * pSrcA,
3239:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3240:DSP/Inc/arm_math.h ****   q7_t * pSrcB,
3241:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3242:DSP/Inc/arm_math.h ****   q7_t * pDst,
3243:DSP/Inc/arm_math.h ****   uint32_t firstIndex,
3244:DSP/Inc/arm_math.h ****   uint32_t numPoints);
3245:DSP/Inc/arm_math.h **** 
3246:DSP/Inc/arm_math.h **** 
3247:DSP/Inc/arm_math.h ****   /**
3248:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 FIR decimator.
3249:DSP/Inc/arm_math.h ****    */
3250:DSP/Inc/arm_math.h ****   typedef struct
3251:DSP/Inc/arm_math.h ****   {
3252:DSP/Inc/arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3253:DSP/Inc/arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3254:DSP/Inc/arm_math.h ****     q15_t *pCoeffs;             /**< points to the coefficient array. The array is of length numTap
3255:DSP/Inc/arm_math.h ****     q15_t *pState;              /**< points to the state variable array. The array is of length num
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 86


3256:DSP/Inc/arm_math.h ****   } arm_fir_decimate_instance_q15;
3257:DSP/Inc/arm_math.h **** 
3258:DSP/Inc/arm_math.h ****   /**
3259:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 FIR decimator.
3260:DSP/Inc/arm_math.h ****    */
3261:DSP/Inc/arm_math.h ****   typedef struct
3262:DSP/Inc/arm_math.h ****   {
3263:DSP/Inc/arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3264:DSP/Inc/arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3265:DSP/Inc/arm_math.h ****     q31_t *pCoeffs;             /**< points to the coefficient array. The array is of length numTap
3266:DSP/Inc/arm_math.h ****     q31_t *pState;              /**< points to the state variable array. The array is of length num
3267:DSP/Inc/arm_math.h ****   } arm_fir_decimate_instance_q31;
3268:DSP/Inc/arm_math.h **** 
3269:DSP/Inc/arm_math.h ****   /**
3270:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point FIR decimator.
3271:DSP/Inc/arm_math.h ****    */
3272:DSP/Inc/arm_math.h ****   typedef struct
3273:DSP/Inc/arm_math.h ****   {
3274:DSP/Inc/arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3275:DSP/Inc/arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3276:DSP/Inc/arm_math.h ****     float32_t *pCoeffs;         /**< points to the coefficient array. The array is of length numTap
3277:DSP/Inc/arm_math.h ****     float32_t *pState;          /**< points to the state variable array. The array is of length num
3278:DSP/Inc/arm_math.h ****   } arm_fir_decimate_instance_f32;
3279:DSP/Inc/arm_math.h **** 
3280:DSP/Inc/arm_math.h **** 
3281:DSP/Inc/arm_math.h ****   /**
3282:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point FIR decimator.
3283:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR decimator structure.
3284:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3285:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data
3286:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3287:DSP/Inc/arm_math.h ****    */
3288:DSP/Inc/arm_math.h ****   void arm_fir_decimate_f32(
3289:DSP/Inc/arm_math.h ****   const arm_fir_decimate_instance_f32 * S,
3290:DSP/Inc/arm_math.h ****   float32_t * pSrc,
3291:DSP/Inc/arm_math.h ****   float32_t * pDst,
3292:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3293:DSP/Inc/arm_math.h **** 
3294:DSP/Inc/arm_math.h **** 
3295:DSP/Inc/arm_math.h ****   /**
3296:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the floating-point FIR decimator.
3297:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR decimator structure.
3298:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3299:DSP/Inc/arm_math.h ****    * @param[in]     M          decimation factor.
3300:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3301:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3302:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3303:DSP/Inc/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3304:DSP/Inc/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3305:DSP/Inc/arm_math.h ****    */
3306:DSP/Inc/arm_math.h ****   arm_status arm_fir_decimate_init_f32(
3307:DSP/Inc/arm_math.h ****   arm_fir_decimate_instance_f32 * S,
3308:DSP/Inc/arm_math.h ****   uint16_t numTaps,
3309:DSP/Inc/arm_math.h ****   uint8_t M,
3310:DSP/Inc/arm_math.h ****   float32_t * pCoeffs,
3311:DSP/Inc/arm_math.h ****   float32_t * pState,
3312:DSP/Inc/arm_math.h ****   uint32_t blockSize);
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 87


3313:DSP/Inc/arm_math.h **** 
3314:DSP/Inc/arm_math.h **** 
3315:DSP/Inc/arm_math.h ****   /**
3316:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q15 FIR decimator.
3317:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
3318:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3319:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data
3320:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3321:DSP/Inc/arm_math.h ****    */
3322:DSP/Inc/arm_math.h ****   void arm_fir_decimate_q15(
3323:DSP/Inc/arm_math.h ****   const arm_fir_decimate_instance_q15 * S,
3324:DSP/Inc/arm_math.h ****   q15_t * pSrc,
3325:DSP/Inc/arm_math.h ****   q15_t * pDst,
3326:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3327:DSP/Inc/arm_math.h **** 
3328:DSP/Inc/arm_math.h **** 
3329:DSP/Inc/arm_math.h ****   /**
3330:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q15 FIR decimator (fast variant) for Cortex-M3 and Cortex-M
3331:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
3332:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3333:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data
3334:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3335:DSP/Inc/arm_math.h ****    */
3336:DSP/Inc/arm_math.h ****   void arm_fir_decimate_fast_q15(
3337:DSP/Inc/arm_math.h ****   const arm_fir_decimate_instance_q15 * S,
3338:DSP/Inc/arm_math.h ****   q15_t * pSrc,
3339:DSP/Inc/arm_math.h ****   q15_t * pDst,
3340:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3341:DSP/Inc/arm_math.h **** 
3342:DSP/Inc/arm_math.h **** 
3343:DSP/Inc/arm_math.h ****   /**
3344:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q15 FIR decimator.
3345:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR decimator structure.
3346:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3347:DSP/Inc/arm_math.h ****    * @param[in]     M          decimation factor.
3348:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3349:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3350:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3351:DSP/Inc/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3352:DSP/Inc/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3353:DSP/Inc/arm_math.h ****    */
3354:DSP/Inc/arm_math.h ****   arm_status arm_fir_decimate_init_q15(
3355:DSP/Inc/arm_math.h ****   arm_fir_decimate_instance_q15 * S,
3356:DSP/Inc/arm_math.h ****   uint16_t numTaps,
3357:DSP/Inc/arm_math.h ****   uint8_t M,
3358:DSP/Inc/arm_math.h ****   q15_t * pCoeffs,
3359:DSP/Inc/arm_math.h ****   q15_t * pState,
3360:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3361:DSP/Inc/arm_math.h **** 
3362:DSP/Inc/arm_math.h **** 
3363:DSP/Inc/arm_math.h ****   /**
3364:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q31 FIR decimator.
3365:DSP/Inc/arm_math.h ****    * @param[in]  S     points to an instance of the Q31 FIR decimator structure.
3366:DSP/Inc/arm_math.h ****    * @param[in]  pSrc  points to the block of input data.
3367:DSP/Inc/arm_math.h ****    * @param[out] pDst  points to the block of output data
3368:DSP/Inc/arm_math.h ****    * @param[in] blockSize number of input samples to process per call.
3369:DSP/Inc/arm_math.h ****    */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 88


3370:DSP/Inc/arm_math.h ****   void arm_fir_decimate_q31(
3371:DSP/Inc/arm_math.h ****   const arm_fir_decimate_instance_q31 * S,
3372:DSP/Inc/arm_math.h ****   q31_t * pSrc,
3373:DSP/Inc/arm_math.h ****   q31_t * pDst,
3374:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3375:DSP/Inc/arm_math.h **** 
3376:DSP/Inc/arm_math.h ****   /**
3377:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q31 FIR decimator (fast variant) for Cortex-M3 and Cortex-M
3378:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR decimator structure.
3379:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3380:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data
3381:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3382:DSP/Inc/arm_math.h ****    */
3383:DSP/Inc/arm_math.h ****   void arm_fir_decimate_fast_q31(
3384:DSP/Inc/arm_math.h ****   arm_fir_decimate_instance_q31 * S,
3385:DSP/Inc/arm_math.h ****   q31_t * pSrc,
3386:DSP/Inc/arm_math.h ****   q31_t * pDst,
3387:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3388:DSP/Inc/arm_math.h **** 
3389:DSP/Inc/arm_math.h **** 
3390:DSP/Inc/arm_math.h ****   /**
3391:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q31 FIR decimator.
3392:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR decimator structure.
3393:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3394:DSP/Inc/arm_math.h ****    * @param[in]     M          decimation factor.
3395:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3396:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3397:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3398:DSP/Inc/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3399:DSP/Inc/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3400:DSP/Inc/arm_math.h ****    */
3401:DSP/Inc/arm_math.h ****   arm_status arm_fir_decimate_init_q31(
3402:DSP/Inc/arm_math.h ****   arm_fir_decimate_instance_q31 * S,
3403:DSP/Inc/arm_math.h ****   uint16_t numTaps,
3404:DSP/Inc/arm_math.h ****   uint8_t M,
3405:DSP/Inc/arm_math.h ****   q31_t * pCoeffs,
3406:DSP/Inc/arm_math.h ****   q31_t * pState,
3407:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3408:DSP/Inc/arm_math.h **** 
3409:DSP/Inc/arm_math.h **** 
3410:DSP/Inc/arm_math.h ****   /**
3411:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 FIR interpolator.
3412:DSP/Inc/arm_math.h ****    */
3413:DSP/Inc/arm_math.h ****   typedef struct
3414:DSP/Inc/arm_math.h ****   {
3415:DSP/Inc/arm_math.h ****     uint8_t L;                      /**< upsample factor. */
3416:DSP/Inc/arm_math.h ****     uint16_t phaseLength;           /**< length of each polyphase filter component. */
3417:DSP/Inc/arm_math.h ****     q15_t *pCoeffs;                 /**< points to the coefficient array. The array is of length L*
3418:DSP/Inc/arm_math.h ****     q15_t *pState;                  /**< points to the state variable array. The array is of length
3419:DSP/Inc/arm_math.h ****   } arm_fir_interpolate_instance_q15;
3420:DSP/Inc/arm_math.h **** 
3421:DSP/Inc/arm_math.h ****   /**
3422:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 FIR interpolator.
3423:DSP/Inc/arm_math.h ****    */
3424:DSP/Inc/arm_math.h ****   typedef struct
3425:DSP/Inc/arm_math.h ****   {
3426:DSP/Inc/arm_math.h ****     uint8_t L;                      /**< upsample factor. */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 89


3427:DSP/Inc/arm_math.h ****     uint16_t phaseLength;           /**< length of each polyphase filter component. */
3428:DSP/Inc/arm_math.h ****     q31_t *pCoeffs;                 /**< points to the coefficient array. The array is of length L*
3429:DSP/Inc/arm_math.h ****     q31_t *pState;                  /**< points to the state variable array. The array is of length
3430:DSP/Inc/arm_math.h ****   } arm_fir_interpolate_instance_q31;
3431:DSP/Inc/arm_math.h **** 
3432:DSP/Inc/arm_math.h ****   /**
3433:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point FIR interpolator.
3434:DSP/Inc/arm_math.h ****    */
3435:DSP/Inc/arm_math.h ****   typedef struct
3436:DSP/Inc/arm_math.h ****   {
3437:DSP/Inc/arm_math.h ****     uint8_t L;                     /**< upsample factor. */
3438:DSP/Inc/arm_math.h ****     uint16_t phaseLength;          /**< length of each polyphase filter component. */
3439:DSP/Inc/arm_math.h ****     float32_t *pCoeffs;            /**< points to the coefficient array. The array is of length L*p
3440:DSP/Inc/arm_math.h ****     float32_t *pState;             /**< points to the state variable array. The array is of length 
3441:DSP/Inc/arm_math.h ****   } arm_fir_interpolate_instance_f32;
3442:DSP/Inc/arm_math.h **** 
3443:DSP/Inc/arm_math.h **** 
3444:DSP/Inc/arm_math.h ****   /**
3445:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q15 FIR interpolator.
3446:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
3447:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3448:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3449:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3450:DSP/Inc/arm_math.h ****    */
3451:DSP/Inc/arm_math.h ****   void arm_fir_interpolate_q15(
3452:DSP/Inc/arm_math.h ****   const arm_fir_interpolate_instance_q15 * S,
3453:DSP/Inc/arm_math.h ****   q15_t * pSrc,
3454:DSP/Inc/arm_math.h ****   q15_t * pDst,
3455:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3456:DSP/Inc/arm_math.h **** 
3457:DSP/Inc/arm_math.h **** 
3458:DSP/Inc/arm_math.h ****   /**
3459:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q15 FIR interpolator.
3460:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR interpolator structure.
3461:DSP/Inc/arm_math.h ****    * @param[in]     L          upsample factor.
3462:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3463:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3464:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3465:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3466:DSP/Inc/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3467:DSP/Inc/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3468:DSP/Inc/arm_math.h ****    */
3469:DSP/Inc/arm_math.h ****   arm_status arm_fir_interpolate_init_q15(
3470:DSP/Inc/arm_math.h ****   arm_fir_interpolate_instance_q15 * S,
3471:DSP/Inc/arm_math.h ****   uint8_t L,
3472:DSP/Inc/arm_math.h ****   uint16_t numTaps,
3473:DSP/Inc/arm_math.h ****   q15_t * pCoeffs,
3474:DSP/Inc/arm_math.h ****   q15_t * pState,
3475:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3476:DSP/Inc/arm_math.h **** 
3477:DSP/Inc/arm_math.h **** 
3478:DSP/Inc/arm_math.h ****   /**
3479:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q31 FIR interpolator.
3480:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
3481:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3482:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3483:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 90


3484:DSP/Inc/arm_math.h ****    */
3485:DSP/Inc/arm_math.h ****   void arm_fir_interpolate_q31(
3486:DSP/Inc/arm_math.h ****   const arm_fir_interpolate_instance_q31 * S,
3487:DSP/Inc/arm_math.h ****   q31_t * pSrc,
3488:DSP/Inc/arm_math.h ****   q31_t * pDst,
3489:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3490:DSP/Inc/arm_math.h **** 
3491:DSP/Inc/arm_math.h **** 
3492:DSP/Inc/arm_math.h ****   /**
3493:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q31 FIR interpolator.
3494:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR interpolator structure.
3495:DSP/Inc/arm_math.h ****    * @param[in]     L          upsample factor.
3496:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3497:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3498:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3499:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3500:DSP/Inc/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3501:DSP/Inc/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3502:DSP/Inc/arm_math.h ****    */
3503:DSP/Inc/arm_math.h ****   arm_status arm_fir_interpolate_init_q31(
3504:DSP/Inc/arm_math.h ****   arm_fir_interpolate_instance_q31 * S,
3505:DSP/Inc/arm_math.h ****   uint8_t L,
3506:DSP/Inc/arm_math.h ****   uint16_t numTaps,
3507:DSP/Inc/arm_math.h ****   q31_t * pCoeffs,
3508:DSP/Inc/arm_math.h ****   q31_t * pState,
3509:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3510:DSP/Inc/arm_math.h **** 
3511:DSP/Inc/arm_math.h **** 
3512:DSP/Inc/arm_math.h ****   /**
3513:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point FIR interpolator.
3514:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR interpolator structure.
3515:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3516:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3517:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3518:DSP/Inc/arm_math.h ****    */
3519:DSP/Inc/arm_math.h ****   void arm_fir_interpolate_f32(
3520:DSP/Inc/arm_math.h ****   const arm_fir_interpolate_instance_f32 * S,
3521:DSP/Inc/arm_math.h ****   float32_t * pSrc,
3522:DSP/Inc/arm_math.h ****   float32_t * pDst,
3523:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3524:DSP/Inc/arm_math.h **** 
3525:DSP/Inc/arm_math.h **** 
3526:DSP/Inc/arm_math.h ****   /**
3527:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the floating-point FIR interpolator.
3528:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR interpolator structu
3529:DSP/Inc/arm_math.h ****    * @param[in]     L          upsample factor.
3530:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3531:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3532:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3533:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3534:DSP/Inc/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3535:DSP/Inc/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3536:DSP/Inc/arm_math.h ****    */
3537:DSP/Inc/arm_math.h ****   arm_status arm_fir_interpolate_init_f32(
3538:DSP/Inc/arm_math.h ****   arm_fir_interpolate_instance_f32 * S,
3539:DSP/Inc/arm_math.h ****   uint8_t L,
3540:DSP/Inc/arm_math.h ****   uint16_t numTaps,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 91


3541:DSP/Inc/arm_math.h ****   float32_t * pCoeffs,
3542:DSP/Inc/arm_math.h ****   float32_t * pState,
3543:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3544:DSP/Inc/arm_math.h **** 
3545:DSP/Inc/arm_math.h **** 
3546:DSP/Inc/arm_math.h ****   /**
3547:DSP/Inc/arm_math.h ****    * @brief Instance structure for the high precision Q31 Biquad cascade filter.
3548:DSP/Inc/arm_math.h ****    */
3549:DSP/Inc/arm_math.h ****   typedef struct
3550:DSP/Inc/arm_math.h ****   {
3551:DSP/Inc/arm_math.h ****     uint8_t numStages;       /**< number of 2nd order stages in the filter.  Overall order is 2*num
3552:DSP/Inc/arm_math.h ****     q63_t *pState;           /**< points to the array of state coefficients.  The array is of lengt
3553:DSP/Inc/arm_math.h ****     q31_t *pCoeffs;          /**< points to the array of coefficients.  The array is of length 5*nu
3554:DSP/Inc/arm_math.h ****     uint8_t postShift;       /**< additional shift, in bits, applied to each output sample. */
3555:DSP/Inc/arm_math.h ****   } arm_biquad_cas_df1_32x64_ins_q31;
3556:DSP/Inc/arm_math.h **** 
3557:DSP/Inc/arm_math.h **** 
3558:DSP/Inc/arm_math.h ****   /**
3559:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the high precision Q31 Biquad cascade filter s
3560:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3561:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data
3562:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3563:DSP/Inc/arm_math.h ****    */
3564:DSP/Inc/arm_math.h ****   void arm_biquad_cas_df1_32x64_q31(
3565:DSP/Inc/arm_math.h ****   const arm_biquad_cas_df1_32x64_ins_q31 * S,
3566:DSP/Inc/arm_math.h ****   q31_t * pSrc,
3567:DSP/Inc/arm_math.h ****   q31_t * pDst,
3568:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3569:DSP/Inc/arm_math.h **** 
3570:DSP/Inc/arm_math.h **** 
3571:DSP/Inc/arm_math.h ****   /**
3572:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the high precision Q31 Biquad cascade filte
3573:DSP/Inc/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3574:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3575:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3576:DSP/Inc/arm_math.h ****    * @param[in]     postShift  shift to be applied to the output. Varies according to the coefficie
3577:DSP/Inc/arm_math.h ****    */
3578:DSP/Inc/arm_math.h ****   void arm_biquad_cas_df1_32x64_init_q31(
3579:DSP/Inc/arm_math.h ****   arm_biquad_cas_df1_32x64_ins_q31 * S,
3580:DSP/Inc/arm_math.h ****   uint8_t numStages,
3581:DSP/Inc/arm_math.h ****   q31_t * pCoeffs,
3582:DSP/Inc/arm_math.h ****   q63_t * pState,
3583:DSP/Inc/arm_math.h ****   uint8_t postShift);
3584:DSP/Inc/arm_math.h **** 
3585:DSP/Inc/arm_math.h **** 
3586:DSP/Inc/arm_math.h ****   /**
3587:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3588:DSP/Inc/arm_math.h ****    */
3589:DSP/Inc/arm_math.h ****   typedef struct
3590:DSP/Inc/arm_math.h ****   {
3591:DSP/Inc/arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3592:DSP/Inc/arm_math.h ****     float32_t *pState;         /**< points to the array of state coefficients.  The array is of len
3593:DSP/Inc/arm_math.h ****     float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3594:DSP/Inc/arm_math.h ****   } arm_biquad_cascade_df2T_instance_f32;
3595:DSP/Inc/arm_math.h **** 
3596:DSP/Inc/arm_math.h ****   /**
3597:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 92


3598:DSP/Inc/arm_math.h ****    */
3599:DSP/Inc/arm_math.h ****   typedef struct
3600:DSP/Inc/arm_math.h ****   {
3601:DSP/Inc/arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3602:DSP/Inc/arm_math.h ****     float32_t *pState;         /**< points to the array of state coefficients.  The array is of len
3603:DSP/Inc/arm_math.h ****     float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3604:DSP/Inc/arm_math.h ****   } arm_biquad_cascade_stereo_df2T_instance_f32;
3605:DSP/Inc/arm_math.h **** 
3606:DSP/Inc/arm_math.h ****   /**
3607:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3608:DSP/Inc/arm_math.h ****    */
3609:DSP/Inc/arm_math.h ****   typedef struct
3610:DSP/Inc/arm_math.h ****   {
3611:DSP/Inc/arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3612:DSP/Inc/arm_math.h ****     float64_t *pState;         /**< points to the array of state coefficients.  The array is of len
3613:DSP/Inc/arm_math.h ****     float64_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3614:DSP/Inc/arm_math.h ****   } arm_biquad_cascade_df2T_instance_f64;
3615:DSP/Inc/arm_math.h **** 
3616:DSP/Inc/arm_math.h **** 
3617:DSP/Inc/arm_math.h ****   /**
3618:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3619:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3620:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3621:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data
3622:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3623:DSP/Inc/arm_math.h ****    */
3624:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df2T_f32(
3625:DSP/Inc/arm_math.h ****   const arm_biquad_cascade_df2T_instance_f32 * S,
3626:DSP/Inc/arm_math.h ****   float32_t * pSrc,
3627:DSP/Inc/arm_math.h ****   float32_t * pDst,
3628:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3629:DSP/Inc/arm_math.h **** 
3630:DSP/Inc/arm_math.h **** 
3631:DSP/Inc/arm_math.h ****   /**
3632:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3633:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3634:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3635:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data
3636:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3637:DSP/Inc/arm_math.h ****    */
3638:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_stereo_df2T_f32(
3639:DSP/Inc/arm_math.h ****   const arm_biquad_cascade_stereo_df2T_instance_f32 * S,
3640:DSP/Inc/arm_math.h ****   float32_t * pSrc,
3641:DSP/Inc/arm_math.h ****   float32_t * pDst,
3642:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3643:DSP/Inc/arm_math.h **** 
3644:DSP/Inc/arm_math.h **** 
3645:DSP/Inc/arm_math.h ****   /**
3646:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3647:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3648:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3649:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data
3650:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3651:DSP/Inc/arm_math.h ****    */
3652:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df2T_f64(
3653:DSP/Inc/arm_math.h ****   const arm_biquad_cascade_df2T_instance_f64 * S,
3654:DSP/Inc/arm_math.h ****   float64_t * pSrc,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 93


3655:DSP/Inc/arm_math.h ****   float64_t * pDst,
3656:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3657:DSP/Inc/arm_math.h **** 
3658:DSP/Inc/arm_math.h **** 
3659:DSP/Inc/arm_math.h ****   /**
3660:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3661:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3662:DSP/Inc/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3663:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3664:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3665:DSP/Inc/arm_math.h ****    */
3666:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df2T_init_f32(
3667:DSP/Inc/arm_math.h ****   arm_biquad_cascade_df2T_instance_f32 * S,
3668:DSP/Inc/arm_math.h ****   uint8_t numStages,
3669:DSP/Inc/arm_math.h ****   float32_t * pCoeffs,
3670:DSP/Inc/arm_math.h ****   float32_t * pState);
3671:DSP/Inc/arm_math.h **** 
3672:DSP/Inc/arm_math.h **** 
3673:DSP/Inc/arm_math.h ****   /**
3674:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3675:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3676:DSP/Inc/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3677:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3678:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3679:DSP/Inc/arm_math.h ****    */
3680:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_stereo_df2T_init_f32(
3681:DSP/Inc/arm_math.h ****   arm_biquad_cascade_stereo_df2T_instance_f32 * S,
3682:DSP/Inc/arm_math.h ****   uint8_t numStages,
3683:DSP/Inc/arm_math.h ****   float32_t * pCoeffs,
3684:DSP/Inc/arm_math.h ****   float32_t * pState);
3685:DSP/Inc/arm_math.h **** 
3686:DSP/Inc/arm_math.h **** 
3687:DSP/Inc/arm_math.h ****   /**
3688:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3689:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3690:DSP/Inc/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3691:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3692:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3693:DSP/Inc/arm_math.h ****    */
3694:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df2T_init_f64(
3695:DSP/Inc/arm_math.h ****   arm_biquad_cascade_df2T_instance_f64 * S,
3696:DSP/Inc/arm_math.h ****   uint8_t numStages,
3697:DSP/Inc/arm_math.h ****   float64_t * pCoeffs,
3698:DSP/Inc/arm_math.h ****   float64_t * pState);
3699:DSP/Inc/arm_math.h **** 
3700:DSP/Inc/arm_math.h **** 
3701:DSP/Inc/arm_math.h ****   /**
3702:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 FIR lattice filter.
3703:DSP/Inc/arm_math.h ****    */
3704:DSP/Inc/arm_math.h ****   typedef struct
3705:DSP/Inc/arm_math.h ****   {
3706:DSP/Inc/arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3707:DSP/Inc/arm_math.h ****     q15_t *pState;                       /**< points to the state variable array. The array is of l
3708:DSP/Inc/arm_math.h ****     q15_t *pCoeffs;                      /**< points to the coefficient array. The array is of leng
3709:DSP/Inc/arm_math.h ****   } arm_fir_lattice_instance_q15;
3710:DSP/Inc/arm_math.h **** 
3711:DSP/Inc/arm_math.h ****   /**
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 94


3712:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 FIR lattice filter.
3713:DSP/Inc/arm_math.h ****    */
3714:DSP/Inc/arm_math.h ****   typedef struct
3715:DSP/Inc/arm_math.h ****   {
3716:DSP/Inc/arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3717:DSP/Inc/arm_math.h ****     q31_t *pState;                       /**< points to the state variable array. The array is of l
3718:DSP/Inc/arm_math.h ****     q31_t *pCoeffs;                      /**< points to the coefficient array. The array is of leng
3719:DSP/Inc/arm_math.h ****   } arm_fir_lattice_instance_q31;
3720:DSP/Inc/arm_math.h **** 
3721:DSP/Inc/arm_math.h ****   /**
3722:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point FIR lattice filter.
3723:DSP/Inc/arm_math.h ****    */
3724:DSP/Inc/arm_math.h ****   typedef struct
3725:DSP/Inc/arm_math.h ****   {
3726:DSP/Inc/arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3727:DSP/Inc/arm_math.h ****     float32_t *pState;                   /**< points to the state variable array. The array is of l
3728:DSP/Inc/arm_math.h ****     float32_t *pCoeffs;                  /**< points to the coefficient array. The array is of leng
3729:DSP/Inc/arm_math.h ****   } arm_fir_lattice_instance_f32;
3730:DSP/Inc/arm_math.h **** 
3731:DSP/Inc/arm_math.h **** 
3732:DSP/Inc/arm_math.h ****   /**
3733:DSP/Inc/arm_math.h ****    * @brief Initialization function for the Q15 FIR lattice filter.
3734:DSP/Inc/arm_math.h ****    * @param[in] S          points to an instance of the Q15 FIR lattice structure.
3735:DSP/Inc/arm_math.h ****    * @param[in] numStages  number of filter stages.
3736:DSP/Inc/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3737:DSP/Inc/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages.
3738:DSP/Inc/arm_math.h ****    */
3739:DSP/Inc/arm_math.h ****   void arm_fir_lattice_init_q15(
3740:DSP/Inc/arm_math.h ****   arm_fir_lattice_instance_q15 * S,
3741:DSP/Inc/arm_math.h ****   uint16_t numStages,
3742:DSP/Inc/arm_math.h ****   q15_t * pCoeffs,
3743:DSP/Inc/arm_math.h ****   q15_t * pState);
3744:DSP/Inc/arm_math.h **** 
3745:DSP/Inc/arm_math.h **** 
3746:DSP/Inc/arm_math.h ****   /**
3747:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q15 FIR lattice filter.
3748:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR lattice structure.
3749:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3750:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3751:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3752:DSP/Inc/arm_math.h ****    */
3753:DSP/Inc/arm_math.h ****   void arm_fir_lattice_q15(
3754:DSP/Inc/arm_math.h ****   const arm_fir_lattice_instance_q15 * S,
3755:DSP/Inc/arm_math.h ****   q15_t * pSrc,
3756:DSP/Inc/arm_math.h ****   q15_t * pDst,
3757:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3758:DSP/Inc/arm_math.h **** 
3759:DSP/Inc/arm_math.h **** 
3760:DSP/Inc/arm_math.h ****   /**
3761:DSP/Inc/arm_math.h ****    * @brief Initialization function for the Q31 FIR lattice filter.
3762:DSP/Inc/arm_math.h ****    * @param[in] S          points to an instance of the Q31 FIR lattice structure.
3763:DSP/Inc/arm_math.h ****    * @param[in] numStages  number of filter stages.
3764:DSP/Inc/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3765:DSP/Inc/arm_math.h ****    * @param[in] pState     points to the state buffer.   The array is of length numStages.
3766:DSP/Inc/arm_math.h ****    */
3767:DSP/Inc/arm_math.h ****   void arm_fir_lattice_init_q31(
3768:DSP/Inc/arm_math.h ****   arm_fir_lattice_instance_q31 * S,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 95


3769:DSP/Inc/arm_math.h ****   uint16_t numStages,
3770:DSP/Inc/arm_math.h ****   q31_t * pCoeffs,
3771:DSP/Inc/arm_math.h ****   q31_t * pState);
3772:DSP/Inc/arm_math.h **** 
3773:DSP/Inc/arm_math.h **** 
3774:DSP/Inc/arm_math.h ****   /**
3775:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q31 FIR lattice filter.
3776:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR lattice structure.
3777:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3778:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data
3779:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3780:DSP/Inc/arm_math.h ****    */
3781:DSP/Inc/arm_math.h ****   void arm_fir_lattice_q31(
3782:DSP/Inc/arm_math.h ****   const arm_fir_lattice_instance_q31 * S,
3783:DSP/Inc/arm_math.h ****   q31_t * pSrc,
3784:DSP/Inc/arm_math.h ****   q31_t * pDst,
3785:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3786:DSP/Inc/arm_math.h **** 
3787:DSP/Inc/arm_math.h **** 
3788:DSP/Inc/arm_math.h **** /**
3789:DSP/Inc/arm_math.h ****  * @brief Initialization function for the floating-point FIR lattice filter.
3790:DSP/Inc/arm_math.h ****  * @param[in] S          points to an instance of the floating-point FIR lattice structure.
3791:DSP/Inc/arm_math.h ****  * @param[in] numStages  number of filter stages.
3792:DSP/Inc/arm_math.h ****  * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3793:DSP/Inc/arm_math.h ****  * @param[in] pState     points to the state buffer.  The array is of length numStages.
3794:DSP/Inc/arm_math.h ****  */
3795:DSP/Inc/arm_math.h ****   void arm_fir_lattice_init_f32(
3796:DSP/Inc/arm_math.h ****   arm_fir_lattice_instance_f32 * S,
3797:DSP/Inc/arm_math.h ****   uint16_t numStages,
3798:DSP/Inc/arm_math.h ****   float32_t * pCoeffs,
3799:DSP/Inc/arm_math.h ****   float32_t * pState);
3800:DSP/Inc/arm_math.h **** 
3801:DSP/Inc/arm_math.h **** 
3802:DSP/Inc/arm_math.h ****   /**
3803:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point FIR lattice filter.
3804:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR lattice structure.
3805:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3806:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data
3807:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3808:DSP/Inc/arm_math.h ****    */
3809:DSP/Inc/arm_math.h ****   void arm_fir_lattice_f32(
3810:DSP/Inc/arm_math.h ****   const arm_fir_lattice_instance_f32 * S,
3811:DSP/Inc/arm_math.h ****   float32_t * pSrc,
3812:DSP/Inc/arm_math.h ****   float32_t * pDst,
3813:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3814:DSP/Inc/arm_math.h **** 
3815:DSP/Inc/arm_math.h **** 
3816:DSP/Inc/arm_math.h ****   /**
3817:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 IIR lattice filter.
3818:DSP/Inc/arm_math.h ****    */
3819:DSP/Inc/arm_math.h ****   typedef struct
3820:DSP/Inc/arm_math.h ****   {
3821:DSP/Inc/arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3822:DSP/Inc/arm_math.h ****     q15_t *pState;                       /**< points to the state variable array. The array is of l
3823:DSP/Inc/arm_math.h ****     q15_t *pkCoeffs;                     /**< points to the reflection coefficient array. The array
3824:DSP/Inc/arm_math.h ****     q15_t *pvCoeffs;                     /**< points to the ladder coefficient array. The array is 
3825:DSP/Inc/arm_math.h ****   } arm_iir_lattice_instance_q15;
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 96


3826:DSP/Inc/arm_math.h **** 
3827:DSP/Inc/arm_math.h ****   /**
3828:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 IIR lattice filter.
3829:DSP/Inc/arm_math.h ****    */
3830:DSP/Inc/arm_math.h ****   typedef struct
3831:DSP/Inc/arm_math.h ****   {
3832:DSP/Inc/arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3833:DSP/Inc/arm_math.h ****     q31_t *pState;                       /**< points to the state variable array. The array is of l
3834:DSP/Inc/arm_math.h ****     q31_t *pkCoeffs;                     /**< points to the reflection coefficient array. The array
3835:DSP/Inc/arm_math.h ****     q31_t *pvCoeffs;                     /**< points to the ladder coefficient array. The array is 
3836:DSP/Inc/arm_math.h ****   } arm_iir_lattice_instance_q31;
3837:DSP/Inc/arm_math.h **** 
3838:DSP/Inc/arm_math.h ****   /**
3839:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point IIR lattice filter.
3840:DSP/Inc/arm_math.h ****    */
3841:DSP/Inc/arm_math.h ****   typedef struct
3842:DSP/Inc/arm_math.h ****   {
3843:DSP/Inc/arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3844:DSP/Inc/arm_math.h ****     float32_t *pState;                   /**< points to the state variable array. The array is of l
3845:DSP/Inc/arm_math.h ****     float32_t *pkCoeffs;                 /**< points to the reflection coefficient array. The array
3846:DSP/Inc/arm_math.h ****     float32_t *pvCoeffs;                 /**< points to the ladder coefficient array. The array is 
3847:DSP/Inc/arm_math.h ****   } arm_iir_lattice_instance_f32;
3848:DSP/Inc/arm_math.h **** 
3849:DSP/Inc/arm_math.h **** 
3850:DSP/Inc/arm_math.h ****   /**
3851:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point IIR lattice filter.
3852:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point IIR lattice structure.
3853:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3854:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3855:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3856:DSP/Inc/arm_math.h ****    */
3857:DSP/Inc/arm_math.h ****   void arm_iir_lattice_f32(
3858:DSP/Inc/arm_math.h ****   const arm_iir_lattice_instance_f32 * S,
3859:DSP/Inc/arm_math.h ****   float32_t * pSrc,
3860:DSP/Inc/arm_math.h ****   float32_t * pDst,
3861:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3862:DSP/Inc/arm_math.h **** 
3863:DSP/Inc/arm_math.h **** 
3864:DSP/Inc/arm_math.h ****   /**
3865:DSP/Inc/arm_math.h ****    * @brief Initialization function for the floating-point IIR lattice filter.
3866:DSP/Inc/arm_math.h ****    * @param[in] S          points to an instance of the floating-point IIR lattice structure.
3867:DSP/Inc/arm_math.h ****    * @param[in] numStages  number of stages in the filter.
3868:DSP/Inc/arm_math.h ****    * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length num
3869:DSP/Inc/arm_math.h ****    * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStag
3870:DSP/Inc/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize-
3871:DSP/Inc/arm_math.h ****    * @param[in] blockSize  number of samples to process.
3872:DSP/Inc/arm_math.h ****    */
3873:DSP/Inc/arm_math.h ****   void arm_iir_lattice_init_f32(
3874:DSP/Inc/arm_math.h ****   arm_iir_lattice_instance_f32 * S,
3875:DSP/Inc/arm_math.h ****   uint16_t numStages,
3876:DSP/Inc/arm_math.h ****   float32_t * pkCoeffs,
3877:DSP/Inc/arm_math.h ****   float32_t * pvCoeffs,
3878:DSP/Inc/arm_math.h ****   float32_t * pState,
3879:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3880:DSP/Inc/arm_math.h **** 
3881:DSP/Inc/arm_math.h **** 
3882:DSP/Inc/arm_math.h ****   /**
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 97


3883:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q31 IIR lattice filter.
3884:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 IIR lattice structure.
3885:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3886:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3887:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3888:DSP/Inc/arm_math.h ****    */
3889:DSP/Inc/arm_math.h ****   void arm_iir_lattice_q31(
3890:DSP/Inc/arm_math.h ****   const arm_iir_lattice_instance_q31 * S,
3891:DSP/Inc/arm_math.h ****   q31_t * pSrc,
3892:DSP/Inc/arm_math.h ****   q31_t * pDst,
3893:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3894:DSP/Inc/arm_math.h **** 
3895:DSP/Inc/arm_math.h **** 
3896:DSP/Inc/arm_math.h ****   /**
3897:DSP/Inc/arm_math.h ****    * @brief Initialization function for the Q31 IIR lattice filter.
3898:DSP/Inc/arm_math.h ****    * @param[in] S          points to an instance of the Q31 IIR lattice structure.
3899:DSP/Inc/arm_math.h ****    * @param[in] numStages  number of stages in the filter.
3900:DSP/Inc/arm_math.h ****    * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length num
3901:DSP/Inc/arm_math.h ****    * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStag
3902:DSP/Inc/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize.
3903:DSP/Inc/arm_math.h ****    * @param[in] blockSize  number of samples to process.
3904:DSP/Inc/arm_math.h ****    */
3905:DSP/Inc/arm_math.h ****   void arm_iir_lattice_init_q31(
3906:DSP/Inc/arm_math.h ****   arm_iir_lattice_instance_q31 * S,
3907:DSP/Inc/arm_math.h ****   uint16_t numStages,
3908:DSP/Inc/arm_math.h ****   q31_t * pkCoeffs,
3909:DSP/Inc/arm_math.h ****   q31_t * pvCoeffs,
3910:DSP/Inc/arm_math.h ****   q31_t * pState,
3911:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3912:DSP/Inc/arm_math.h **** 
3913:DSP/Inc/arm_math.h **** 
3914:DSP/Inc/arm_math.h ****   /**
3915:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q15 IIR lattice filter.
3916:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 IIR lattice structure.
3917:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3918:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3919:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3920:DSP/Inc/arm_math.h ****    */
3921:DSP/Inc/arm_math.h ****   void arm_iir_lattice_q15(
3922:DSP/Inc/arm_math.h ****   const arm_iir_lattice_instance_q15 * S,
3923:DSP/Inc/arm_math.h ****   q15_t * pSrc,
3924:DSP/Inc/arm_math.h ****   q15_t * pDst,
3925:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3926:DSP/Inc/arm_math.h **** 
3927:DSP/Inc/arm_math.h **** 
3928:DSP/Inc/arm_math.h **** /**
3929:DSP/Inc/arm_math.h ****  * @brief Initialization function for the Q15 IIR lattice filter.
3930:DSP/Inc/arm_math.h ****  * @param[in] S          points to an instance of the fixed-point Q15 IIR lattice structure.
3931:DSP/Inc/arm_math.h ****  * @param[in] numStages  number of stages in the filter.
3932:DSP/Inc/arm_math.h ****  * @param[in] pkCoeffs   points to reflection coefficient buffer.  The array is of length numStages
3933:DSP/Inc/arm_math.h ****  * @param[in] pvCoeffs   points to ladder coefficient buffer.  The array is of length numStages+1.
3934:DSP/Inc/arm_math.h ****  * @param[in] pState     points to state buffer.  The array is of length numStages+blockSize.
3935:DSP/Inc/arm_math.h ****  * @param[in] blockSize  number of samples to process per call.
3936:DSP/Inc/arm_math.h ****  */
3937:DSP/Inc/arm_math.h ****   void arm_iir_lattice_init_q15(
3938:DSP/Inc/arm_math.h ****   arm_iir_lattice_instance_q15 * S,
3939:DSP/Inc/arm_math.h ****   uint16_t numStages,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 98


3940:DSP/Inc/arm_math.h ****   q15_t * pkCoeffs,
3941:DSP/Inc/arm_math.h ****   q15_t * pvCoeffs,
3942:DSP/Inc/arm_math.h ****   q15_t * pState,
3943:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3944:DSP/Inc/arm_math.h **** 
3945:DSP/Inc/arm_math.h **** 
3946:DSP/Inc/arm_math.h ****   /**
3947:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point LMS filter.
3948:DSP/Inc/arm_math.h ****    */
3949:DSP/Inc/arm_math.h ****   typedef struct
3950:DSP/Inc/arm_math.h ****   {
3951:DSP/Inc/arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
3952:DSP/Inc/arm_math.h ****     float32_t *pState;   /**< points to the state variable array. The array is of length numTaps+bl
3953:DSP/Inc/arm_math.h ****     float32_t *pCoeffs;  /**< points to the coefficient array. The array is of length numTaps. */
3954:DSP/Inc/arm_math.h ****     float32_t mu;        /**< step size that controls filter coefficient updates. */
3955:DSP/Inc/arm_math.h ****   } arm_lms_instance_f32;
3956:DSP/Inc/arm_math.h **** 
3957:DSP/Inc/arm_math.h **** 
3958:DSP/Inc/arm_math.h ****   /**
3959:DSP/Inc/arm_math.h ****    * @brief Processing function for floating-point LMS filter.
3960:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point LMS filter structure.
3961:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3962:DSP/Inc/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
3963:DSP/Inc/arm_math.h ****    * @param[out] pOut       points to the block of output data.
3964:DSP/Inc/arm_math.h ****    * @param[out] pErr       points to the block of error data.
3965:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3966:DSP/Inc/arm_math.h ****    */
3967:DSP/Inc/arm_math.h ****   void arm_lms_f32(
3968:DSP/Inc/arm_math.h ****   const arm_lms_instance_f32 * S,
3969:DSP/Inc/arm_math.h ****   float32_t * pSrc,
3970:DSP/Inc/arm_math.h ****   float32_t * pRef,
3971:DSP/Inc/arm_math.h ****   float32_t * pOut,
3972:DSP/Inc/arm_math.h ****   float32_t * pErr,
3973:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3974:DSP/Inc/arm_math.h **** 
3975:DSP/Inc/arm_math.h **** 
3976:DSP/Inc/arm_math.h ****   /**
3977:DSP/Inc/arm_math.h ****    * @brief Initialization function for floating-point LMS filter.
3978:DSP/Inc/arm_math.h ****    * @param[in] S          points to an instance of the floating-point LMS filter structure.
3979:DSP/Inc/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
3980:DSP/Inc/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.
3981:DSP/Inc/arm_math.h ****    * @param[in] pState     points to state buffer.
3982:DSP/Inc/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
3983:DSP/Inc/arm_math.h ****    * @param[in] blockSize  number of samples to process.
3984:DSP/Inc/arm_math.h ****    */
3985:DSP/Inc/arm_math.h ****   void arm_lms_init_f32(
3986:DSP/Inc/arm_math.h ****   arm_lms_instance_f32 * S,
3987:DSP/Inc/arm_math.h ****   uint16_t numTaps,
3988:DSP/Inc/arm_math.h ****   float32_t * pCoeffs,
3989:DSP/Inc/arm_math.h ****   float32_t * pState,
3990:DSP/Inc/arm_math.h ****   float32_t mu,
3991:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3992:DSP/Inc/arm_math.h **** 
3993:DSP/Inc/arm_math.h **** 
3994:DSP/Inc/arm_math.h ****   /**
3995:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 LMS filter.
3996:DSP/Inc/arm_math.h ****    */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 99


3997:DSP/Inc/arm_math.h ****   typedef struct
3998:DSP/Inc/arm_math.h ****   {
3999:DSP/Inc/arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
4000:DSP/Inc/arm_math.h ****     q15_t *pState;       /**< points to the state variable array. The array is of length numTaps+bl
4001:DSP/Inc/arm_math.h ****     q15_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps. */
4002:DSP/Inc/arm_math.h ****     q15_t mu;            /**< step size that controls filter coefficient updates. */
4003:DSP/Inc/arm_math.h ****     uint32_t postShift;  /**< bit shift applied to coefficients. */
4004:DSP/Inc/arm_math.h ****   } arm_lms_instance_q15;
4005:DSP/Inc/arm_math.h **** 
4006:DSP/Inc/arm_math.h **** 
4007:DSP/Inc/arm_math.h ****   /**
4008:DSP/Inc/arm_math.h ****    * @brief Initialization function for the Q15 LMS filter.
4009:DSP/Inc/arm_math.h ****    * @param[in] S          points to an instance of the Q15 LMS filter structure.
4010:DSP/Inc/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4011:DSP/Inc/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.
4012:DSP/Inc/arm_math.h ****    * @param[in] pState     points to the state buffer.
4013:DSP/Inc/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4014:DSP/Inc/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4015:DSP/Inc/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4016:DSP/Inc/arm_math.h ****    */
4017:DSP/Inc/arm_math.h ****   void arm_lms_init_q15(
4018:DSP/Inc/arm_math.h ****   arm_lms_instance_q15 * S,
4019:DSP/Inc/arm_math.h ****   uint16_t numTaps,
4020:DSP/Inc/arm_math.h ****   q15_t * pCoeffs,
4021:DSP/Inc/arm_math.h ****   q15_t * pState,
4022:DSP/Inc/arm_math.h ****   q15_t mu,
4023:DSP/Inc/arm_math.h ****   uint32_t blockSize,
4024:DSP/Inc/arm_math.h ****   uint32_t postShift);
4025:DSP/Inc/arm_math.h **** 
4026:DSP/Inc/arm_math.h **** 
4027:DSP/Inc/arm_math.h ****   /**
4028:DSP/Inc/arm_math.h ****    * @brief Processing function for Q15 LMS filter.
4029:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 LMS filter structure.
4030:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4031:DSP/Inc/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4032:DSP/Inc/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4033:DSP/Inc/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4034:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4035:DSP/Inc/arm_math.h ****    */
4036:DSP/Inc/arm_math.h ****   void arm_lms_q15(
4037:DSP/Inc/arm_math.h ****   const arm_lms_instance_q15 * S,
4038:DSP/Inc/arm_math.h ****   q15_t * pSrc,
4039:DSP/Inc/arm_math.h ****   q15_t * pRef,
4040:DSP/Inc/arm_math.h ****   q15_t * pOut,
4041:DSP/Inc/arm_math.h ****   q15_t * pErr,
4042:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4043:DSP/Inc/arm_math.h **** 
4044:DSP/Inc/arm_math.h **** 
4045:DSP/Inc/arm_math.h ****   /**
4046:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 LMS filter.
4047:DSP/Inc/arm_math.h ****    */
4048:DSP/Inc/arm_math.h ****   typedef struct
4049:DSP/Inc/arm_math.h ****   {
4050:DSP/Inc/arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
4051:DSP/Inc/arm_math.h ****     q31_t *pState;       /**< points to the state variable array. The array is of length numTaps+bl
4052:DSP/Inc/arm_math.h ****     q31_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps. */
4053:DSP/Inc/arm_math.h ****     q31_t mu;            /**< step size that controls filter coefficient updates. */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 100


4054:DSP/Inc/arm_math.h ****     uint32_t postShift;  /**< bit shift applied to coefficients. */
4055:DSP/Inc/arm_math.h ****   } arm_lms_instance_q31;
4056:DSP/Inc/arm_math.h **** 
4057:DSP/Inc/arm_math.h **** 
4058:DSP/Inc/arm_math.h ****   /**
4059:DSP/Inc/arm_math.h ****    * @brief Processing function for Q31 LMS filter.
4060:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 LMS filter structure.
4061:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4062:DSP/Inc/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4063:DSP/Inc/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4064:DSP/Inc/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4065:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4066:DSP/Inc/arm_math.h ****    */
4067:DSP/Inc/arm_math.h ****   void arm_lms_q31(
4068:DSP/Inc/arm_math.h ****   const arm_lms_instance_q31 * S,
4069:DSP/Inc/arm_math.h ****   q31_t * pSrc,
4070:DSP/Inc/arm_math.h ****   q31_t * pRef,
4071:DSP/Inc/arm_math.h ****   q31_t * pOut,
4072:DSP/Inc/arm_math.h ****   q31_t * pErr,
4073:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4074:DSP/Inc/arm_math.h **** 
4075:DSP/Inc/arm_math.h **** 
4076:DSP/Inc/arm_math.h ****   /**
4077:DSP/Inc/arm_math.h ****    * @brief Initialization function for Q31 LMS filter.
4078:DSP/Inc/arm_math.h ****    * @param[in] S          points to an instance of the Q31 LMS filter structure.
4079:DSP/Inc/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4080:DSP/Inc/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4081:DSP/Inc/arm_math.h ****    * @param[in] pState     points to state buffer.
4082:DSP/Inc/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4083:DSP/Inc/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4084:DSP/Inc/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4085:DSP/Inc/arm_math.h ****    */
4086:DSP/Inc/arm_math.h ****   void arm_lms_init_q31(
4087:DSP/Inc/arm_math.h ****   arm_lms_instance_q31 * S,
4088:DSP/Inc/arm_math.h ****   uint16_t numTaps,
4089:DSP/Inc/arm_math.h ****   q31_t * pCoeffs,
4090:DSP/Inc/arm_math.h ****   q31_t * pState,
4091:DSP/Inc/arm_math.h ****   q31_t mu,
4092:DSP/Inc/arm_math.h ****   uint32_t blockSize,
4093:DSP/Inc/arm_math.h ****   uint32_t postShift);
4094:DSP/Inc/arm_math.h **** 
4095:DSP/Inc/arm_math.h **** 
4096:DSP/Inc/arm_math.h ****   /**
4097:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point normalized LMS filter.
4098:DSP/Inc/arm_math.h ****    */
4099:DSP/Inc/arm_math.h ****   typedef struct
4100:DSP/Inc/arm_math.h ****   {
4101:DSP/Inc/arm_math.h ****     uint16_t numTaps;     /**< number of coefficients in the filter. */
4102:DSP/Inc/arm_math.h ****     float32_t *pState;    /**< points to the state variable array. The array is of length numTaps+b
4103:DSP/Inc/arm_math.h ****     float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTaps. */
4104:DSP/Inc/arm_math.h ****     float32_t mu;         /**< step size that control filter coefficient updates. */
4105:DSP/Inc/arm_math.h ****     float32_t energy;     /**< saves previous frame energy. */
4106:DSP/Inc/arm_math.h ****     float32_t x0;         /**< saves previous input sample. */
4107:DSP/Inc/arm_math.h ****   } arm_lms_norm_instance_f32;
4108:DSP/Inc/arm_math.h **** 
4109:DSP/Inc/arm_math.h **** 
4110:DSP/Inc/arm_math.h ****   /**
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 101


4111:DSP/Inc/arm_math.h ****    * @brief Processing function for floating-point normalized LMS filter.
4112:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point normalized LMS filter struc
4113:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4114:DSP/Inc/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4115:DSP/Inc/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4116:DSP/Inc/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4117:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4118:DSP/Inc/arm_math.h ****    */
4119:DSP/Inc/arm_math.h ****   void arm_lms_norm_f32(
4120:DSP/Inc/arm_math.h ****   arm_lms_norm_instance_f32 * S,
4121:DSP/Inc/arm_math.h ****   float32_t * pSrc,
4122:DSP/Inc/arm_math.h ****   float32_t * pRef,
4123:DSP/Inc/arm_math.h ****   float32_t * pOut,
4124:DSP/Inc/arm_math.h ****   float32_t * pErr,
4125:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4126:DSP/Inc/arm_math.h **** 
4127:DSP/Inc/arm_math.h **** 
4128:DSP/Inc/arm_math.h ****   /**
4129:DSP/Inc/arm_math.h ****    * @brief Initialization function for floating-point normalized LMS filter.
4130:DSP/Inc/arm_math.h ****    * @param[in] S          points to an instance of the floating-point LMS filter structure.
4131:DSP/Inc/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4132:DSP/Inc/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4133:DSP/Inc/arm_math.h ****    * @param[in] pState     points to state buffer.
4134:DSP/Inc/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4135:DSP/Inc/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4136:DSP/Inc/arm_math.h ****    */
4137:DSP/Inc/arm_math.h ****   void arm_lms_norm_init_f32(
4138:DSP/Inc/arm_math.h ****   arm_lms_norm_instance_f32 * S,
4139:DSP/Inc/arm_math.h ****   uint16_t numTaps,
4140:DSP/Inc/arm_math.h ****   float32_t * pCoeffs,
4141:DSP/Inc/arm_math.h ****   float32_t * pState,
4142:DSP/Inc/arm_math.h ****   float32_t mu,
4143:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4144:DSP/Inc/arm_math.h **** 
4145:DSP/Inc/arm_math.h **** 
4146:DSP/Inc/arm_math.h ****   /**
4147:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 normalized LMS filter.
4148:DSP/Inc/arm_math.h ****    */
4149:DSP/Inc/arm_math.h ****   typedef struct
4150:DSP/Inc/arm_math.h ****   {
4151:DSP/Inc/arm_math.h ****     uint16_t numTaps;     /**< number of coefficients in the filter. */
4152:DSP/Inc/arm_math.h ****     q31_t *pState;        /**< points to the state variable array. The array is of length numTaps+b
4153:DSP/Inc/arm_math.h ****     q31_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTaps. */
4154:DSP/Inc/arm_math.h ****     q31_t mu;             /**< step size that controls filter coefficient updates. */
4155:DSP/Inc/arm_math.h ****     uint8_t postShift;    /**< bit shift applied to coefficients. */
4156:DSP/Inc/arm_math.h ****     q31_t *recipTable;    /**< points to the reciprocal initial value table. */
4157:DSP/Inc/arm_math.h ****     q31_t energy;         /**< saves previous frame energy. */
4158:DSP/Inc/arm_math.h ****     q31_t x0;             /**< saves previous input sample. */
4159:DSP/Inc/arm_math.h ****   } arm_lms_norm_instance_q31;
4160:DSP/Inc/arm_math.h **** 
4161:DSP/Inc/arm_math.h **** 
4162:DSP/Inc/arm_math.h ****   /**
4163:DSP/Inc/arm_math.h ****    * @brief Processing function for Q31 normalized LMS filter.
4164:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 normalized LMS filter structure.
4165:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4166:DSP/Inc/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4167:DSP/Inc/arm_math.h ****    * @param[out] pOut       points to the block of output data.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 102


4168:DSP/Inc/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4169:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4170:DSP/Inc/arm_math.h ****    */
4171:DSP/Inc/arm_math.h ****   void arm_lms_norm_q31(
4172:DSP/Inc/arm_math.h ****   arm_lms_norm_instance_q31 * S,
4173:DSP/Inc/arm_math.h ****   q31_t * pSrc,
4174:DSP/Inc/arm_math.h ****   q31_t * pRef,
4175:DSP/Inc/arm_math.h ****   q31_t * pOut,
4176:DSP/Inc/arm_math.h ****   q31_t * pErr,
4177:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4178:DSP/Inc/arm_math.h **** 
4179:DSP/Inc/arm_math.h **** 
4180:DSP/Inc/arm_math.h ****   /**
4181:DSP/Inc/arm_math.h ****    * @brief Initialization function for Q31 normalized LMS filter.
4182:DSP/Inc/arm_math.h ****    * @param[in] S          points to an instance of the Q31 normalized LMS filter structure.
4183:DSP/Inc/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4184:DSP/Inc/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4185:DSP/Inc/arm_math.h ****    * @param[in] pState     points to state buffer.
4186:DSP/Inc/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4187:DSP/Inc/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4188:DSP/Inc/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4189:DSP/Inc/arm_math.h ****    */
4190:DSP/Inc/arm_math.h ****   void arm_lms_norm_init_q31(
4191:DSP/Inc/arm_math.h ****   arm_lms_norm_instance_q31 * S,
4192:DSP/Inc/arm_math.h ****   uint16_t numTaps,
4193:DSP/Inc/arm_math.h ****   q31_t * pCoeffs,
4194:DSP/Inc/arm_math.h ****   q31_t * pState,
4195:DSP/Inc/arm_math.h ****   q31_t mu,
4196:DSP/Inc/arm_math.h ****   uint32_t blockSize,
4197:DSP/Inc/arm_math.h ****   uint8_t postShift);
4198:DSP/Inc/arm_math.h **** 
4199:DSP/Inc/arm_math.h **** 
4200:DSP/Inc/arm_math.h ****   /**
4201:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 normalized LMS filter.
4202:DSP/Inc/arm_math.h ****    */
4203:DSP/Inc/arm_math.h ****   typedef struct
4204:DSP/Inc/arm_math.h ****   {
4205:DSP/Inc/arm_math.h ****     uint16_t numTaps;     /**< Number of coefficients in the filter. */
4206:DSP/Inc/arm_math.h ****     q15_t *pState;        /**< points to the state variable array. The array is of length numTaps+b
4207:DSP/Inc/arm_math.h ****     q15_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTaps. */
4208:DSP/Inc/arm_math.h ****     q15_t mu;             /**< step size that controls filter coefficient updates. */
4209:DSP/Inc/arm_math.h ****     uint8_t postShift;    /**< bit shift applied to coefficients. */
4210:DSP/Inc/arm_math.h ****     q15_t *recipTable;    /**< Points to the reciprocal initial value table. */
4211:DSP/Inc/arm_math.h ****     q15_t energy;         /**< saves previous frame energy. */
4212:DSP/Inc/arm_math.h ****     q15_t x0;             /**< saves previous input sample. */
4213:DSP/Inc/arm_math.h ****   } arm_lms_norm_instance_q15;
4214:DSP/Inc/arm_math.h **** 
4215:DSP/Inc/arm_math.h **** 
4216:DSP/Inc/arm_math.h ****   /**
4217:DSP/Inc/arm_math.h ****    * @brief Processing function for Q15 normalized LMS filter.
4218:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 normalized LMS filter structure.
4219:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4220:DSP/Inc/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4221:DSP/Inc/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4222:DSP/Inc/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4223:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4224:DSP/Inc/arm_math.h ****    */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 103


4225:DSP/Inc/arm_math.h ****   void arm_lms_norm_q15(
4226:DSP/Inc/arm_math.h ****   arm_lms_norm_instance_q15 * S,
4227:DSP/Inc/arm_math.h ****   q15_t * pSrc,
4228:DSP/Inc/arm_math.h ****   q15_t * pRef,
4229:DSP/Inc/arm_math.h ****   q15_t * pOut,
4230:DSP/Inc/arm_math.h ****   q15_t * pErr,
4231:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4232:DSP/Inc/arm_math.h **** 
4233:DSP/Inc/arm_math.h **** 
4234:DSP/Inc/arm_math.h ****   /**
4235:DSP/Inc/arm_math.h ****    * @brief Initialization function for Q15 normalized LMS filter.
4236:DSP/Inc/arm_math.h ****    * @param[in] S          points to an instance of the Q15 normalized LMS filter structure.
4237:DSP/Inc/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4238:DSP/Inc/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4239:DSP/Inc/arm_math.h ****    * @param[in] pState     points to state buffer.
4240:DSP/Inc/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4241:DSP/Inc/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4242:DSP/Inc/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4243:DSP/Inc/arm_math.h ****    */
4244:DSP/Inc/arm_math.h ****   void arm_lms_norm_init_q15(
4245:DSP/Inc/arm_math.h ****   arm_lms_norm_instance_q15 * S,
4246:DSP/Inc/arm_math.h ****   uint16_t numTaps,
4247:DSP/Inc/arm_math.h ****   q15_t * pCoeffs,
4248:DSP/Inc/arm_math.h ****   q15_t * pState,
4249:DSP/Inc/arm_math.h ****   q15_t mu,
4250:DSP/Inc/arm_math.h ****   uint32_t blockSize,
4251:DSP/Inc/arm_math.h ****   uint8_t postShift);
4252:DSP/Inc/arm_math.h **** 
4253:DSP/Inc/arm_math.h **** 
4254:DSP/Inc/arm_math.h ****   /**
4255:DSP/Inc/arm_math.h ****    * @brief Correlation of floating-point sequences.
4256:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4257:DSP/Inc/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4258:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4259:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4260:DSP/Inc/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4261:DSP/Inc/arm_math.h ****    */
4262:DSP/Inc/arm_math.h ****   void arm_correlate_f32(
4263:DSP/Inc/arm_math.h ****   float32_t * pSrcA,
4264:DSP/Inc/arm_math.h ****   uint32_t srcALen,
4265:DSP/Inc/arm_math.h ****   float32_t * pSrcB,
4266:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
4267:DSP/Inc/arm_math.h ****   float32_t * pDst);
4268:DSP/Inc/arm_math.h **** 
4269:DSP/Inc/arm_math.h **** 
4270:DSP/Inc/arm_math.h ****    /**
4271:DSP/Inc/arm_math.h ****    * @brief Correlation of Q15 sequences
4272:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA     points to the first input sequence.
4273:DSP/Inc/arm_math.h ****    * @param[in]  srcALen   length of the first input sequence.
4274:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB     points to the second input sequence.
4275:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen   length of the second input sequence.
4276:DSP/Inc/arm_math.h ****    * @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1
4277:DSP/Inc/arm_math.h ****    * @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, 
4278:DSP/Inc/arm_math.h ****    */
4279:DSP/Inc/arm_math.h ****   void arm_correlate_opt_q15(
4280:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
4281:DSP/Inc/arm_math.h ****   uint32_t srcALen,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 104


4282:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
4283:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
4284:DSP/Inc/arm_math.h ****   q15_t * pDst,
4285:DSP/Inc/arm_math.h ****   q15_t * pScratch);
4286:DSP/Inc/arm_math.h **** 
4287:DSP/Inc/arm_math.h **** 
4288:DSP/Inc/arm_math.h ****   /**
4289:DSP/Inc/arm_math.h ****    * @brief Correlation of Q15 sequences.
4290:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4291:DSP/Inc/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4292:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4293:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4294:DSP/Inc/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4295:DSP/Inc/arm_math.h ****    */
4296:DSP/Inc/arm_math.h **** 
4297:DSP/Inc/arm_math.h ****   void arm_correlate_q15(
4298:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
4299:DSP/Inc/arm_math.h ****   uint32_t srcALen,
4300:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
4301:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
4302:DSP/Inc/arm_math.h ****   q15_t * pDst);
4303:DSP/Inc/arm_math.h **** 
4304:DSP/Inc/arm_math.h **** 
4305:DSP/Inc/arm_math.h ****   /**
4306:DSP/Inc/arm_math.h ****    * @brief Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
4307:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4308:DSP/Inc/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4309:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4310:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4311:DSP/Inc/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4312:DSP/Inc/arm_math.h ****    */
4313:DSP/Inc/arm_math.h **** 
4314:DSP/Inc/arm_math.h ****   void arm_correlate_fast_q15(
4315:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
4316:DSP/Inc/arm_math.h ****   uint32_t srcALen,
4317:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
4318:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
4319:DSP/Inc/arm_math.h ****   q15_t * pDst);
4320:DSP/Inc/arm_math.h **** 
4321:DSP/Inc/arm_math.h **** 
4322:DSP/Inc/arm_math.h ****   /**
4323:DSP/Inc/arm_math.h ****    * @brief Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
4324:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA     points to the first input sequence.
4325:DSP/Inc/arm_math.h ****    * @param[in]  srcALen   length of the first input sequence.
4326:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB     points to the second input sequence.
4327:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen   length of the second input sequence.
4328:DSP/Inc/arm_math.h ****    * @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1
4329:DSP/Inc/arm_math.h ****    * @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, 
4330:DSP/Inc/arm_math.h ****    */
4331:DSP/Inc/arm_math.h ****   void arm_correlate_fast_opt_q15(
4332:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
4333:DSP/Inc/arm_math.h ****   uint32_t srcALen,
4334:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
4335:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
4336:DSP/Inc/arm_math.h ****   q15_t * pDst,
4337:DSP/Inc/arm_math.h ****   q15_t * pScratch);
4338:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 105


4339:DSP/Inc/arm_math.h **** 
4340:DSP/Inc/arm_math.h ****   /**
4341:DSP/Inc/arm_math.h ****    * @brief Correlation of Q31 sequences.
4342:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4343:DSP/Inc/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4344:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4345:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4346:DSP/Inc/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4347:DSP/Inc/arm_math.h ****    */
4348:DSP/Inc/arm_math.h ****   void arm_correlate_q31(
4349:DSP/Inc/arm_math.h ****   q31_t * pSrcA,
4350:DSP/Inc/arm_math.h ****   uint32_t srcALen,
4351:DSP/Inc/arm_math.h ****   q31_t * pSrcB,
4352:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
4353:DSP/Inc/arm_math.h ****   q31_t * pDst);
4354:DSP/Inc/arm_math.h **** 
4355:DSP/Inc/arm_math.h **** 
4356:DSP/Inc/arm_math.h ****   /**
4357:DSP/Inc/arm_math.h ****    * @brief Correlation of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
4358:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4359:DSP/Inc/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4360:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4361:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4362:DSP/Inc/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4363:DSP/Inc/arm_math.h ****    */
4364:DSP/Inc/arm_math.h ****   void arm_correlate_fast_q31(
4365:DSP/Inc/arm_math.h ****   q31_t * pSrcA,
4366:DSP/Inc/arm_math.h ****   uint32_t srcALen,
4367:DSP/Inc/arm_math.h ****   q31_t * pSrcB,
4368:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
4369:DSP/Inc/arm_math.h ****   q31_t * pDst);
4370:DSP/Inc/arm_math.h **** 
4371:DSP/Inc/arm_math.h **** 
4372:DSP/Inc/arm_math.h ****  /**
4373:DSP/Inc/arm_math.h ****    * @brief Correlation of Q7 sequences.
4374:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
4375:DSP/Inc/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
4376:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
4377:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
4378:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length 2 * max(srcALen, srcBLen) - 
4379:DSP/Inc/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
4380:DSP/Inc/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
4381:DSP/Inc/arm_math.h ****    */
4382:DSP/Inc/arm_math.h ****   void arm_correlate_opt_q7(
4383:DSP/Inc/arm_math.h ****   q7_t * pSrcA,
4384:DSP/Inc/arm_math.h ****   uint32_t srcALen,
4385:DSP/Inc/arm_math.h ****   q7_t * pSrcB,
4386:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
4387:DSP/Inc/arm_math.h ****   q7_t * pDst,
4388:DSP/Inc/arm_math.h ****   q15_t * pScratch1,
4389:DSP/Inc/arm_math.h ****   q15_t * pScratch2);
4390:DSP/Inc/arm_math.h **** 
4391:DSP/Inc/arm_math.h **** 
4392:DSP/Inc/arm_math.h ****   /**
4393:DSP/Inc/arm_math.h ****    * @brief Correlation of Q7 sequences.
4394:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4395:DSP/Inc/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 106


4396:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4397:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4398:DSP/Inc/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4399:DSP/Inc/arm_math.h ****    */
4400:DSP/Inc/arm_math.h ****   void arm_correlate_q7(
4401:DSP/Inc/arm_math.h ****   q7_t * pSrcA,
4402:DSP/Inc/arm_math.h ****   uint32_t srcALen,
4403:DSP/Inc/arm_math.h ****   q7_t * pSrcB,
4404:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
4405:DSP/Inc/arm_math.h ****   q7_t * pDst);
4406:DSP/Inc/arm_math.h **** 
4407:DSP/Inc/arm_math.h **** 
4408:DSP/Inc/arm_math.h ****   /**
4409:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point sparse FIR filter.
4410:DSP/Inc/arm_math.h ****    */
4411:DSP/Inc/arm_math.h ****   typedef struct
4412:DSP/Inc/arm_math.h ****   {
4413:DSP/Inc/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4414:DSP/Inc/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4415:DSP/Inc/arm_math.h ****     float32_t *pState;            /**< points to the state buffer array. The array is of length max
4416:DSP/Inc/arm_math.h ****     float32_t *pCoeffs;           /**< points to the coefficient array. The array is of length numT
4417:DSP/Inc/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4418:DSP/Inc/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4419:DSP/Inc/arm_math.h ****   } arm_fir_sparse_instance_f32;
4420:DSP/Inc/arm_math.h **** 
4421:DSP/Inc/arm_math.h ****   /**
4422:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 sparse FIR filter.
4423:DSP/Inc/arm_math.h ****    */
4424:DSP/Inc/arm_math.h ****   typedef struct
4425:DSP/Inc/arm_math.h ****   {
4426:DSP/Inc/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4427:DSP/Inc/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4428:DSP/Inc/arm_math.h ****     q31_t *pState;                /**< points to the state buffer array. The array is of length max
4429:DSP/Inc/arm_math.h ****     q31_t *pCoeffs;               /**< points to the coefficient array. The array is of length numT
4430:DSP/Inc/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4431:DSP/Inc/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4432:DSP/Inc/arm_math.h ****   } arm_fir_sparse_instance_q31;
4433:DSP/Inc/arm_math.h **** 
4434:DSP/Inc/arm_math.h ****   /**
4435:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 sparse FIR filter.
4436:DSP/Inc/arm_math.h ****    */
4437:DSP/Inc/arm_math.h ****   typedef struct
4438:DSP/Inc/arm_math.h ****   {
4439:DSP/Inc/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4440:DSP/Inc/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4441:DSP/Inc/arm_math.h ****     q15_t *pState;                /**< points to the state buffer array. The array is of length max
4442:DSP/Inc/arm_math.h ****     q15_t *pCoeffs;               /**< points to the coefficient array. The array is of length numT
4443:DSP/Inc/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4444:DSP/Inc/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4445:DSP/Inc/arm_math.h ****   } arm_fir_sparse_instance_q15;
4446:DSP/Inc/arm_math.h **** 
4447:DSP/Inc/arm_math.h ****   /**
4448:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q7 sparse FIR filter.
4449:DSP/Inc/arm_math.h ****    */
4450:DSP/Inc/arm_math.h ****   typedef struct
4451:DSP/Inc/arm_math.h ****   {
4452:DSP/Inc/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 107


4453:DSP/Inc/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4454:DSP/Inc/arm_math.h ****     q7_t *pState;                 /**< points to the state buffer array. The array is of length max
4455:DSP/Inc/arm_math.h ****     q7_t *pCoeffs;                /**< points to the coefficient array. The array is of length numT
4456:DSP/Inc/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4457:DSP/Inc/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4458:DSP/Inc/arm_math.h ****   } arm_fir_sparse_instance_q7;
4459:DSP/Inc/arm_math.h **** 
4460:DSP/Inc/arm_math.h **** 
4461:DSP/Inc/arm_math.h ****   /**
4462:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point sparse FIR filter.
4463:DSP/Inc/arm_math.h ****    * @param[in]  S           points to an instance of the floating-point sparse FIR structure.
4464:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the block of input data.
4465:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
4466:DSP/Inc/arm_math.h ****    * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
4467:DSP/Inc/arm_math.h ****    * @param[in]  blockSize   number of input samples to process per call.
4468:DSP/Inc/arm_math.h ****    */
4469:DSP/Inc/arm_math.h ****   void arm_fir_sparse_f32(
4470:DSP/Inc/arm_math.h ****   arm_fir_sparse_instance_f32 * S,
4471:DSP/Inc/arm_math.h ****   float32_t * pSrc,
4472:DSP/Inc/arm_math.h ****   float32_t * pDst,
4473:DSP/Inc/arm_math.h ****   float32_t * pScratchIn,
4474:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4475:DSP/Inc/arm_math.h **** 
4476:DSP/Inc/arm_math.h **** 
4477:DSP/Inc/arm_math.h ****   /**
4478:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the floating-point sparse FIR filter.
4479:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point sparse FIR structure.
4480:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4481:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4482:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4483:DSP/Inc/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4484:DSP/Inc/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4485:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4486:DSP/Inc/arm_math.h ****    */
4487:DSP/Inc/arm_math.h ****   void arm_fir_sparse_init_f32(
4488:DSP/Inc/arm_math.h ****   arm_fir_sparse_instance_f32 * S,
4489:DSP/Inc/arm_math.h ****   uint16_t numTaps,
4490:DSP/Inc/arm_math.h ****   float32_t * pCoeffs,
4491:DSP/Inc/arm_math.h ****   float32_t * pState,
4492:DSP/Inc/arm_math.h ****   int32_t * pTapDelay,
4493:DSP/Inc/arm_math.h ****   uint16_t maxDelay,
4494:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4495:DSP/Inc/arm_math.h **** 
4496:DSP/Inc/arm_math.h **** 
4497:DSP/Inc/arm_math.h ****   /**
4498:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q31 sparse FIR filter.
4499:DSP/Inc/arm_math.h ****    * @param[in]  S           points to an instance of the Q31 sparse FIR structure.
4500:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the block of input data.
4501:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
4502:DSP/Inc/arm_math.h ****    * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
4503:DSP/Inc/arm_math.h ****    * @param[in]  blockSize   number of input samples to process per call.
4504:DSP/Inc/arm_math.h ****    */
4505:DSP/Inc/arm_math.h ****   void arm_fir_sparse_q31(
4506:DSP/Inc/arm_math.h ****   arm_fir_sparse_instance_q31 * S,
4507:DSP/Inc/arm_math.h ****   q31_t * pSrc,
4508:DSP/Inc/arm_math.h ****   q31_t * pDst,
4509:DSP/Inc/arm_math.h ****   q31_t * pScratchIn,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 108


4510:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4511:DSP/Inc/arm_math.h **** 
4512:DSP/Inc/arm_math.h **** 
4513:DSP/Inc/arm_math.h ****   /**
4514:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q31 sparse FIR filter.
4515:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 sparse FIR structure.
4516:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4517:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4518:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4519:DSP/Inc/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4520:DSP/Inc/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4521:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4522:DSP/Inc/arm_math.h ****    */
4523:DSP/Inc/arm_math.h ****   void arm_fir_sparse_init_q31(
4524:DSP/Inc/arm_math.h ****   arm_fir_sparse_instance_q31 * S,
4525:DSP/Inc/arm_math.h ****   uint16_t numTaps,
4526:DSP/Inc/arm_math.h ****   q31_t * pCoeffs,
4527:DSP/Inc/arm_math.h ****   q31_t * pState,
4528:DSP/Inc/arm_math.h ****   int32_t * pTapDelay,
4529:DSP/Inc/arm_math.h ****   uint16_t maxDelay,
4530:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4531:DSP/Inc/arm_math.h **** 
4532:DSP/Inc/arm_math.h **** 
4533:DSP/Inc/arm_math.h ****   /**
4534:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q15 sparse FIR filter.
4535:DSP/Inc/arm_math.h ****    * @param[in]  S            points to an instance of the Q15 sparse FIR structure.
4536:DSP/Inc/arm_math.h ****    * @param[in]  pSrc         points to the block of input data.
4537:DSP/Inc/arm_math.h ****    * @param[out] pDst         points to the block of output data
4538:DSP/Inc/arm_math.h ****    * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
4539:DSP/Inc/arm_math.h ****    * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
4540:DSP/Inc/arm_math.h ****    * @param[in]  blockSize    number of input samples to process per call.
4541:DSP/Inc/arm_math.h ****    */
4542:DSP/Inc/arm_math.h ****   void arm_fir_sparse_q15(
4543:DSP/Inc/arm_math.h ****   arm_fir_sparse_instance_q15 * S,
4544:DSP/Inc/arm_math.h ****   q15_t * pSrc,
4545:DSP/Inc/arm_math.h ****   q15_t * pDst,
4546:DSP/Inc/arm_math.h ****   q15_t * pScratchIn,
4547:DSP/Inc/arm_math.h ****   q31_t * pScratchOut,
4548:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4549:DSP/Inc/arm_math.h **** 
4550:DSP/Inc/arm_math.h **** 
4551:DSP/Inc/arm_math.h ****   /**
4552:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q15 sparse FIR filter.
4553:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 sparse FIR structure.
4554:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4555:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4556:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4557:DSP/Inc/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4558:DSP/Inc/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4559:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4560:DSP/Inc/arm_math.h ****    */
4561:DSP/Inc/arm_math.h ****   void arm_fir_sparse_init_q15(
4562:DSP/Inc/arm_math.h ****   arm_fir_sparse_instance_q15 * S,
4563:DSP/Inc/arm_math.h ****   uint16_t numTaps,
4564:DSP/Inc/arm_math.h ****   q15_t * pCoeffs,
4565:DSP/Inc/arm_math.h ****   q15_t * pState,
4566:DSP/Inc/arm_math.h ****   int32_t * pTapDelay,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 109


4567:DSP/Inc/arm_math.h ****   uint16_t maxDelay,
4568:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4569:DSP/Inc/arm_math.h **** 
4570:DSP/Inc/arm_math.h **** 
4571:DSP/Inc/arm_math.h ****   /**
4572:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q7 sparse FIR filter.
4573:DSP/Inc/arm_math.h ****    * @param[in]  S            points to an instance of the Q7 sparse FIR structure.
4574:DSP/Inc/arm_math.h ****    * @param[in]  pSrc         points to the block of input data.
4575:DSP/Inc/arm_math.h ****    * @param[out] pDst         points to the block of output data
4576:DSP/Inc/arm_math.h ****    * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
4577:DSP/Inc/arm_math.h ****    * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
4578:DSP/Inc/arm_math.h ****    * @param[in]  blockSize    number of input samples to process per call.
4579:DSP/Inc/arm_math.h ****    */
4580:DSP/Inc/arm_math.h ****   void arm_fir_sparse_q7(
4581:DSP/Inc/arm_math.h ****   arm_fir_sparse_instance_q7 * S,
4582:DSP/Inc/arm_math.h ****   q7_t * pSrc,
4583:DSP/Inc/arm_math.h ****   q7_t * pDst,
4584:DSP/Inc/arm_math.h ****   q7_t * pScratchIn,
4585:DSP/Inc/arm_math.h ****   q31_t * pScratchOut,
4586:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4587:DSP/Inc/arm_math.h **** 
4588:DSP/Inc/arm_math.h **** 
4589:DSP/Inc/arm_math.h ****   /**
4590:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q7 sparse FIR filter.
4591:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q7 sparse FIR structure.
4592:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4593:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4594:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4595:DSP/Inc/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4596:DSP/Inc/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4597:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4598:DSP/Inc/arm_math.h ****    */
4599:DSP/Inc/arm_math.h ****   void arm_fir_sparse_init_q7(
4600:DSP/Inc/arm_math.h ****   arm_fir_sparse_instance_q7 * S,
4601:DSP/Inc/arm_math.h ****   uint16_t numTaps,
4602:DSP/Inc/arm_math.h ****   q7_t * pCoeffs,
4603:DSP/Inc/arm_math.h ****   q7_t * pState,
4604:DSP/Inc/arm_math.h ****   int32_t * pTapDelay,
4605:DSP/Inc/arm_math.h ****   uint16_t maxDelay,
4606:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4607:DSP/Inc/arm_math.h **** 
4608:DSP/Inc/arm_math.h **** 
4609:DSP/Inc/arm_math.h ****   /**
4610:DSP/Inc/arm_math.h ****    * @brief  Floating-point sin_cos function.
4611:DSP/Inc/arm_math.h ****    * @param[in]  theta   input value in degrees
4612:DSP/Inc/arm_math.h ****    * @param[out] pSinVal  points to the processed sine output.
4613:DSP/Inc/arm_math.h ****    * @param[out] pCosVal  points to the processed cos output.
4614:DSP/Inc/arm_math.h ****    */
4615:DSP/Inc/arm_math.h ****   void arm_sin_cos_f32(
4616:DSP/Inc/arm_math.h ****   float32_t theta,
4617:DSP/Inc/arm_math.h ****   float32_t * pSinVal,
4618:DSP/Inc/arm_math.h ****   float32_t * pCosVal);
4619:DSP/Inc/arm_math.h **** 
4620:DSP/Inc/arm_math.h **** 
4621:DSP/Inc/arm_math.h ****   /**
4622:DSP/Inc/arm_math.h ****    * @brief  Q31 sin_cos function.
4623:DSP/Inc/arm_math.h ****    * @param[in]  theta    scaled input value in degrees
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 110


4624:DSP/Inc/arm_math.h ****    * @param[out] pSinVal  points to the processed sine output.
4625:DSP/Inc/arm_math.h ****    * @param[out] pCosVal  points to the processed cosine output.
4626:DSP/Inc/arm_math.h ****    */
4627:DSP/Inc/arm_math.h ****   void arm_sin_cos_q31(
4628:DSP/Inc/arm_math.h ****   q31_t theta,
4629:DSP/Inc/arm_math.h ****   q31_t * pSinVal,
4630:DSP/Inc/arm_math.h ****   q31_t * pCosVal);
4631:DSP/Inc/arm_math.h **** 
4632:DSP/Inc/arm_math.h **** 
4633:DSP/Inc/arm_math.h ****   /**
4634:DSP/Inc/arm_math.h ****    * @brief  Floating-point complex conjugate.
4635:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4636:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the output vector
4637:DSP/Inc/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4638:DSP/Inc/arm_math.h ****    */
4639:DSP/Inc/arm_math.h ****   void arm_cmplx_conj_f32(
4640:DSP/Inc/arm_math.h ****   float32_t * pSrc,
4641:DSP/Inc/arm_math.h ****   float32_t * pDst,
4642:DSP/Inc/arm_math.h ****   uint32_t numSamples);
4643:DSP/Inc/arm_math.h **** 
4644:DSP/Inc/arm_math.h ****   /**
4645:DSP/Inc/arm_math.h ****    * @brief  Q31 complex conjugate.
4646:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4647:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the output vector
4648:DSP/Inc/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4649:DSP/Inc/arm_math.h ****    */
4650:DSP/Inc/arm_math.h ****   void arm_cmplx_conj_q31(
4651:DSP/Inc/arm_math.h ****   q31_t * pSrc,
4652:DSP/Inc/arm_math.h ****   q31_t * pDst,
4653:DSP/Inc/arm_math.h ****   uint32_t numSamples);
4654:DSP/Inc/arm_math.h **** 
4655:DSP/Inc/arm_math.h **** 
4656:DSP/Inc/arm_math.h ****   /**
4657:DSP/Inc/arm_math.h ****    * @brief  Q15 complex conjugate.
4658:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4659:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the output vector
4660:DSP/Inc/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4661:DSP/Inc/arm_math.h ****    */
4662:DSP/Inc/arm_math.h ****   void arm_cmplx_conj_q15(
4663:DSP/Inc/arm_math.h ****   q15_t * pSrc,
4664:DSP/Inc/arm_math.h ****   q15_t * pDst,
4665:DSP/Inc/arm_math.h ****   uint32_t numSamples);
4666:DSP/Inc/arm_math.h **** 
4667:DSP/Inc/arm_math.h **** 
4668:DSP/Inc/arm_math.h ****   /**
4669:DSP/Inc/arm_math.h ****    * @brief  Floating-point complex magnitude squared
4670:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4671:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the real output vector
4672:DSP/Inc/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4673:DSP/Inc/arm_math.h ****    */
4674:DSP/Inc/arm_math.h ****   void arm_cmplx_mag_squared_f32(
4675:DSP/Inc/arm_math.h ****   float32_t * pSrc,
4676:DSP/Inc/arm_math.h ****   float32_t * pDst,
4677:DSP/Inc/arm_math.h ****   uint32_t numSamples);
4678:DSP/Inc/arm_math.h **** 
4679:DSP/Inc/arm_math.h **** 
4680:DSP/Inc/arm_math.h ****   /**
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 111


4681:DSP/Inc/arm_math.h ****    * @brief  Q31 complex magnitude squared
4682:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4683:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the real output vector
4684:DSP/Inc/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4685:DSP/Inc/arm_math.h ****    */
4686:DSP/Inc/arm_math.h ****   void arm_cmplx_mag_squared_q31(
4687:DSP/Inc/arm_math.h ****   q31_t * pSrc,
4688:DSP/Inc/arm_math.h ****   q31_t * pDst,
4689:DSP/Inc/arm_math.h ****   uint32_t numSamples);
4690:DSP/Inc/arm_math.h **** 
4691:DSP/Inc/arm_math.h **** 
4692:DSP/Inc/arm_math.h ****   /**
4693:DSP/Inc/arm_math.h ****    * @brief  Q15 complex magnitude squared
4694:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4695:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the real output vector
4696:DSP/Inc/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4697:DSP/Inc/arm_math.h ****    */
4698:DSP/Inc/arm_math.h ****   void arm_cmplx_mag_squared_q15(
4699:DSP/Inc/arm_math.h ****   q15_t * pSrc,
4700:DSP/Inc/arm_math.h ****   q15_t * pDst,
4701:DSP/Inc/arm_math.h ****   uint32_t numSamples);
4702:DSP/Inc/arm_math.h **** 
4703:DSP/Inc/arm_math.h **** 
4704:DSP/Inc/arm_math.h ****  /**
4705:DSP/Inc/arm_math.h ****    * @ingroup groupController
4706:DSP/Inc/arm_math.h ****    */
4707:DSP/Inc/arm_math.h **** 
4708:DSP/Inc/arm_math.h ****   /**
4709:DSP/Inc/arm_math.h ****    * @defgroup PID PID Motor Control
4710:DSP/Inc/arm_math.h ****    *
4711:DSP/Inc/arm_math.h ****    * A Proportional Integral Derivative (PID) controller is a generic feedback control
4712:DSP/Inc/arm_math.h ****    * loop mechanism widely used in industrial control systems.
4713:DSP/Inc/arm_math.h ****    * A PID controller is the most commonly used type of feedback controller.
4714:DSP/Inc/arm_math.h ****    *
4715:DSP/Inc/arm_math.h ****    * This set of functions implements (PID) controllers
4716:DSP/Inc/arm_math.h ****    * for Q15, Q31, and floating-point data types.  The functions operate on a single sample
4717:DSP/Inc/arm_math.h ****    * of data and each call to the function returns a single processed value.
4718:DSP/Inc/arm_math.h ****    * <code>S</code> points to an instance of the PID control data structure.  <code>in</code>
4719:DSP/Inc/arm_math.h ****    * is the input sample value. The functions return the output value.
4720:DSP/Inc/arm_math.h ****    *
4721:DSP/Inc/arm_math.h ****    * \par Algorithm:
4722:DSP/Inc/arm_math.h ****    * <pre>
4723:DSP/Inc/arm_math.h ****    *    y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]
4724:DSP/Inc/arm_math.h ****    *    A0 = Kp + Ki + Kd
4725:DSP/Inc/arm_math.h ****    *    A1 = (-Kp ) - (2 * Kd )
4726:DSP/Inc/arm_math.h ****    *    A2 = Kd  </pre>
4727:DSP/Inc/arm_math.h ****    *
4728:DSP/Inc/arm_math.h ****    * \par
4729:DSP/Inc/arm_math.h ****    * where \c Kp is proportional constant, \c Ki is Integral constant and \c Kd is Derivative const
4730:DSP/Inc/arm_math.h ****    *
4731:DSP/Inc/arm_math.h ****    * \par
4732:DSP/Inc/arm_math.h ****    * \image html PID.gif "Proportional Integral Derivative Controller"
4733:DSP/Inc/arm_math.h ****    *
4734:DSP/Inc/arm_math.h ****    * \par
4735:DSP/Inc/arm_math.h ****    * The PID controller calculates an "error" value as the difference between
4736:DSP/Inc/arm_math.h ****    * the measured output and the reference input.
4737:DSP/Inc/arm_math.h ****    * The controller attempts to minimize the error by adjusting the process control inputs.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 112


4738:DSP/Inc/arm_math.h ****    * The proportional value determines the reaction to the current error,
4739:DSP/Inc/arm_math.h ****    * the integral value determines the reaction based on the sum of recent errors,
4740:DSP/Inc/arm_math.h ****    * and the derivative value determines the reaction based on the rate at which the error has been
4741:DSP/Inc/arm_math.h ****    *
4742:DSP/Inc/arm_math.h ****    * \par Instance Structure
4743:DSP/Inc/arm_math.h ****    * The Gains A0, A1, A2 and state variables for a PID controller are stored together in an instan
4744:DSP/Inc/arm_math.h ****    * A separate instance structure must be defined for each PID Controller.
4745:DSP/Inc/arm_math.h ****    * There are separate instance structure declarations for each of the 3 supported data types.
4746:DSP/Inc/arm_math.h ****    *
4747:DSP/Inc/arm_math.h ****    * \par Reset Functions
4748:DSP/Inc/arm_math.h ****    * There is also an associated reset function for each data type which clears the state array.
4749:DSP/Inc/arm_math.h ****    *
4750:DSP/Inc/arm_math.h ****    * \par Initialization Functions
4751:DSP/Inc/arm_math.h ****    * There is also an associated initialization function for each data type.
4752:DSP/Inc/arm_math.h ****    * The initialization function performs the following operations:
4753:DSP/Inc/arm_math.h ****    * - Initializes the Gains A0, A1, A2 from Kp,Ki, Kd gains.
4754:DSP/Inc/arm_math.h ****    * - Zeros out the values in the state buffer.
4755:DSP/Inc/arm_math.h ****    *
4756:DSP/Inc/arm_math.h ****    * \par
4757:DSP/Inc/arm_math.h ****    * Instance structure cannot be placed into a const data section and it is recommended to use the
4758:DSP/Inc/arm_math.h ****    *
4759:DSP/Inc/arm_math.h ****    * \par Fixed-Point Behavior
4760:DSP/Inc/arm_math.h ****    * Care must be taken when using the fixed-point versions of the PID Controller functions.
4761:DSP/Inc/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used in each function m
4762:DSP/Inc/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
4763:DSP/Inc/arm_math.h ****    */
4764:DSP/Inc/arm_math.h **** 
4765:DSP/Inc/arm_math.h ****   /**
4766:DSP/Inc/arm_math.h ****    * @addtogroup PID
4767:DSP/Inc/arm_math.h ****    * @{
4768:DSP/Inc/arm_math.h ****    */
4769:DSP/Inc/arm_math.h **** 
4770:DSP/Inc/arm_math.h ****   /**
4771:DSP/Inc/arm_math.h ****    * @brief  Process function for the floating-point PID Control.
4772:DSP/Inc/arm_math.h ****    * @param[in,out] S   is an instance of the floating-point PID Control structure
4773:DSP/Inc/arm_math.h ****    * @param[in]     in  input sample to process
4774:DSP/Inc/arm_math.h ****    * @return out processed output sample.
4775:DSP/Inc/arm_math.h ****    */
4776:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE float32_t arm_pid_f32(
 1406              		.loc 2 4776 42 view .LVU292
 1407              	.LBB13:
4777:DSP/Inc/arm_math.h ****   arm_pid_instance_f32 * S,
4778:DSP/Inc/arm_math.h ****   float32_t in)
4779:DSP/Inc/arm_math.h ****   {
4780:DSP/Inc/arm_math.h ****     float32_t out;
 1408              		.loc 2 4780 5 view .LVU293
4781:DSP/Inc/arm_math.h **** 
4782:DSP/Inc/arm_math.h ****     /* y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]  */
4783:DSP/Inc/arm_math.h ****     out = (S->A0 * in) +
 1409              		.loc 2 4783 5 view .LVU294
 1410              		.loc 2 4783 13 is_stmt 0 view .LVU295
 1411 00d0 A24B     		ldr	r3, .L65+68
 1412 00d2 D3ED007A 		vldr.32	s15, [r3]
 1413              		.loc 2 4783 18 view .LVU296
 1414 00d6 67EE277A 		vmul.f32	s15, s14, s15
4784:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 1415              		.loc 2 4784 9 view .LVU297
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 113


 1416 00da D3ED016A 		vldr.32	s13, [r3, #4]
 1417              		.loc 2 4784 24 view .LVU298
 1418 00de 93ED036A 		vldr.32	s12, [r3, #12]
 1419              		.loc 2 4784 14 view .LVU299
 1420 00e2 66EE866A 		vmul.f32	s13, s13, s12
4783:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 1421              		.loc 2 4783 24 view .LVU300
 1422 00e6 77EEA67A 		vadd.f32	s15, s15, s13
 1423              		.loc 2 4784 33 view .LVU301
 1424 00ea D3ED026A 		vldr.32	s13, [r3, #8]
 1425              		.loc 2 4784 48 view .LVU302
 1426 00ee D3ED045A 		vldr.32	s11, [r3, #16]
 1427              		.loc 2 4784 38 view .LVU303
 1428 00f2 66EEA56A 		vmul.f32	s13, s13, s11
 1429              		.loc 2 4784 29 view .LVU304
 1430 00f6 77EEA67A 		vadd.f32	s15, s15, s13
 1431              		.loc 2 4784 64 view .LVU305
 1432 00fa D3ED056A 		vldr.32	s13, [r3, #20]
4783:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 1433              		.loc 2 4783 9 view .LVU306
 1434 00fe 77EEA67A 		vadd.f32	s15, s15, s13
 1435              	.LVL114:
4785:DSP/Inc/arm_math.h **** 
4786:DSP/Inc/arm_math.h ****     /* Update state */
4787:DSP/Inc/arm_math.h ****     S->state[1] = S->state[0];
 1436              		.loc 2 4787 5 is_stmt 1 view .LVU307
 1437              		.loc 2 4787 17 is_stmt 0 view .LVU308
 1438 0102 83ED046A 		vstr.32	s12, [r3, #16]
4788:DSP/Inc/arm_math.h ****     S->state[0] = in;
 1439              		.loc 2 4788 5 is_stmt 1 view .LVU309
 1440              		.loc 2 4788 17 is_stmt 0 view .LVU310
 1441 0106 83ED037A 		vstr.32	s14, [r3, #12]
4789:DSP/Inc/arm_math.h ****     S->state[2] = out;
 1442              		.loc 2 4789 5 is_stmt 1 view .LVU311
 1443              		.loc 2 4789 17 is_stmt 0 view .LVU312
 1444 010a C3ED057A 		vstr.32	s15, [r3, #20]
4790:DSP/Inc/arm_math.h **** 
4791:DSP/Inc/arm_math.h ****     /* return to application */
4792:DSP/Inc/arm_math.h ****     return (out);
 1445              		.loc 2 4792 5 is_stmt 1 view .LVU313
 1446              	.LVL115:
 1447              		.loc 2 4792 5 is_stmt 0 view .LVU314
 1448              	.LBE13:
 1449              	.LBE12:
 1450              		.loc 1 196 28 discriminator 1 view .LVU315
 1451 010e 944B     		ldr	r3, .L65+72
 1452 0110 C3ED007A 		vstr.32	s15, [r3]
 197:CONTROL/Src/current.c ****         //过调制保护
 198:CONTROL/Src/current.c ****         if(current_pid_result*10>1372)TIM1->CCR1 = 1372;
 1453              		.loc 1 198 9 is_stmt 1 view .LVU316
 1454              		.loc 1 198 30 is_stmt 0 view .LVU317
 1455 0114 B2EE047A 		vmov.f32	s14, #1.0e+1
 1456 0118 67EE877A 		vmul.f32	s15, s15, s14
 1457              		.loc 1 198 11 view .LVU318
 1458 011c 9FED917A 		vldr.32	s14, .L65+76
 1459 0120 F4EEC77A 		vcmpe.f32	s15, s14
 1460 0124 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 114


 1461 0128 40F3E180 		ble	.L58
 1462              		.loc 1 198 39 is_stmt 1 discriminator 1 view .LVU319
 1463              		.loc 1 198 50 is_stmt 0 discriminator 1 view .LVU320
 1464 012c 8E4B     		ldr	r3, .L65+80
 1465 012e 40F25C52 		movw	r2, #1372
 1466 0132 5A63     		str	r2, [r3, #52]
 1467              	.L36:
 199:CONTROL/Src/current.c ****         else if(current_pid_result*10<28) TIM1->CCR1 = 1372;
 200:CONTROL/Src/current.c ****         else TIM1->CCR1 = current_pid_result*10;
 201:CONTROL/Src/current.c ****     }
 202:CONTROL/Src/current.c ****     else
 203:CONTROL/Src/current.c ****     {
 204:CONTROL/Src/current.c ****         //单片机2并网工作代码
 205:CONTROL/Src/current.c ****         SPLL_1PH_SOGI_run(&sineA, CHIPA_CURRENT);
 206:CONTROL/Src/current.c ****         angle_1 = (float32_t)(count_1);
 207:CONTROL/Src/current.c ****         angle_1 *= 0.01570795;
 208:CONTROL/Src/current.c ****         angle_1 += sineA.theta;
 209:CONTROL/Src/current.c ****         percentage = 1/(rato+1);
 210:CONTROL/Src/current.c ****         real_I_ref = percentage * I_ref;
 211:CONTROL/Src/current.c ****         I_target = arm_sin_f32(angle_1);
 212:CONTROL/Src/current.c ****         I_target = I_target * real_I_ref * 1.414;
 213:CONTROL/Src/current.c ****         I_error = I_target;
 214:CONTROL/Src/current.c ****         // OLED_ShowNum(0,0,I_error*100, 7,16);
 215:CONTROL/Src/current.c ****         // OLED_Refresh_Gram();
 216:CONTROL/Src/current.c ****         I_error -= OUTPUT_CURRENT;
 217:CONTROL/Src/current.c ****         current_pid_result = arm_pid_f32(&S_3,I_error);
 218:CONTROL/Src/current.c ****         //过调制保护
 219:CONTROL/Src/current.c ****         if(current_pid_result*10>1372)TIM1->CCR1 = 1372;
 220:CONTROL/Src/current.c ****         else if(current_pid_result*10<28) TIM1->CCR1 = 1372;
 221:CONTROL/Src/current.c ****         else TIM1->CCR1 = current_pid_result*10;       
 222:CONTROL/Src/current.c ****     }
 223:CONTROL/Src/current.c **** 
 224:CONTROL/Src/current.c ****     if(count_1==399) count_1 = 0;
 1468              		.loc 1 224 5 is_stmt 1 view .LVU321
 1469              		.loc 1 224 15 is_stmt 0 view .LVU322
 1470 0134 814B     		ldr	r3, .L65+36
 1471 0136 1B68     		ldr	r3, [r3]
 1472              		.loc 1 224 7 view .LVU323
 1473 0138 40F28F12 		movw	r2, #399
 1474 013c 9342     		cmp	r3, r2
 1475 013e 00F0B981 		beq	.L64
 225:CONTROL/Src/current.c ****     else count_1++;
 1476              		.loc 1 225 10 is_stmt 1 view .LVU324
 1477              		.loc 1 225 17 is_stmt 0 view .LVU325
 1478 0142 0133     		adds	r3, r3, #1
 1479 0144 7D4A     		ldr	r2, .L65+36
 1480 0146 1360     		str	r3, [r2]
 1481              	.L32:
 226:CONTROL/Src/current.c **** }
 1482              		.loc 1 226 1 view .LVU326
 1483 0148 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1484              	.L63:
 153:CONTROL/Src/current.c ****         SPLL_1PH_SOGI_run(&sineB, OUTPUT_VOTAGE);
 1485              		.loc 1 153 9 is_stmt 1 view .LVU327
 1486 014a 794D     		ldr	r5, .L65+24
 1487 014c 794F     		ldr	r7, .L65+28
 1488 014e 95ED020A 		vldr.32	s0, [r5, #8]
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 115


 1489 0152 3846     		mov	r0, r7
 1490 0154 FFF7FEFF 		bl	SPLL_1PH_SOGI_run
 1491              	.LVL116:
 154:CONTROL/Src/current.c ****         angle_1 = (float32_t)(count_1);
 1492              		.loc 1 154 9 view .LVU328
 1493 0158 774E     		ldr	r6, .L65+32
 1494 015a 844B     		ldr	r3, .L65+84
 1495 015c 93ED000A 		vldr.32	s0, [r3]
 1496 0160 3046     		mov	r0, r6
 1497 0162 FFF7FEFF 		bl	SPLL_1PH_SOGI_run
 1498              	.LVL117:
 155:CONTROL/Src/current.c ****         angle_1 *= 0.01570795;
 1499              		.loc 1 155 9 view .LVU329
 155:CONTROL/Src/current.c ****         angle_1 *= 0.01570795;
 1500              		.loc 1 155 19 is_stmt 0 view .LVU330
 1501 0166 754B     		ldr	r3, .L65+36
 1502 0168 D3ED007A 		vldr.32	s15, [r3]	@ int
 1503 016c F8EEE77A 		vcvt.f32.s32	s15, s15
 155:CONTROL/Src/current.c ****         angle_1 *= 0.01570795;
 1504              		.loc 1 155 17 view .LVU331
 1505 0170 734C     		ldr	r4, .L65+40
 1506 0172 C4ED007A 		vstr.32	s15, [r4]
 156:CONTROL/Src/current.c **** 
 1507              		.loc 1 156 9 is_stmt 1 view .LVU332
 156:CONTROL/Src/current.c **** 
 1508              		.loc 1 156 17 is_stmt 0 view .LVU333
 1509 0176 17EE900A 		vmov	r0, s15
 1510 017a FFF7FEFF 		bl	__aeabi_f2d
 1511              	.LVL118:
 1512 017e 66A3     		adr	r3, .L65
 1513 0180 D3E90023 		ldrd	r2, [r3]
 1514 0184 FFF7FEFF 		bl	__aeabi_dmul
 1515              	.LVL119:
 1516 0188 FFF7FEFF 		bl	__aeabi_d2f
 1517              	.LVL120:
 1518 018c 00EE100A 		vmov	s0, r0
 1519 0190 2060     		str	r0, [r4]	@ float
 160:CONTROL/Src/current.c ****         phase_pid_output = arm_pid_f32(&S_5, angle_error);
 1520              		.loc 1 160 9 is_stmt 1 view .LVU334
 160:CONTROL/Src/current.c ****         phase_pid_output = arm_pid_f32(&S_5, angle_error);
 1521              		.loc 1 160 28 is_stmt 0 view .LVU335
 1522 0192 97ED117A 		vldr.32	s14, [r7, #68]
 160:CONTROL/Src/current.c ****         phase_pid_output = arm_pid_f32(&S_5, angle_error);
 1523              		.loc 1 160 42 view .LVU336
 1524 0196 D6ED117A 		vldr.32	s15, [r6, #68]
 160:CONTROL/Src/current.c ****         phase_pid_output = arm_pid_f32(&S_5, angle_error);
 1525              		.loc 1 160 35 view .LVU337
 1526 019a 37EE677A 		vsub.f32	s14, s14, s15
 160:CONTROL/Src/current.c ****         phase_pid_output = arm_pid_f32(&S_5, angle_error);
 1527              		.loc 1 160 49 view .LVU338
 1528 019e 9FED746A 		vldr.32	s12, .L65+88
 1529 01a2 37EE067A 		vadd.f32	s14, s14, s12
 160:CONTROL/Src/current.c ****         phase_pid_output = arm_pid_f32(&S_5, angle_error);
 1530              		.loc 1 160 21 view .LVU339
 1531 01a6 734B     		ldr	r3, .L65+92
 1532 01a8 83ED007A 		vstr.32	s14, [r3]
 161:CONTROL/Src/current.c ****         phase_pid_output += A_phase_correction;
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 116


 1533              		.loc 1 161 9 is_stmt 1 view .LVU340
 1534              	.LVL121:
 1535              	.LBB14:
 1536              	.LBI14:
4776:DSP/Inc/arm_math.h ****   arm_pid_instance_f32 * S,
 1537              		.loc 2 4776 42 view .LVU341
 1538              	.LBB15:
4780:DSP/Inc/arm_math.h **** 
 1539              		.loc 2 4780 5 view .LVU342
4783:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 1540              		.loc 2 4783 5 view .LVU343
4783:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 1541              		.loc 2 4783 13 is_stmt 0 view .LVU344
 1542 01ac 724B     		ldr	r3, .L65+96
 1543 01ae D3ED007A 		vldr.32	s15, [r3]
4783:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 1544              		.loc 2 4783 18 view .LVU345
 1545 01b2 67EE277A 		vmul.f32	s15, s14, s15
4784:DSP/Inc/arm_math.h **** 
 1546              		.loc 2 4784 9 view .LVU346
 1547 01b6 D3ED016A 		vldr.32	s13, [r3, #4]
4784:DSP/Inc/arm_math.h **** 
 1548              		.loc 2 4784 24 view .LVU347
 1549 01ba D3ED035A 		vldr.32	s11, [r3, #12]
4784:DSP/Inc/arm_math.h **** 
 1550              		.loc 2 4784 14 view .LVU348
 1551 01be 66EEA56A 		vmul.f32	s13, s13, s11
4783:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 1552              		.loc 2 4783 24 view .LVU349
 1553 01c2 77EEA67A 		vadd.f32	s15, s15, s13
4784:DSP/Inc/arm_math.h **** 
 1554              		.loc 2 4784 33 view .LVU350
 1555 01c6 D3ED026A 		vldr.32	s13, [r3, #8]
4784:DSP/Inc/arm_math.h **** 
 1556              		.loc 2 4784 48 view .LVU351
 1557 01ca 93ED045A 		vldr.32	s10, [r3, #16]
4784:DSP/Inc/arm_math.h **** 
 1558              		.loc 2 4784 38 view .LVU352
 1559 01ce 66EE856A 		vmul.f32	s13, s13, s10
4784:DSP/Inc/arm_math.h **** 
 1560              		.loc 2 4784 29 view .LVU353
 1561 01d2 77EEA67A 		vadd.f32	s15, s15, s13
4784:DSP/Inc/arm_math.h **** 
 1562              		.loc 2 4784 64 view .LVU354
 1563 01d6 D3ED056A 		vldr.32	s13, [r3, #20]
4783:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 1564              		.loc 2 4783 9 view .LVU355
 1565 01da 77EEA67A 		vadd.f32	s15, s15, s13
 1566              	.LVL122:
4787:DSP/Inc/arm_math.h ****     S->state[0] = in;
 1567              		.loc 2 4787 5 is_stmt 1 view .LVU356
4787:DSP/Inc/arm_math.h ****     S->state[0] = in;
 1568              		.loc 2 4787 17 is_stmt 0 view .LVU357
 1569 01de C3ED045A 		vstr.32	s11, [r3, #16]
4788:DSP/Inc/arm_math.h ****     S->state[2] = out;
 1570              		.loc 2 4788 5 is_stmt 1 view .LVU358
4788:DSP/Inc/arm_math.h ****     S->state[2] = out;
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 117


 1571              		.loc 2 4788 17 is_stmt 0 view .LVU359
 1572 01e2 83ED037A 		vstr.32	s14, [r3, #12]
4789:DSP/Inc/arm_math.h **** 
 1573              		.loc 2 4789 5 is_stmt 1 view .LVU360
4789:DSP/Inc/arm_math.h **** 
 1574              		.loc 2 4789 17 is_stmt 0 view .LVU361
 1575 01e6 C3ED057A 		vstr.32	s15, [r3, #20]
 1576              		.loc 2 4792 5 is_stmt 1 view .LVU362
 1577              	.LVL123:
 1578              		.loc 2 4792 5 is_stmt 0 view .LVU363
 1579              	.LBE15:
 1580              	.LBE14:
 161:CONTROL/Src/current.c ****         phase_pid_output += A_phase_correction;
 1581              		.loc 1 161 26 discriminator 1 view .LVU364
 1582 01ea 644B     		ldr	r3, .L65+100
 1583 01ec C3ED007A 		vstr.32	s15, [r3]
 162:CONTROL/Src/current.c ****         angle_1 += phase_pid_output;
 1584              		.loc 1 162 9 is_stmt 1 view .LVU365
 162:CONTROL/Src/current.c ****         angle_1 += phase_pid_output;
 1585              		.loc 1 162 26 is_stmt 0 view .LVU366
 1586 01f0 77EE867A 		vadd.f32	s15, s15, s12
 1587 01f4 C3ED007A 		vstr.32	s15, [r3]
 163:CONTROL/Src/current.c **** 
 1588              		.loc 1 163 9 is_stmt 1 view .LVU367
 163:CONTROL/Src/current.c **** 
 1589              		.loc 1 163 17 is_stmt 0 view .LVU368
 1590 01f8 30EE270A 		vadd.f32	s0, s0, s15
 1591 01fc 84ED000A 		vstr.32	s0, [r4]
 165:CONTROL/Src/current.c ****         real_I_ref = percentage * I_ref;
 1592              		.loc 1 165 9 is_stmt 1 view .LVU369
 165:CONTROL/Src/current.c ****         real_I_ref = percentage * I_ref;
 1593              		.loc 1 165 26 is_stmt 0 view .LVU370
 1594 0200 504B     		ldr	r3, .L65+44
 1595 0202 D3ED006A 		vldr.32	s13, [r3]
 165:CONTROL/Src/current.c ****         real_I_ref = percentage * I_ref;
 1596              		.loc 1 165 32 view .LVU371
 1597 0206 B7EE007A 		vmov.f32	s14, #1.0e+0
 1598 020a 36EE877A 		vadd.f32	s14, s13, s14
 165:CONTROL/Src/current.c ****         real_I_ref = percentage * I_ref;
 1599              		.loc 1 165 26 view .LVU372
 1600 020e C6EE877A 		vdiv.f32	s15, s13, s14
 165:CONTROL/Src/current.c ****         real_I_ref = percentage * I_ref;
 1601              		.loc 1 165 20 view .LVU373
 1602 0212 4D4B     		ldr	r3, .L65+48
 1603 0214 C3ED007A 		vstr.32	s15, [r3]
 166:CONTROL/Src/current.c ****         I_target = arm_sin_f32(angle_1);
 1604              		.loc 1 166 9 is_stmt 1 view .LVU374
 166:CONTROL/Src/current.c ****         I_target = arm_sin_f32(angle_1);
 1605              		.loc 1 166 33 is_stmt 0 view .LVU375
 1606 0218 4D4B     		ldr	r3, .L65+56
 1607 021a 93ED007A 		vldr.32	s14, [r3]
 1608 021e 67EE877A 		vmul.f32	s15, s15, s14
 166:CONTROL/Src/current.c ****         I_target = arm_sin_f32(angle_1);
 1609              		.loc 1 166 20 view .LVU376
 1610 0222 4A4E     		ldr	r6, .L65+52
 1611 0224 C6ED007A 		vstr.32	s15, [r6]
 167:CONTROL/Src/current.c ****         I_target = I_target * real_I_ref * 1.414;
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 118


 1612              		.loc 1 167 9 is_stmt 1 view .LVU377
 167:CONTROL/Src/current.c ****         I_target = I_target * real_I_ref * 1.414;
 1613              		.loc 1 167 20 is_stmt 0 view .LVU378
 1614 0228 FFF7FEFF 		bl	arm_sin_f32
 1615              	.LVL124:
 167:CONTROL/Src/current.c ****         I_target = I_target * real_I_ref * 1.414;
 1616              		.loc 1 167 18 discriminator 1 view .LVU379
 1617 022c 494C     		ldr	r4, .L65+60
 1618 022e 84ED000A 		vstr.32	s0, [r4]
 168:CONTROL/Src/current.c ****         I_error = I_target;
 1619              		.loc 1 168 9 is_stmt 1 view .LVU380
 168:CONTROL/Src/current.c ****         I_error = I_target;
 1620              		.loc 1 168 29 is_stmt 0 view .LVU381
 1621 0232 D6ED007A 		vldr.32	s15, [r6]
 1622 0236 60EE277A 		vmul.f32	s15, s0, s15
 1623 023a 17EE900A 		vmov	r0, s15
 1624 023e FFF7FEFF 		bl	__aeabi_f2d
 1625              	.LVL125:
 168:CONTROL/Src/current.c ****         I_error = I_target;
 1626              		.loc 1 168 42 view .LVU382
 1627 0242 37A3     		adr	r3, .L65+8
 1628 0244 D3E90023 		ldrd	r2, [r3]
 1629 0248 FFF7FEFF 		bl	__aeabi_dmul
 1630              	.LVL126:
 1631 024c FFF7FEFF 		bl	__aeabi_d2f
 1632              	.LVL127:
 1633 0250 07EE100A 		vmov	s14, r0
 168:CONTROL/Src/current.c ****         I_error = I_target;
 1634              		.loc 1 168 18 view .LVU383
 1635 0254 2060     		str	r0, [r4]	@ float
 169:CONTROL/Src/current.c ****         // OLED_ShowNum(0,0,I_error*100, 7,16);
 1636              		.loc 1 169 9 is_stmt 1 view .LVU384
 169:CONTROL/Src/current.c ****         // OLED_ShowNum(0,0,I_error*100, 7,16);
 1637              		.loc 1 169 17 is_stmt 0 view .LVU385
 1638 0256 404B     		ldr	r3, .L65+64
 1639 0258 1860     		str	r0, [r3]	@ float
 172:CONTROL/Src/current.c ****         current_pid_result = arm_pid_f32(&S_3,I_error);
 1640              		.loc 1 172 9 is_stmt 1 view .LVU386
 172:CONTROL/Src/current.c ****         current_pid_result = arm_pid_f32(&S_3,I_error);
 1641              		.loc 1 172 20 is_stmt 0 view .LVU387
 1642 025a D5ED007A 		vldr.32	s15, [r5]
 172:CONTROL/Src/current.c ****         current_pid_result = arm_pid_f32(&S_3,I_error);
 1643              		.loc 1 172 17 view .LVU388
 1644 025e 37EE677A 		vsub.f32	s14, s14, s15
 1645 0262 83ED007A 		vstr.32	s14, [r3]
 173:CONTROL/Src/current.c ****         //过调制保护
 1646              		.loc 1 173 9 is_stmt 1 view .LVU389
 1647              	.LVL128:
 1648              	.LBB16:
 1649              	.LBI16:
4776:DSP/Inc/arm_math.h ****   arm_pid_instance_f32 * S,
 1650              		.loc 2 4776 42 view .LVU390
 1651              	.LBB17:
4780:DSP/Inc/arm_math.h **** 
 1652              		.loc 2 4780 5 view .LVU391
4783:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 1653              		.loc 2 4783 5 view .LVU392
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 119


4783:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 1654              		.loc 2 4783 13 is_stmt 0 view .LVU393
 1655 0266 3D4B     		ldr	r3, .L65+68
 1656 0268 D3ED007A 		vldr.32	s15, [r3]
4783:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 1657              		.loc 2 4783 18 view .LVU394
 1658 026c 67EE277A 		vmul.f32	s15, s14, s15
4784:DSP/Inc/arm_math.h **** 
 1659              		.loc 2 4784 9 view .LVU395
 1660 0270 D3ED016A 		vldr.32	s13, [r3, #4]
4784:DSP/Inc/arm_math.h **** 
 1661              		.loc 2 4784 24 view .LVU396
 1662 0274 93ED036A 		vldr.32	s12, [r3, #12]
4784:DSP/Inc/arm_math.h **** 
 1663              		.loc 2 4784 14 view .LVU397
 1664 0278 66EE866A 		vmul.f32	s13, s13, s12
4783:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 1665              		.loc 2 4783 24 view .LVU398
 1666 027c 77EEA67A 		vadd.f32	s15, s15, s13
4784:DSP/Inc/arm_math.h **** 
 1667              		.loc 2 4784 33 view .LVU399
 1668 0280 D3ED026A 		vldr.32	s13, [r3, #8]
4784:DSP/Inc/arm_math.h **** 
 1669              		.loc 2 4784 48 view .LVU400
 1670 0284 D3ED045A 		vldr.32	s11, [r3, #16]
4784:DSP/Inc/arm_math.h **** 
 1671              		.loc 2 4784 38 view .LVU401
 1672 0288 66EEA56A 		vmul.f32	s13, s13, s11
4784:DSP/Inc/arm_math.h **** 
 1673              		.loc 2 4784 29 view .LVU402
 1674 028c 77EEA67A 		vadd.f32	s15, s15, s13
4784:DSP/Inc/arm_math.h **** 
 1675              		.loc 2 4784 64 view .LVU403
 1676 0290 D3ED056A 		vldr.32	s13, [r3, #20]
4783:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 1677              		.loc 2 4783 9 view .LVU404
 1678 0294 77EEA67A 		vadd.f32	s15, s15, s13
 1679              	.LVL129:
4787:DSP/Inc/arm_math.h ****     S->state[0] = in;
 1680              		.loc 2 4787 5 is_stmt 1 view .LVU405
4787:DSP/Inc/arm_math.h ****     S->state[0] = in;
 1681              		.loc 2 4787 17 is_stmt 0 view .LVU406
 1682 0298 83ED046A 		vstr.32	s12, [r3, #16]
4788:DSP/Inc/arm_math.h ****     S->state[2] = out;
 1683              		.loc 2 4788 5 is_stmt 1 view .LVU407
4788:DSP/Inc/arm_math.h ****     S->state[2] = out;
 1684              		.loc 2 4788 17 is_stmt 0 view .LVU408
 1685 029c 83ED037A 		vstr.32	s14, [r3, #12]
4789:DSP/Inc/arm_math.h **** 
 1686              		.loc 2 4789 5 is_stmt 1 view .LVU409
4789:DSP/Inc/arm_math.h **** 
 1687              		.loc 2 4789 17 is_stmt 0 view .LVU410
 1688 02a0 C3ED057A 		vstr.32	s15, [r3, #20]
 1689              		.loc 2 4792 5 is_stmt 1 view .LVU411
 1690              	.LVL130:
 1691              		.loc 2 4792 5 is_stmt 0 view .LVU412
 1692              	.LBE17:
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 120


 1693              	.LBE16:
 173:CONTROL/Src/current.c ****         //过调制保护
 1694              		.loc 1 173 28 discriminator 1 view .LVU413
 1695 02a4 2E4B     		ldr	r3, .L65+72
 1696 02a6 C3ED007A 		vstr.32	s15, [r3]
 175:CONTROL/Src/current.c ****         else if(current_pid_result*10<28) TIM1->CCR1 = 1372;
 1697              		.loc 1 175 9 is_stmt 1 view .LVU414
 175:CONTROL/Src/current.c ****         else if(current_pid_result*10<28) TIM1->CCR1 = 1372;
 1698              		.loc 1 175 30 is_stmt 0 view .LVU415
 1699 02aa B2EE047A 		vmov.f32	s14, #1.0e+1
 1700 02ae 67EE877A 		vmul.f32	s15, s15, s14
 175:CONTROL/Src/current.c ****         else if(current_pid_result*10<28) TIM1->CCR1 = 1372;
 1701              		.loc 1 175 11 view .LVU416
 1702 02b2 9FED2C7A 		vldr.32	s14, .L65+76
 1703 02b6 F4EEC77A 		vcmpe.f32	s15, s14
 1704 02ba F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1705 02be 04DD     		ble	.L56
 175:CONTROL/Src/current.c ****         else if(current_pid_result*10<28) TIM1->CCR1 = 1372;
 1706              		.loc 1 175 39 is_stmt 1 discriminator 1 view .LVU417
 175:CONTROL/Src/current.c ****         else if(current_pid_result*10<28) TIM1->CCR1 = 1372;
 1707              		.loc 1 175 50 is_stmt 0 discriminator 1 view .LVU418
 1708 02c0 294B     		ldr	r3, .L65+80
 1709 02c2 40F25C52 		movw	r2, #1372
 1710 02c6 5A63     		str	r2, [r3, #52]
 1711 02c8 34E7     		b	.L36
 1712              	.L56:
 176:CONTROL/Src/current.c ****         else TIM1->CCR1 = current_pid_result*10;        
 1713              		.loc 1 176 14 is_stmt 1 view .LVU419
 176:CONTROL/Src/current.c ****         else TIM1->CCR1 = current_pid_result*10;        
 1714              		.loc 1 176 16 is_stmt 0 view .LVU420
 1715 02ca B3EE0C7A 		vmov.f32	s14, #2.8e+1
 1716 02ce F4EEC77A 		vcmpe.f32	s15, s14
 1717 02d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1718 02d6 04D5     		bpl	.L57
 176:CONTROL/Src/current.c ****         else TIM1->CCR1 = current_pid_result*10;        
 1719              		.loc 1 176 43 is_stmt 1 discriminator 1 view .LVU421
 176:CONTROL/Src/current.c ****         else TIM1->CCR1 = current_pid_result*10;        
 1720              		.loc 1 176 54 is_stmt 0 discriminator 1 view .LVU422
 1721 02d8 234B     		ldr	r3, .L65+80
 1722 02da 40F25C52 		movw	r2, #1372
 1723 02de 5A63     		str	r2, [r3, #52]
 1724 02e0 28E7     		b	.L36
 1725              	.L57:
 177:CONTROL/Src/current.c ****     }
 1726              		.loc 1 177 14 is_stmt 1 view .LVU423
 177:CONTROL/Src/current.c ****     }
 1727              		.loc 1 177 25 is_stmt 0 view .LVU424
 1728 02e2 FCEEE77A 		vcvt.u32.f32	s15, s15
 1729 02e6 204B     		ldr	r3, .L65+80
 1730 02e8 C3ED0D7A 		vstr.32	s15, [r3, #52]	@ int
 1731 02ec 22E7     		b	.L36
 1732              	.L58:
 199:CONTROL/Src/current.c ****         else TIM1->CCR1 = current_pid_result*10;
 1733              		.loc 1 199 14 is_stmt 1 view .LVU425
 199:CONTROL/Src/current.c ****         else TIM1->CCR1 = current_pid_result*10;
 1734              		.loc 1 199 16 is_stmt 0 view .LVU426
 1735 02ee B3EE0C7A 		vmov.f32	s14, #2.8e+1
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 121


 1736 02f2 F4EEC77A 		vcmpe.f32	s15, s14
 1737 02f6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1738 02fa 04D5     		bpl	.L59
 199:CONTROL/Src/current.c ****         else TIM1->CCR1 = current_pid_result*10;
 1739              		.loc 1 199 43 is_stmt 1 discriminator 1 view .LVU427
 199:CONTROL/Src/current.c ****         else TIM1->CCR1 = current_pid_result*10;
 1740              		.loc 1 199 54 is_stmt 0 discriminator 1 view .LVU428
 1741 02fc 1A4B     		ldr	r3, .L65+80
 1742 02fe 40F25C52 		movw	r2, #1372
 1743 0302 5A63     		str	r2, [r3, #52]
 1744 0304 16E7     		b	.L36
 1745              	.L59:
 200:CONTROL/Src/current.c ****     }
 1746              		.loc 1 200 14 is_stmt 1 view .LVU429
 200:CONTROL/Src/current.c ****     }
 1747              		.loc 1 200 25 is_stmt 0 view .LVU430
 1748 0306 FCEEE77A 		vcvt.u32.f32	s15, s15
 1749 030a 174B     		ldr	r3, .L65+80
 1750 030c C3ED0D7A 		vstr.32	s15, [r3, #52]	@ int
 1751 0310 10E7     		b	.L36
 1752              	.L66:
 1753 0312 00BFAFF3 		.align	3
 1753      0080
 1754              	.L65:
 1755 0318 981826AE 		.word	-1373235048
 1756 031c BE15903F 		.word	1066407358
 1757 0320 39B4C876 		.word	1992864825
 1758 0324 BE9FF63F 		.word	1073127358
 1759 0328 00000000 		.word	chip_select
 1760 032c 00000000 		.word	chip_b_mode
 1761 0330 00000000 		.word	ADC3_Buf_f32
 1762 0334 00000000 		.word	sineA
 1763 0338 00000000 		.word	sineB
 1764 033c 00000000 		.word	count_1
 1765 0340 00000000 		.word	angle_1
 1766 0344 00000000 		.word	rato
 1767 0348 00000000 		.word	percentage
 1768 034c 00000000 		.word	real_I_ref
 1769 0350 00000000 		.word	I_ref
 1770 0354 00000000 		.word	I_target
 1771 0358 00000000 		.word	I_error
 1772 035c 00000000 		.word	S_3
 1773 0360 00000000 		.word	current_pid_result
 1774 0364 0080AB44 		.word	1152090112
 1775 0368 00000140 		.word	1073807360
 1776 036c 00000000 		.word	ADC1_Buf_f32
 1777 0370 00000000 		.word	0
 1778 0374 00000000 		.word	angle_error
 1779 0378 00000000 		.word	S_5
 1780 037c 00000000 		.word	phase_pid_output
 1781              	.L39:
 205:CONTROL/Src/current.c ****         angle_1 = (float32_t)(count_1);
 1782              		.loc 1 205 9 is_stmt 1 view .LVU431
 1783 0380 534D     		ldr	r5, .L67+16
 1784 0382 544E     		ldr	r6, .L67+20
 1785 0384 95ED020A 		vldr.32	s0, [r5, #8]
 1786 0388 3046     		mov	r0, r6
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 122


 1787 038a FFF7FEFF 		bl	SPLL_1PH_SOGI_run
 1788              	.LVL131:
 206:CONTROL/Src/current.c ****         angle_1 *= 0.01570795;
 1789              		.loc 1 206 9 view .LVU432
 206:CONTROL/Src/current.c ****         angle_1 *= 0.01570795;
 1790              		.loc 1 206 19 is_stmt 0 view .LVU433
 1791 038e 524B     		ldr	r3, .L67+24
 1792 0390 D3ED007A 		vldr.32	s15, [r3]	@ int
 1793 0394 F8EEE77A 		vcvt.f32.s32	s15, s15
 206:CONTROL/Src/current.c ****         angle_1 *= 0.01570795;
 1794              		.loc 1 206 17 view .LVU434
 1795 0398 504C     		ldr	r4, .L67+28
 1796 039a C4ED007A 		vstr.32	s15, [r4]
 207:CONTROL/Src/current.c ****         angle_1 += sineA.theta;
 1797              		.loc 1 207 9 is_stmt 1 view .LVU435
 207:CONTROL/Src/current.c ****         angle_1 += sineA.theta;
 1798              		.loc 1 207 17 is_stmt 0 view .LVU436
 1799 039e 17EE900A 		vmov	r0, s15
 1800 03a2 FFF7FEFF 		bl	__aeabi_f2d
 1801              	.LVL132:
 1802 03a6 46A3     		adr	r3, .L67
 1803 03a8 D3E90023 		ldrd	r2, [r3]
 1804 03ac FFF7FEFF 		bl	__aeabi_dmul
 1805              	.LVL133:
 1806 03b0 FFF7FEFF 		bl	__aeabi_d2f
 1807              	.LVL134:
 1808 03b4 00EE100A 		vmov	s0, r0
 1809 03b8 2060     		str	r0, [r4]	@ float
 208:CONTROL/Src/current.c ****         percentage = 1/(rato+1);
 1810              		.loc 1 208 9 is_stmt 1 view .LVU437
 208:CONTROL/Src/current.c ****         percentage = 1/(rato+1);
 1811              		.loc 1 208 25 is_stmt 0 view .LVU438
 1812 03ba D6ED117A 		vldr.32	s15, [r6, #68]
 208:CONTROL/Src/current.c ****         percentage = 1/(rato+1);
 1813              		.loc 1 208 17 view .LVU439
 1814 03be 30EE270A 		vadd.f32	s0, s0, s15
 1815 03c2 84ED000A 		vstr.32	s0, [r4]
 209:CONTROL/Src/current.c ****         real_I_ref = percentage * I_ref;
 1816              		.loc 1 209 9 is_stmt 1 view .LVU440
 209:CONTROL/Src/current.c ****         real_I_ref = percentage * I_ref;
 1817              		.loc 1 209 29 is_stmt 0 view .LVU441
 1818 03c6 464B     		ldr	r3, .L67+32
 1819 03c8 93ED007A 		vldr.32	s14, [r3]
 1820 03cc F7EE006A 		vmov.f32	s13, #1.0e+0
 1821 03d0 37EE267A 		vadd.f32	s14, s14, s13
 209:CONTROL/Src/current.c ****         real_I_ref = percentage * I_ref;
 1822              		.loc 1 209 23 view .LVU442
 1823 03d4 C6EE877A 		vdiv.f32	s15, s13, s14
 209:CONTROL/Src/current.c ****         real_I_ref = percentage * I_ref;
 1824              		.loc 1 209 20 view .LVU443
 1825 03d8 424B     		ldr	r3, .L67+36
 1826 03da C3ED007A 		vstr.32	s15, [r3]
 210:CONTROL/Src/current.c ****         I_target = arm_sin_f32(angle_1);
 1827              		.loc 1 210 9 is_stmt 1 view .LVU444
 210:CONTROL/Src/current.c ****         I_target = arm_sin_f32(angle_1);
 1828              		.loc 1 210 33 is_stmt 0 view .LVU445
 1829 03de 424B     		ldr	r3, .L67+40
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 123


 1830 03e0 93ED007A 		vldr.32	s14, [r3]
 1831 03e4 67EE877A 		vmul.f32	s15, s15, s14
 210:CONTROL/Src/current.c ****         I_target = arm_sin_f32(angle_1);
 1832              		.loc 1 210 20 view .LVU446
 1833 03e8 404E     		ldr	r6, .L67+44
 1834 03ea C6ED007A 		vstr.32	s15, [r6]
 211:CONTROL/Src/current.c ****         I_target = I_target * real_I_ref * 1.414;
 1835              		.loc 1 211 9 is_stmt 1 view .LVU447
 211:CONTROL/Src/current.c ****         I_target = I_target * real_I_ref * 1.414;
 1836              		.loc 1 211 20 is_stmt 0 view .LVU448
 1837 03ee FFF7FEFF 		bl	arm_sin_f32
 1838              	.LVL135:
 211:CONTROL/Src/current.c ****         I_target = I_target * real_I_ref * 1.414;
 1839              		.loc 1 211 18 discriminator 1 view .LVU449
 1840 03f2 3F4C     		ldr	r4, .L67+48
 1841 03f4 84ED000A 		vstr.32	s0, [r4]
 212:CONTROL/Src/current.c ****         I_error = I_target;
 1842              		.loc 1 212 9 is_stmt 1 view .LVU450
 212:CONTROL/Src/current.c ****         I_error = I_target;
 1843              		.loc 1 212 29 is_stmt 0 view .LVU451
 1844 03f8 D6ED007A 		vldr.32	s15, [r6]
 1845 03fc 60EE277A 		vmul.f32	s15, s0, s15
 1846 0400 17EE900A 		vmov	r0, s15
 1847 0404 FFF7FEFF 		bl	__aeabi_f2d
 1848              	.LVL136:
 212:CONTROL/Src/current.c ****         I_error = I_target;
 1849              		.loc 1 212 42 view .LVU452
 1850 0408 2FA3     		adr	r3, .L67+8
 1851 040a D3E90023 		ldrd	r2, [r3]
 1852 040e FFF7FEFF 		bl	__aeabi_dmul
 1853              	.LVL137:
 1854 0412 FFF7FEFF 		bl	__aeabi_d2f
 1855              	.LVL138:
 1856 0416 07EE100A 		vmov	s14, r0
 212:CONTROL/Src/current.c ****         I_error = I_target;
 1857              		.loc 1 212 18 view .LVU453
 1858 041a 2060     		str	r0, [r4]	@ float
 213:CONTROL/Src/current.c ****         // OLED_ShowNum(0,0,I_error*100, 7,16);
 1859              		.loc 1 213 9 is_stmt 1 view .LVU454
 213:CONTROL/Src/current.c ****         // OLED_ShowNum(0,0,I_error*100, 7,16);
 1860              		.loc 1 213 17 is_stmt 0 view .LVU455
 1861 041c 354B     		ldr	r3, .L67+52
 1862 041e 1860     		str	r0, [r3]	@ float
 216:CONTROL/Src/current.c ****         current_pid_result = arm_pid_f32(&S_3,I_error);
 1863              		.loc 1 216 9 is_stmt 1 view .LVU456
 216:CONTROL/Src/current.c ****         current_pid_result = arm_pid_f32(&S_3,I_error);
 1864              		.loc 1 216 20 is_stmt 0 view .LVU457
 1865 0420 D5ED007A 		vldr.32	s15, [r5]
 216:CONTROL/Src/current.c ****         current_pid_result = arm_pid_f32(&S_3,I_error);
 1866              		.loc 1 216 17 view .LVU458
 1867 0424 37EE677A 		vsub.f32	s14, s14, s15
 1868 0428 83ED007A 		vstr.32	s14, [r3]
 217:CONTROL/Src/current.c ****         //过调制保护
 1869              		.loc 1 217 9 is_stmt 1 view .LVU459
 1870              	.LVL139:
 1871              	.LBB18:
 1872              	.LBI18:
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 124


4776:DSP/Inc/arm_math.h ****   arm_pid_instance_f32 * S,
 1873              		.loc 2 4776 42 view .LVU460
 1874              	.LBB19:
4780:DSP/Inc/arm_math.h **** 
 1875              		.loc 2 4780 5 view .LVU461
4783:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 1876              		.loc 2 4783 5 view .LVU462
4783:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 1877              		.loc 2 4783 13 is_stmt 0 view .LVU463
 1878 042c 324B     		ldr	r3, .L67+56
 1879 042e D3ED007A 		vldr.32	s15, [r3]
4783:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 1880              		.loc 2 4783 18 view .LVU464
 1881 0432 67EE277A 		vmul.f32	s15, s14, s15
4784:DSP/Inc/arm_math.h **** 
 1882              		.loc 2 4784 9 view .LVU465
 1883 0436 D3ED016A 		vldr.32	s13, [r3, #4]
4784:DSP/Inc/arm_math.h **** 
 1884              		.loc 2 4784 24 view .LVU466
 1885 043a 93ED036A 		vldr.32	s12, [r3, #12]
4784:DSP/Inc/arm_math.h **** 
 1886              		.loc 2 4784 14 view .LVU467
 1887 043e 66EE866A 		vmul.f32	s13, s13, s12
4783:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 1888              		.loc 2 4783 24 view .LVU468
 1889 0442 77EEA67A 		vadd.f32	s15, s15, s13
4784:DSP/Inc/arm_math.h **** 
 1890              		.loc 2 4784 33 view .LVU469
 1891 0446 D3ED026A 		vldr.32	s13, [r3, #8]
4784:DSP/Inc/arm_math.h **** 
 1892              		.loc 2 4784 48 view .LVU470
 1893 044a D3ED045A 		vldr.32	s11, [r3, #16]
4784:DSP/Inc/arm_math.h **** 
 1894              		.loc 2 4784 38 view .LVU471
 1895 044e 66EEA56A 		vmul.f32	s13, s13, s11
4784:DSP/Inc/arm_math.h **** 
 1896              		.loc 2 4784 29 view .LVU472
 1897 0452 77EEA67A 		vadd.f32	s15, s15, s13
4784:DSP/Inc/arm_math.h **** 
 1898              		.loc 2 4784 64 view .LVU473
 1899 0456 D3ED056A 		vldr.32	s13, [r3, #20]
4783:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 1900              		.loc 2 4783 9 view .LVU474
 1901 045a 77EEA67A 		vadd.f32	s15, s15, s13
 1902              	.LVL140:
4787:DSP/Inc/arm_math.h ****     S->state[0] = in;
 1903              		.loc 2 4787 5 is_stmt 1 view .LVU475
4787:DSP/Inc/arm_math.h ****     S->state[0] = in;
 1904              		.loc 2 4787 17 is_stmt 0 view .LVU476
 1905 045e 83ED046A 		vstr.32	s12, [r3, #16]
4788:DSP/Inc/arm_math.h ****     S->state[2] = out;
 1906              		.loc 2 4788 5 is_stmt 1 view .LVU477
4788:DSP/Inc/arm_math.h ****     S->state[2] = out;
 1907              		.loc 2 4788 17 is_stmt 0 view .LVU478
 1908 0462 83ED037A 		vstr.32	s14, [r3, #12]
4789:DSP/Inc/arm_math.h **** 
 1909              		.loc 2 4789 5 is_stmt 1 view .LVU479
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 125


4789:DSP/Inc/arm_math.h **** 
 1910              		.loc 2 4789 17 is_stmt 0 view .LVU480
 1911 0466 C3ED057A 		vstr.32	s15, [r3, #20]
 1912              		.loc 2 4792 5 is_stmt 1 view .LVU481
 1913              	.LVL141:
 1914              		.loc 2 4792 5 is_stmt 0 view .LVU482
 1915              	.LBE19:
 1916              	.LBE18:
 217:CONTROL/Src/current.c ****         //过调制保护
 1917              		.loc 1 217 28 discriminator 1 view .LVU483
 1918 046a 244B     		ldr	r3, .L67+60
 1919 046c C3ED007A 		vstr.32	s15, [r3]
 219:CONTROL/Src/current.c ****         else if(current_pid_result*10<28) TIM1->CCR1 = 1372;
 1920              		.loc 1 219 9 is_stmt 1 view .LVU484
 219:CONTROL/Src/current.c ****         else if(current_pid_result*10<28) TIM1->CCR1 = 1372;
 1921              		.loc 1 219 30 is_stmt 0 view .LVU485
 1922 0470 B2EE047A 		vmov.f32	s14, #1.0e+1
 1923 0474 67EE877A 		vmul.f32	s15, s15, s14
 219:CONTROL/Src/current.c ****         else if(current_pid_result*10<28) TIM1->CCR1 = 1372;
 1924              		.loc 1 219 11 view .LVU486
 1925 0478 9FED217A 		vldr.32	s14, .L67+64
 1926 047c F4EEC77A 		vcmpe.f32	s15, s14
 1927 0480 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1928 0484 04DD     		ble	.L60
 219:CONTROL/Src/current.c ****         else if(current_pid_result*10<28) TIM1->CCR1 = 1372;
 1929              		.loc 1 219 39 is_stmt 1 discriminator 1 view .LVU487
 219:CONTROL/Src/current.c ****         else if(current_pid_result*10<28) TIM1->CCR1 = 1372;
 1930              		.loc 1 219 50 is_stmt 0 discriminator 1 view .LVU488
 1931 0486 1F4B     		ldr	r3, .L67+68
 1932 0488 40F25C52 		movw	r2, #1372
 1933 048c 5A63     		str	r2, [r3, #52]
 1934 048e 51E6     		b	.L36
 1935              	.L60:
 220:CONTROL/Src/current.c ****         else TIM1->CCR1 = current_pid_result*10;       
 1936              		.loc 1 220 14 is_stmt 1 view .LVU489
 220:CONTROL/Src/current.c ****         else TIM1->CCR1 = current_pid_result*10;       
 1937              		.loc 1 220 16 is_stmt 0 view .LVU490
 1938 0490 B3EE0C7A 		vmov.f32	s14, #2.8e+1
 1939 0494 F4EEC77A 		vcmpe.f32	s15, s14
 1940 0498 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1941 049c 04D5     		bpl	.L61
 220:CONTROL/Src/current.c ****         else TIM1->CCR1 = current_pid_result*10;       
 1942              		.loc 1 220 43 is_stmt 1 discriminator 1 view .LVU491
 220:CONTROL/Src/current.c ****         else TIM1->CCR1 = current_pid_result*10;       
 1943              		.loc 1 220 54 is_stmt 0 discriminator 1 view .LVU492
 1944 049e 194B     		ldr	r3, .L67+68
 1945 04a0 40F25C52 		movw	r2, #1372
 1946 04a4 5A63     		str	r2, [r3, #52]
 1947 04a6 45E6     		b	.L36
 1948              	.L61:
 221:CONTROL/Src/current.c ****     }
 1949              		.loc 1 221 14 is_stmt 1 view .LVU493
 221:CONTROL/Src/current.c ****     }
 1950              		.loc 1 221 25 is_stmt 0 view .LVU494
 1951 04a8 FCEEE77A 		vcvt.u32.f32	s15, s15
 1952 04ac 154B     		ldr	r3, .L67+68
 1953 04ae C3ED0D7A 		vstr.32	s15, [r3, #52]	@ int
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 126


 1954 04b2 3FE6     		b	.L36
 1955              	.L64:
 224:CONTROL/Src/current.c ****     else count_1++;
 1956              		.loc 1 224 22 is_stmt 1 discriminator 1 view .LVU495
 224:CONTROL/Src/current.c ****     else count_1++;
 1957              		.loc 1 224 30 is_stmt 0 discriminator 1 view .LVU496
 1958 04b4 084B     		ldr	r3, .L67+24
 1959 04b6 0022     		movs	r2, #0
 1960 04b8 1A60     		str	r2, [r3]
 1961 04ba 45E6     		b	.L32
 1962              	.L68:
 1963 04bc AFF30080 		.align	3
 1964              	.L67:
 1965 04c0 981826AE 		.word	-1373235048
 1966 04c4 BE15903F 		.word	1066407358
 1967 04c8 39B4C876 		.word	1992864825
 1968 04cc BE9FF63F 		.word	1073127358
 1969 04d0 00000000 		.word	ADC3_Buf_f32
 1970 04d4 00000000 		.word	sineA
 1971 04d8 00000000 		.word	count_1
 1972 04dc 00000000 		.word	angle_1
 1973 04e0 00000000 		.word	rato
 1974 04e4 00000000 		.word	percentage
 1975 04e8 00000000 		.word	I_ref
 1976 04ec 00000000 		.word	real_I_ref
 1977 04f0 00000000 		.word	I_target
 1978 04f4 00000000 		.word	I_error
 1979 04f8 00000000 		.word	S_3
 1980 04fc 00000000 		.word	current_pid_result
 1981 0500 0080AB44 		.word	1152090112
 1982 0504 00000140 		.word	1073807360
 1983              		.cfi_endproc
 1984              	.LFE279:
 1986              		.section	.text.UPDATE_PHASE,"ax",%progbits
 1987              		.align	1
 1988              		.global	UPDATE_PHASE
 1989              		.syntax unified
 1990              		.thumb
 1991              		.thumb_func
 1993              	UPDATE_PHASE:
 1994              	.LFB280:
 227:CONTROL/Src/current.c **** 
 228:CONTROL/Src/current.c **** void UPDATE_PHASE(void)
 229:CONTROL/Src/current.c **** {
 1995              		.loc 1 229 1 is_stmt 1 view -0
 1996              		.cfi_startproc
 1997              		@ args = 0, pretend = 0, frame = 0
 1998              		@ frame_needed = 0, uses_anonymous_args = 0
 1999 0000 08B5     		push	{r3, lr}
 2000              	.LCFI17:
 2001              		.cfi_def_cfa_offset 8
 2002              		.cfi_offset 3, -8
 2003              		.cfi_offset 14, -4
 230:CONTROL/Src/current.c ****     SPLL_1PH_SOGI_run(&sineA, NETWORK_VOTAGE);
 2004              		.loc 1 230 5 view .LVU498
 2005 0002 034B     		ldr	r3, .L71
 2006 0004 93ED020A 		vldr.32	s0, [r3, #8]
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 127


 2007 0008 0248     		ldr	r0, .L71+4
 2008 000a FFF7FEFF 		bl	SPLL_1PH_SOGI_run
 2009              	.LVL142:
 231:CONTROL/Src/current.c **** }...
 2010              		.loc 1 231 1 is_stmt 0 view .LVU499
 2011 000e 08BD     		pop	{r3, pc}
 2012              	.L72:
 2013              		.align	2
 2014              	.L71:
 2015 0010 00000000 		.word	ADC3_Buf_f32
 2016 0014 00000000 		.word	sineA
 2017              		.cfi_endproc
 2018              	.LFE280:
 2020              		.global	phase_pid_output
 2021              		.section	.bss.phase_pid_output,"aw",%nobits
 2022              		.align	2
 2025              	phase_pid_output:
 2026 0000 00000000 		.space	4
 2027              		.global	angle_error
 2028              		.section	.bss.angle_error,"aw",%nobits
 2029              		.align	2
 2032              	angle_error:
 2033 0000 00000000 		.space	4
 2034              		.global	sineB
 2035              		.section	.bss.sineB,"aw",%nobits
 2036              		.align	2
 2039              	sineB:
 2040 0000 00000000 		.space	132
 2040      00000000 
 2040      00000000 
 2040      00000000 
 2040      00000000 
 2041              		.global	S_5
 2042              		.section	.bss.S_5,"aw",%nobits
 2043              		.align	2
 2046              	S_5:
 2047 0000 00000000 		.space	36
 2047      00000000 
 2047      00000000 
 2047      00000000 
 2047      00000000 
 2048              		.global	current_pid_result
 2049              		.section	.bss.current_pid_result,"aw",%nobits
 2050              		.align	2
 2053              	current_pid_result:
 2054 0000 00000000 		.space	4
 2055              		.global	I_error
 2056              		.section	.bss.I_error,"aw",%nobits
 2057              		.align	2
 2060              	I_error:
 2061 0000 00000000 		.space	4
 2062              		.global	I_target
 2063              		.section	.bss.I_target,"aw",%nobits
 2064              		.align	2
 2067              	I_target:
 2068 0000 00000000 		.space	4
 2069              		.global	real_I_ref
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 128


 2070              		.section	.bss.real_I_ref,"aw",%nobits
 2071              		.align	2
 2074              	real_I_ref:
 2075 0000 00000000 		.space	4
 2076              		.global	percentage
 2077              		.section	.bss.percentage,"aw",%nobits
 2078              		.align	2
 2081              	percentage:
 2082 0000 00000000 		.space	4
 2083              		.global	rato
 2084              		.section	.bss.rato,"aw",%nobits
 2085              		.align	2
 2088              	rato:
 2089 0000 00000000 		.space	4
 2090              		.global	I_ref
 2091              		.section	.bss.I_ref,"aw",%nobits
 2092              		.align	2
 2095              	I_ref:
 2096 0000 00000000 		.space	4
 2097              		.global	angle_1
 2098              		.section	.bss.angle_1,"aw",%nobits
 2099              		.align	2
 2102              	angle_1:
 2103 0000 00000000 		.space	4
 2104              		.global	count_1
 2105              		.section	.bss.count_1,"aw",%nobits
 2106              		.align	2
 2109              	count_1:
 2110 0000 00000000 		.space	4
 2111              		.global	sineA
 2112              		.section	.bss.sineA,"aw",%nobits
 2113              		.align	2
 2116              	sineA:
 2117 0000 00000000 		.space	132
 2117      00000000 
 2117      00000000 
 2117      00000000 
 2117      00000000 
 2118              		.global	S_3
 2119              		.section	.bss.S_3,"aw",%nobits
 2120              		.align	2
 2123              	S_3:
 2124 0000 00000000 		.space	36
 2124      00000000 
 2124      00000000 
 2124      00000000 
 2124      00000000 
 2125              		.text
 2126              	.Letext0:
 2127              		.file 3 "/Users/luban/.local/xPacks/arm-none-eabi-gcc/xpack-arm-none-eabi-gcc-13.2.1-1.1/arm-none-
 2128              		.file 4 "/Users/luban/.local/xPacks/arm-none-eabi-gcc/xpack-arm-none-eabi-gcc-13.2.1-1.1/arm-none-
 2129              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 2130              		.file 6 "SOGI/Inc/sogi.h"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 129


DEFINED SYMBOLS
                            *ABS*:00000000 current.c
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:21     .text.CURRENT_PID_INIT:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:27     .text.CURRENT_PID_INIT:00000000 CURRENT_PID_INIT
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:124    .text.CURRENT_PID_INIT:00000084 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2123   .bss.S_3:00000000 S_3
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2116   .bss.sineA:00000000 sineA
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2039   .bss.sineB:00000000 sineB
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2095   .bss.I_ref:00000000 I_ref
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2088   .bss.rato:00000000 rato
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2046   .bss.S_5:00000000 S_5
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:138    .text.UPDATE_CURRENT_NUM:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:144    .text.UPDATE_CURRENT_NUM:00000000 UPDATE_CURRENT_NUM
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:269    .text.UPDATE_CURRENT_NUM:000000a8 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:278    .text.UPDATE_IREF_RATO_NUM:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:284    .text.UPDATE_IREF_RATO_NUM:00000000 UPDATE_IREF_RATO_NUM
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:330    .text.UPDATE_IREF_RATO_NUM:0000001c $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:336    .text.UPDATE_PHASE_NUM:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:342    .text.UPDATE_PHASE_NUM:00000000 UPDATE_PHASE_NUM
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:470    .text.UPDATE_PHASE_NUM:000000ac $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:483    .text.UPDATE_IREF_RATO_PID:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:489    .text.UPDATE_IREF_RATO_PID:00000000 UPDATE_IREF_RATO_PID
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:659    .text.UPDATE_IREF_RATO_PID:00000138 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:675    .text.UPDATE_CURRENT_PID:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:681    .text.UPDATE_CURRENT_PID:00000000 UPDATE_CURRENT_PID
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:957    .text.UPDATE_CURRENT_PID:00000210 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:972    .text.UPDATE_PHASE_PID:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:978    .text.UPDATE_PHASE_PID:00000000 UPDATE_PHASE_PID
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:1254   .text.UPDATE_PHASE_PID:00000210 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:1269   .text.COUNT_CURRENT_PID:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:1275   .text.COUNT_CURRENT_PID:00000000 COUNT_CURRENT_PID
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:1755   .text.COUNT_CURRENT_PID:00000318 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2109   .bss.count_1:00000000 count_1
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2102   .bss.angle_1:00000000 angle_1
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2081   .bss.percentage:00000000 percentage
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2074   .bss.real_I_ref:00000000 real_I_ref
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2067   .bss.I_target:00000000 I_target
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2060   .bss.I_error:00000000 I_error
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2053   .bss.current_pid_result:00000000 current_pid_result
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2032   .bss.angle_error:00000000 angle_error
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2025   .bss.phase_pid_output:00000000 phase_pid_output
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:1783   .text.COUNT_CURRENT_PID:00000380 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:1965   .text.COUNT_CURRENT_PID:000004c0 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:1987   .text.UPDATE_PHASE:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:1993   .text.UPDATE_PHASE:00000000 UPDATE_PHASE
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2015   .text.UPDATE_PHASE:00000010 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2022   .bss.phase_pid_output:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2029   .bss.angle_error:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2036   .bss.sineB:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2043   .bss.S_5:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2050   .bss.current_pid_result:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2057   .bss.I_error:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2064   .bss.I_target:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2071   .bss.real_I_ref:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2078   .bss.percentage:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2085   .bss.rato:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2092   .bss.I_ref:00000000 $d
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s 			page 130


/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2099   .bss.angle_1:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2106   .bss.count_1:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2113   .bss.sineA:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccaCPR6O.s:2120   .bss.S_3:00000000 $d

UNDEFINED SYMBOLS
arm_pid_init_f32
SPLL_1PH_SOGI_reset
SPLL_1PH_SOGI_config
pid_3
current_num
rato_num
pid_5
__aeabi_f2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
SPLL_1PH_SOGI_run
arm_sin_f32
chip_select
chip_b_mode
ADC3_Buf_f32
ADC1_Buf_f32
