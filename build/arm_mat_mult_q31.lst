ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccRkKXxd.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"arm_mat_mult_q31.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "DSP/Source/MatrixFunctions/arm_mat_mult_q31.c"
  20              		.section	.text.arm_mat_mult_q31,"ax",%progbits
  21              		.align	1
  22              		.global	arm_mat_mult_q31
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	arm_mat_mult_q31:
  28              	.LVL0:
  29              	.LFB139:
   1:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** /* ----------------------------------------------------------------------
   2:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Project:      CMSIS DSP Library
   3:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Title:        arm_mat_mult_q31.c
   4:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Description:  Q31 matrix multiplication
   5:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
   6:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * $Date:        27. January 2017
   7:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * $Revision:    V.1.5.1
   8:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
   9:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Target Processor: Cortex-M cores
  10:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * -------------------------------------------------------------------- */
  11:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** /*
  12:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
  14:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
  16:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * not use this file except in compliance with the License.
  18:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * You may obtain a copy of the License at
  19:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
  20:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
  22:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * See the License for the specific language governing permissions and
  26:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * limitations under the License.
  27:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  */
  28:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  29:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #include "arm_math.h"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccRkKXxd.s 			page 2


  30:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  31:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** /**
  32:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * @ingroup groupMatrix
  33:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  */
  34:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  35:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** /**
  36:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * @addtogroup MatrixMult
  37:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * @{
  38:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  */
  39:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  40:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** /**
  41:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * @brief Q31 matrix multiplication
  42:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * @param[in]       *pSrcA points to the first input matrix structure
  43:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * @param[in]       *pSrcB points to the second input matrix structure
  44:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * @param[out]      *pDst points to output matrix structure
  45:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * @return     		The function returns either
  46:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of siz
  47:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
  48:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * @details
  49:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * <b>Scaling and Overflow Behavior:</b>
  50:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
  51:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * \par
  52:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * The function is implemented using an internal 64-bit accumulator.
  53:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * The accumulator has a 2.62 format and maintains full precision of the intermediate
  54:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * multiplication results but provides only a single guard bit. There is no saturation
  55:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * on intermediate additions. Thus, if the accumulator overflows it wraps around and
  56:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * distorts the result. The input signals should be scaled down to avoid intermediate
  57:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * overflows. The input is thus scaled down by log2(numColsA) bits
  58:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * to avoid overflows, as a total of numColsA additions are performed internally.
  59:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * The 2.62 accumulator is right shifted by 31 bits and saturated to 1.31 format to yield the final
  60:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
  61:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * \par
  62:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  * See <code>arm_mat_mult_fast_q31()</code> for a faster but less precise implementation of this fu
  63:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  *
  64:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****  */
  65:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  66:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** arm_status arm_mat_mult_q31(
  67:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   const arm_matrix_instance_q31 * pSrcA,
  68:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   const arm_matrix_instance_q31 * pSrcB,
  69:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   arm_matrix_instance_q31 * pDst)
  70:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** {
  30              		.loc 1 70 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 32
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 70 1 is_stmt 0 view .LVU1
  35 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 36
  38              		.cfi_offset 4, -36
  39              		.cfi_offset 5, -32
  40              		.cfi_offset 6, -28
  41              		.cfi_offset 7, -24
  42              		.cfi_offset 8, -20
  43              		.cfi_offset 9, -16
  44              		.cfi_offset 10, -12
  45              		.cfi_offset 11, -8
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccRkKXxd.s 			page 3


  46              		.cfi_offset 14, -4
  47 0004 89B0     		sub	sp, sp, #36
  48              	.LCFI1:
  49              		.cfi_def_cfa_offset 72
  50 0006 0546     		mov	r5, r0
  51 0008 0C46     		mov	r4, r1
  52 000a 1346     		mov	r3, r2
  71:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q31_t *pIn1 = pSrcA->pData;                    /* input data matrix pointer A */
  53              		.loc 1 71 3 is_stmt 1 view .LVU2
  54              	.LVL1:
  72:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q31_t *pIn2 = pSrcB->pData;                    /* input data matrix pointer B */
  55              		.loc 1 72 3 view .LVU3
  73:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q31_t *pInA = pSrcA->pData;                    /* input data matrix pointer A */
  56              		.loc 1 73 3 view .LVU4
  57              		.loc 1 73 10 is_stmt 0 view .LVU5
  58 000c 4268     		ldr	r2, [r0, #4]
  59              	.LVL2:
  74:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q31_t *pOut = pDst->pData;                     /* output data matrix pointer */
  60              		.loc 1 74 3 is_stmt 1 view .LVU6
  61              		.loc 1 74 10 is_stmt 0 view .LVU7
  62 000e 5F68     		ldr	r7, [r3, #4]
  63              	.LVL3:
  75:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q31_t *px;                                     /* Temporary output data matrix pointer */
  64              		.loc 1 75 3 is_stmt 1 view .LVU8
  76:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q63_t sum;                                     /* Accumulator */
  65              		.loc 1 76 3 view .LVU9
  77:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   uint16_t numRowsA = pSrcA->numRows;            /* number of rows of input matrix A    */
  66              		.loc 1 77 3 view .LVU10
  67              		.loc 1 77 12 is_stmt 0 view .LVU11
  68 0010 0088     		ldrh	r0, [r0]
  69              	.LVL4:
  78:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   uint16_t numColsB = pSrcB->numCols;            /* number of columns of input matrix B */
  70              		.loc 1 78 3 is_stmt 1 view .LVU12
  71              		.loc 1 78 12 is_stmt 0 view .LVU13
  72 0012 B1F802A0 		ldrh	r10, [r1, #2]
  73              	.LVL5:
  79:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   uint16_t numColsA = pSrcA->numCols;            /* number of columns of input matrix A */
  74              		.loc 1 79 3 is_stmt 1 view .LVU14
  75              		.loc 1 79 12 is_stmt 0 view .LVU15
  76 0016 6D88     		ldrh	r5, [r5, #2]
  77              	.LVL6:
  80:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  81:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #if defined (ARM_MATH_DSP)
  82:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  83:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  84:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  85:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   uint16_t col, i = 0U, j, row = numRowsA, colCnt;      /* loop counters */
  78              		.loc 1 85 3 is_stmt 1 view .LVU16
  86:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   arm_status status;                             /* status of matrix multiplication */
  79              		.loc 1 86 3 view .LVU17
  87:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q31_t a0, a1, a2, a3, b0, b1, b2, b3;
  80              		.loc 1 87 3 view .LVU18
  88:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  89:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #ifdef ARM_MATH_MATRIX_CHECK
  90:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  91:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
  92:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   /* Check for matrix mismatch condition */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccRkKXxd.s 			page 4


  93:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   if ((pSrcA->numCols != pSrcB->numRows) ||
  81              		.loc 1 93 3 view .LVU19
  82              		.loc 1 93 31 is_stmt 0 view .LVU20
  83 0018 0988     		ldrh	r1, [r1]
  84              	.LVL7:
  85              		.loc 1 93 6 view .LVU21
  86 001a A942     		cmp	r1, r5
  87 001c 40F0B680 		bne	.L9
  94:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****      (pSrcA->numRows != pDst->numRows) || (pSrcB->numCols != pDst->numCols))
  88              		.loc 1 94 29 view .LVU22
  89 0020 1988     		ldrh	r1, [r3]
  93:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****      (pSrcA->numRows != pDst->numRows) || (pSrcB->numCols != pDst->numCols))
  90              		.loc 1 93 42 discriminator 1 view .LVU23
  91 0022 8142     		cmp	r1, r0
  92 0024 40F0B580 		bne	.L10
  93              		.loc 1 94 66 view .LVU24
  94 0028 5B88     		ldrh	r3, [r3, #2]
  95              	.LVL8:
  96              		.loc 1 94 40 view .LVU25
  97 002a 5345     		cmp	r3, r10
  98 002c 40F0B480 		bne	.L11
  85:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   arm_status status;                             /* status of matrix multiplication */
  99              		.loc 1 85 17 view .LVU26
 100 0030 0021     		movs	r1, #0
 101 0032 3E46     		mov	r6, r7
 102 0034 2B46     		mov	r3, r5
 103 0036 1546     		mov	r5, r2
 104              	.LVL9:
  85:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   arm_status status;                             /* status of matrix multiplication */
 105              		.loc 1 85 17 view .LVU27
 106 0038 A346     		mov	fp, r4
 107 003a 0446     		mov	r4, r0
 108              	.LVL10:
  85:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   arm_status status;                             /* status of matrix multiplication */
 109              		.loc 1 85 17 view .LVU28
 110 003c 0846     		mov	r0, r1
 111              	.LVL11:
  85:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   arm_status status;                             /* status of matrix multiplication */
 112              		.loc 1 85 17 view .LVU29
 113 003e 1A46     		mov	r2, r3
 114              	.LVL12:
  85:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   arm_status status;                             /* status of matrix multiplication */
 115              		.loc 1 85 17 view .LVU30
 116 0040 93E0     		b	.L8
 117              	.LVL13:
 118              	.L4:
  95:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   {
  96:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
  97:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     status = ARM_MATH_SIZE_MISMATCH;
  98:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   }
  99:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   else
 100:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #endif /*    #ifdef ARM_MATH_MATRIX_CHECK    */
 101:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 102:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   {
 103:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* The following loop performs the dot-product of each row in pSrcA with each column in pSrcB *
 104:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* row loop */
 105:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     do
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccRkKXxd.s 			page 5


 106:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     {
 107:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* Output pointer is set to starting address of the row being processed */
 108:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       px = pOut + i;
 109:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 110:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* For every row wise process, the column loop counter is to be initiated */
 111:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       col = numColsB;
 112:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 113:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* For every row wise process, the pIn2 pointer is set
 114:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****        ** to the starting address of the pSrcB data */
 115:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       pIn2 = pSrcB->pData;
 116:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 117:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       j = 0U;
 118:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 119:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* column loop */
 120:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       do
 121:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       {
 122:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Set the variable sum, that acts as accumulator, to zero */
 123:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         sum = 0;
 124:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 125:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Initiate the pointer pIn1 to point to the starting address of pInA */
 126:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         pIn1 = pInA;
 127:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 128:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Apply loop unrolling and compute 4 MACs simultaneously. */
 129:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         colCnt = numColsA >> 2;
 130:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 131:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 132:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* matrix multiplication */
 133:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         while (colCnt > 0U)
 134:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         {
 135:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* c(m,n) = a(1,1)*b(1,1) + a(1,2) * b(2,1) + .... + a(m,p)*b(p,n) */
 136:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* Perform the multiply-accumulates */
 137:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           b0 = *pIn2;
 119              		.loc 1 137 11 is_stmt 1 view .LVU31
 120              		.loc 1 137 14 is_stmt 0 view .LVU32
 121 0042 DCF80060 		ldr	r6, [ip]
 122              	.LVL14:
 138:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           pIn2 += numColsB;
 123              		.loc 1 138 11 is_stmt 1 view .LVU33
 139:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 140:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           a0 = *pIn1++;
 124              		.loc 1 140 11 view .LVU34
 125              		.loc 1 140 14 is_stmt 0 view .LVU35
 126 0046 2168     		ldr	r1, [r4]
 127              	.LVL15:
 141:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           a1 = *pIn1++;
 128              		.loc 1 141 11 is_stmt 1 view .LVU36
 129              		.loc 1 141 14 is_stmt 0 view .LVU37
 130 0048 6568     		ldr	r5, [r4, #4]
 131              	.LVL16:
 142:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 143:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           b1 = *pIn2;
 132              		.loc 1 143 11 is_stmt 1 view .LVU38
 133              		.loc 1 143 14 is_stmt 0 view .LVU39
 134 004a 5CF82A70 		ldr	r7, [ip, r10, lsl #2]
 135              	.LVL17:
 144:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           pIn2 += numColsB;
 136              		.loc 1 144 11 is_stmt 1 view .LVU40
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccRkKXxd.s 			page 6


 137              		.loc 1 144 16 is_stmt 0 view .LVU41
 138 004e 0CEBCA08 		add	r8, ip, r10, lsl #3
 139              	.LVL18:
 145:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           b2 = *pIn2;
 140              		.loc 1 145 11 is_stmt 1 view .LVU42
 141              		.loc 1 145 14 is_stmt 0 view .LVU43
 142 0052 5CF83A20 		ldr	r2, [ip, r10, lsl #3]
 143              	.LVL19:
 146:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           pIn2 += numColsB;
 144              		.loc 1 146 11 is_stmt 1 view .LVU44
 147:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 148:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           sum += (q63_t) a0 *b0;
 145              		.loc 1 148 11 view .LVU45
 146              		.loc 1 148 18 is_stmt 0 view .LVU46
 147 0056 4FEAE17C 		asr	ip, r1, #31
 148              		.loc 1 148 29 view .LVU47
 149 005a 4FEAE679 		asr	r9, r6, #31
 150 005e 06FB0CFC 		mul	ip, r6, ip
 151 0062 01FB09CC 		mla	ip, r1, r9, ip
 152 0066 A6FB0161 		umull	r6, r1, r6, r1
 153              	.LVL20:
 154              		.loc 1 148 29 view .LVU48
 155 006a 6144     		add	r1, r1, ip
 156              		.loc 1 148 15 view .LVU49
 157 006c F618     		adds	r6, r6, r3
 158 006e 41EB0001 		adc	r1, r1, r0
 159              	.LVL21:
 149:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           sum += (q63_t) a1 *b1;
 160              		.loc 1 149 11 is_stmt 1 view .LVU50
 161              		.loc 1 149 18 is_stmt 0 view .LVU51
 162 0072 EB17     		asrs	r3, r5, #31
 163              		.loc 1 149 29 view .LVU52
 164 0074 F817     		asrs	r0, r7, #31
 165 0076 07FB03F3 		mul	r3, r7, r3
 166 007a 05FB0033 		mla	r3, r5, r0, r3
 167 007e A7FB0557 		umull	r5, r7, r7, r5
 168              	.LVL22:
 169              		.loc 1 149 29 view .LVU53
 170 0082 1F44     		add	r7, r7, r3
 171              		.loc 1 149 15 view .LVU54
 172 0084 AD19     		adds	r5, r5, r6
 173 0086 47EB0107 		adc	r7, r7, r1
 174              	.LVL23:
 150:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 151:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           a2 = *pIn1++;
 175              		.loc 1 151 11 is_stmt 1 view .LVU55
 176              		.loc 1 151 14 is_stmt 0 view .LVU56
 177 008a A168     		ldr	r1, [r4, #8]
 178              	.LVL24:
 152:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           a3 = *pIn1++;
 179              		.loc 1 152 11 is_stmt 1 view .LVU57
 180              		.loc 1 152 14 is_stmt 0 view .LVU58
 181 008c E368     		ldr	r3, [r4, #12]
 182              	.LVL25:
 153:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 154:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           b3 = *pIn2;
 183              		.loc 1 154 11 is_stmt 1 view .LVU59
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccRkKXxd.s 			page 7


 184              		.loc 1 154 14 is_stmt 0 view .LVU60
 185 008e 58F82A00 		ldr	r0, [r8, r10, lsl #2]
 186              	.LVL26:
 155:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           pIn2 += numColsB;
 187              		.loc 1 155 11 is_stmt 1 view .LVU61
 188              		.loc 1 155 16 is_stmt 0 view .LVU62
 189 0092 08EBCA0C 		add	ip, r8, r10, lsl #3
 190              	.LVL27:
 156:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 157:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           sum += (q63_t) a2 *b2;
 191              		.loc 1 157 11 is_stmt 1 view .LVU63
 192              		.loc 1 157 18 is_stmt 0 view .LVU64
 193 0096 CE17     		asrs	r6, r1, #31
 194              		.loc 1 157 29 view .LVU65
 195 0098 4FEAE278 		asr	r8, r2, #31
 196 009c 02FB06F6 		mul	r6, r2, r6
 197 00a0 01FB0866 		mla	r6, r1, r8, r6
 198 00a4 A2FB0121 		umull	r2, r1, r2, r1
 199              	.LVL28:
 200              		.loc 1 157 29 view .LVU66
 201 00a8 3144     		add	r1, r1, r6
 202              		.loc 1 157 15 view .LVU67
 203 00aa 5219     		adds	r2, r2, r5
 204 00ac 41EB0701 		adc	r1, r1, r7
 205              	.LVL29:
 158:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           sum += (q63_t) a3 *b3;
 206              		.loc 1 158 11 is_stmt 1 view .LVU68
 207              		.loc 1 158 18 is_stmt 0 view .LVU69
 208 00b0 DD17     		asrs	r5, r3, #31
 209              		.loc 1 158 29 view .LVU70
 210 00b2 C617     		asrs	r6, r0, #31
 211 00b4 00FB05F5 		mul	r5, r0, r5
 212 00b8 03FB0655 		mla	r5, r3, r6, r5
 213 00bc A0FB0330 		umull	r3, r0, r0, r3
 214              	.LVL30:
 215              		.loc 1 158 29 view .LVU71
 216 00c0 2844     		add	r0, r0, r5
 217              		.loc 1 158 15 view .LVU72
 218 00c2 9B18     		adds	r3, r3, r2
 219 00c4 40EB0100 		adc	r0, r0, r1
 220              	.LVL31:
 159:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 160:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* Decrement the loop counter */
 161:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           colCnt--;
 221              		.loc 1 161 11 is_stmt 1 view .LVU73
 222              		.loc 1 161 17 is_stmt 0 view .LVU74
 223 00c8 0EF1FF3E 		add	lr, lr, #-1
 224              	.LVL32:
 225              		.loc 1 161 17 view .LVU75
 226 00cc 1FFA8EFE 		uxth	lr, lr
 227              	.LVL33:
 152:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 228              		.loc 1 152 21 view .LVU76
 229 00d0 1034     		adds	r4, r4, #16
 230              	.LVL34:
 231              	.L3:
 133:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         {
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccRkKXxd.s 			page 8


 232              		.loc 1 133 23 is_stmt 1 view .LVU77
 233 00d2 BEF1000F 		cmp	lr, #0
 234 00d6 B4D1     		bne	.L4
 162:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         }
 163:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 164:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* If the columns of pSrcA is not a multiple of 4, compute any remaining output samples her
 165:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****          ** No loop unrolling is used. */
 166:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         colCnt = numColsA % 0x4U;
 235              		.loc 1 166 16 is_stmt 0 view .LVU78
 236 00d8 DDF80480 		ldr	r8, [sp, #4]
 237 00dc 029E     		ldr	r6, [sp, #8]
 238 00de 039A     		ldr	r2, [sp, #12]
 239              		.loc 1 166 9 is_stmt 1 view .LVU79
 240              		.loc 1 166 16 is_stmt 0 view .LVU80
 241 00e0 02F00307 		and	r7, r2, #3
 242              	.LVL35:
 167:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 168:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         while (colCnt > 0U)
 243              		.loc 1 168 9 is_stmt 1 view .LVU81
 244              		.loc 1 168 15 is_stmt 0 view .LVU82
 245 00e4 16E0     		b	.L5
 246              	.L6:
 169:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         {
 170:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* c(m,n) = a(1,1)*b(1,1) + a(1,2) * b(2,1) + .... + a(m,p)*b(p,n) */
 171:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* Perform the multiply-accumulates */
 172:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           sum += (q63_t) * pIn1++ * *pIn2;
 247              		.loc 1 172 11 is_stmt 1 view .LVU83
 248              	.LVL36:
 249              		.loc 1 172 26 is_stmt 0 view .LVU84
 250 00e6 54F8041B 		ldr	r1, [r4], #4
 251              	.LVL37:
 252              		.loc 1 172 18 view .LVU85
 253 00ea 4FEAE179 		asr	r9, r1, #31
 254              		.loc 1 172 37 view .LVU86
 255 00ee DCF80050 		ldr	r5, [ip]
 256 00f2 4FEAE57E 		asr	lr, r5, #31
 257              		.loc 1 172 35 view .LVU87
 258 00f6 01FB0EFE 		mul	lr, r1, lr
 259 00fa 05FB09EE 		mla	lr, r5, r9, lr
 260 00fe A1FB0515 		umull	r1, r5, r1, r5
 261 0102 7544     		add	r5, r5, lr
 262              		.loc 1 172 15 view .LVU88
 263 0104 5918     		adds	r1, r3, r1
 264 0106 0B46     		mov	r3, r1
 265              	.LVL38:
 266              		.loc 1 172 15 view .LVU89
 267 0108 45EB0000 		adc	r0, r5, r0
 268              	.LVL39:
 173:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           pIn2 += numColsB;
 269              		.loc 1 173 11 is_stmt 1 view .LVU90
 270              		.loc 1 173 16 is_stmt 0 view .LVU91
 271 010c 0CEB8A0C 		add	ip, ip, r10, lsl #2
 272              	.LVL40:
 174:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 175:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* Decrement the loop counter */
 176:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           colCnt--;
 273              		.loc 1 176 11 is_stmt 1 view .LVU92
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccRkKXxd.s 			page 9


 274              		.loc 1 176 17 is_stmt 0 view .LVU93
 275 0110 013F     		subs	r7, r7, #1
 276              	.LVL41:
 277              		.loc 1 176 17 view .LVU94
 278 0112 BFB2     		uxth	r7, r7
 279              	.LVL42:
 280              	.L5:
 168:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         {
 281              		.loc 1 168 23 is_stmt 1 view .LVU95
 282 0114 002F     		cmp	r7, #0
 283 0116 E6D1     		bne	.L6
 177:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         }
 178:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 179:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Convert the result from 2.62 to 1.31 format and store in destination buffer */
 180:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         *px++ = (q31_t) (sum >> 31);
 284              		.loc 1 180 9 view .LVU96
 285              		.loc 1 180 30 is_stmt 0 view .LVU97
 286 0118 DB0F     		lsrs	r3, r3, #31
 287              	.LVL43:
 288              		.loc 1 180 30 view .LVU98
 289 011a 43EA4003 		orr	r3, r3, r0, lsl #1
 290              		.loc 1 180 12 view .LVU99
 291 011e 0498     		ldr	r0, [sp, #16]
 292              	.LVL44:
 293              		.loc 1 180 15 view .LVU100
 294 0120 40F8043B 		str	r3, [r0], #4
 295              	.LVL45:
 181:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 182:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Update the pointer pIn2 to point to the  starting address of the next column */
 183:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         j++;
 296              		.loc 1 183 9 is_stmt 1 view .LVU101
 297              		.loc 1 183 10 is_stmt 0 view .LVU102
 298 0124 08F10108 		add	r8, r8, #1
 299 0128 1FFA88F8 		uxth	r8, r8
 300              	.LVL46:
 184:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         pIn2 = (pSrcB->pData) + j;
 301              		.loc 1 184 9 is_stmt 1 view .LVU103
 302              		.loc 1 184 22 is_stmt 0 view .LVU104
 303 012c DBF80430 		ldr	r3, [fp, #4]
 304              		.loc 1 184 14 view .LVU105
 305 0130 03EB880C 		add	ip, r3, r8, lsl #2
 306              	.LVL47:
 185:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 186:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Decrement the column loop counter */
 187:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         col--;
 307              		.loc 1 187 9 is_stmt 1 view .LVU106
 308              		.loc 1 187 12 is_stmt 0 view .LVU107
 309 0134 009B     		ldr	r3, [sp]
 310 0136 013B     		subs	r3, r3, #1
 311 0138 9BB2     		uxth	r3, r3
 312 013a 0093     		str	r3, [sp]
 313              	.LVL48:
 188:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 189:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       } while (col > 0U);
 314              		.loc 1 189 20 is_stmt 1 view .LVU108
 315 013c 53B1     		cbz	r3, .L14
 180:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccRkKXxd.s 			page 10


 316              		.loc 1 180 12 is_stmt 0 view .LVU109
 317 013e 0490     		str	r0, [sp, #16]
 318              	.LVL49:
 319              	.L7:
 120:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       {
 320              		.loc 1 120 7 is_stmt 1 view .LVU110
 123:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 321              		.loc 1 123 9 view .LVU111
 126:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 322              		.loc 1 126 9 view .LVU112
 129:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 323              		.loc 1 129 9 view .LVU113
 129:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 324              		.loc 1 129 16 is_stmt 0 view .LVU114
 325 0140 9108     		lsrs	r1, r2, #2
 326              	.LVL50:
 133:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         {
 327              		.loc 1 133 9 is_stmt 1 view .LVU115
 126:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 328              		.loc 1 126 14 is_stmt 0 view .LVU116
 329 0142 059C     		ldr	r4, [sp, #20]
 123:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 330              		.loc 1 123 13 view .LVU117
 331 0144 0023     		movs	r3, #0
 332 0146 1846     		mov	r0, r3
 333 0148 CDF80480 		str	r8, [sp, #4]
 334 014c 8E46     		mov	lr, r1
 335 014e 0296     		str	r6, [sp, #8]
 336 0150 0392     		str	r2, [sp, #12]
 133:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         {
 337              		.loc 1 133 15 view .LVU118
 338 0152 BEE7     		b	.L3
 339              	.LVL51:
 340              	.L14:
 190:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 191:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #else
 192:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 193:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   /* Run the below code for Cortex-M0 */
 194:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 195:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   q31_t *pInB = pSrcB->pData;                    /* input data matrix pointer B */
 196:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   uint16_t col, i = 0U, row = numRowsA, colCnt;  /* loop counters */
 197:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   arm_status status;                             /* status of matrix multiplication */
 198:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 199:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 200:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #ifdef ARM_MATH_MATRIX_CHECK
 201:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 202:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   /* Check for matrix mismatch condition */
 203:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   if ((pSrcA->numCols != pSrcB->numRows) ||
 204:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****      (pSrcA->numRows != pDst->numRows) || (pSrcB->numCols != pDst->numCols))
 205:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   {
 206:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* Set status as ARM_MATH_SIZE_MISMATCH */
 207:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     status = ARM_MATH_SIZE_MISMATCH;
 208:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   }
 209:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   else
 210:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #endif /*    #ifdef ARM_MATH_MATRIX_CHECK    */
 211:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 212:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   {
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccRkKXxd.s 			page 11


 213:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* The following loop performs the dot-product of each row in pSrcA with each column in pSrcB *
 214:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* row loop */
 215:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     do
 216:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     {
 217:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* Output pointer is set to starting address of the row being processed */
 218:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       px = pOut + i;
 219:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 220:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* For every row wise process, the column loop counter is to be initiated */
 221:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       col = numColsB;
 222:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 223:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* For every row wise process, the pIn2 pointer is set
 224:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****        ** to the starting address of the pSrcB data */
 225:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       pIn2 = pSrcB->pData;
 226:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 227:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* column loop */
 228:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       do
 229:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       {
 230:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Set the variable sum, that acts as accumulator, to zero */
 231:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         sum = 0;
 232:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 233:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Initiate the pointer pIn1 to point to the starting address of pInA */
 234:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         pIn1 = pInA;
 235:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 236:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Matrix A columns number of MAC operations are to be performed */
 237:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         colCnt = numColsA;
 238:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 239:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* matrix multiplication */
 240:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         while (colCnt > 0U)
 241:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         {
 242:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* c(m,n) = a(1,1)*b(1,1) + a(1,2) * b(2,1) + .... + a(m,p)*b(p,n) */
 243:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* Perform the multiply-accumulates */
 244:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           sum += (q63_t) * pIn1++ * *pIn2;
 245:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           pIn2 += numColsB;
 246:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 247:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           /* Decrement the loop counter */
 248:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****           colCnt--;
 249:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         }
 250:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 251:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Convert the result from 2.62 to 1.31 format and store in destination buffer */
 252:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         *px++ = (q31_t) clip_q63_to_q31(sum >> 31);
 253:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 254:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Decrement the column loop counter */
 255:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         col--;
 256:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 257:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         /* Update the pointer pIn2 to point to the  starting address of the next column */
 258:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****         pIn2 = pInB + (numColsB - col);
 259:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 260:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       } while (col > 0U);
 261:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 262:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** #endif
 263:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 264:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* Update the pointer pInA to point to the  starting address of the next row */
 265:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       i = i + numColsB;
 341              		.loc 1 265 9 view .LVU119
 342 0154 059D     		ldr	r5, [sp, #20]
 343 0156 0698     		ldr	r0, [sp, #24]
 344              	.LVL52:
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccRkKXxd.s 			page 12


 345              		.loc 1 265 9 view .LVU120
 346 0158 079C     		ldr	r4, [sp, #28]
 347              	.LVL53:
 348              		.loc 1 265 7 is_stmt 1 view .LVU121
 349              		.loc 1 265 9 is_stmt 0 view .LVU122
 350 015a 00EB0A03 		add	r3, r0, r10
 351              	.LVL54:
 352              		.loc 1 265 9 view .LVU123
 353 015e 98B2     		uxth	r0, r3
 354              	.LVL55:
 266:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       pInA = pInA + numColsA;
 355              		.loc 1 266 7 is_stmt 1 view .LVU124
 356              		.loc 1 266 12 is_stmt 0 view .LVU125
 357 0160 05EB8205 		add	r5, r5, r2, lsl #2
 358              	.LVL56:
 267:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 268:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       /* Decrement the row loop counter */
 269:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****       row--;
 359              		.loc 1 269 7 is_stmt 1 view .LVU126
 360              		.loc 1 269 10 is_stmt 0 view .LVU127
 361 0164 631E     		subs	r3, r4, #1
 362 0166 9CB2     		uxth	r4, r3
 363              	.LVL57:
 270:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 271:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     } while (row > 0U);
 364              		.loc 1 271 18 is_stmt 1 view .LVU128
 365 0168 64B1     		cbz	r4, .L15
 366              	.LVL58:
 367              	.L8:
 105:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     {
 368              		.loc 1 105 5 view .LVU129
 108:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 369              		.loc 1 108 7 view .LVU130
 108:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 370              		.loc 1 108 10 is_stmt 0 view .LVU131
 371 016a 06EB8001 		add	r1, r6, r0, lsl #2
 372              	.LVL59:
 111:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 373              		.loc 1 111 7 is_stmt 1 view .LVU132
 115:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 374              		.loc 1 115 7 view .LVU133
 115:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 375              		.loc 1 115 12 is_stmt 0 view .LVU134
 376 016e DBF804C0 		ldr	ip, [fp, #4]
 377              	.LVL60:
 117:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 378              		.loc 1 117 7 is_stmt 1 view .LVU135
 117:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 379              		.loc 1 117 9 is_stmt 0 view .LVU136
 380 0172 4FF00008 		mov	r8, #0
 381 0176 0595     		str	r5, [sp, #20]
 382 0178 0491     		str	r1, [sp, #16]
 383 017a CDF800A0 		str	r10, [sp]
 384 017e 0690     		str	r0, [sp, #24]
 385 0180 0794     		str	r4, [sp, #28]
 386 0182 DDE7     		b	.L7
 387              	.LVL61:
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccRkKXxd.s 			page 13


 388              	.L15:
 272:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** 
 273:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     /* set status as ARM_MATH_SUCCESS */
 274:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****     status = ARM_MATH_SUCCESS;
 389              		.loc 1 274 12 view .LVU137
 390 0184 0020     		movs	r0, #0
 391              	.LVL62:
 392              	.L2:
 275:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   }
 276:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   /* Return to application */
 277:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   return (status);
 393              		.loc 1 277 3 is_stmt 1 view .LVU138
 278:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c **** }
 394              		.loc 1 278 1 is_stmt 0 view .LVU139
 395 0186 09B0     		add	sp, sp, #36
 396              	.LCFI2:
 397              		.cfi_remember_state
 398              		.cfi_def_cfa_offset 36
 399              		@ sp needed
 400 0188 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 401              	.LVL63:
 402              	.L9:
 403              	.LCFI3:
 404              		.cfi_restore_state
  97:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   }
 405              		.loc 1 97 12 view .LVU140
 406 018c 6FF00200 		mvn	r0, #2
 407              	.LVL64:
  97:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   }
 408              		.loc 1 97 12 view .LVU141
 409 0190 F9E7     		b	.L2
 410              	.LVL65:
 411              	.L10:
  97:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   }
 412              		.loc 1 97 12 view .LVU142
 413 0192 6FF00200 		mvn	r0, #2
 414              	.LVL66:
  97:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   }
 415              		.loc 1 97 12 view .LVU143
 416 0196 F6E7     		b	.L2
 417              	.LVL67:
 418              	.L11:
  97:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   }
 419              		.loc 1 97 12 view .LVU144
 420 0198 6FF00200 		mvn	r0, #2
 421              	.LVL68:
  97:DSP/Source/MatrixFunctions/arm_mat_mult_q31.c ****   }
 422              		.loc 1 97 12 view .LVU145
 423 019c F3E7     		b	.L2
 424              		.cfi_endproc
 425              	.LFE139:
 427              		.text
 428              	.Letext0:
 429              		.file 2 "/Users/luban/.local/xPacks/arm-none-eabi-gcc/xpack-arm-none-eabi-gcc-13.2.1-1.1/arm-none-
 430              		.file 3 "/Users/luban/.local/xPacks/arm-none-eabi-gcc/xpack-arm-none-eabi-gcc-13.2.1-1.1/arm-none-
 431              		.file 4 "DSP/Inc/arm_math.h"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccRkKXxd.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 arm_mat_mult_q31.c
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccRkKXxd.s:21     .text.arm_mat_mult_q31:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccRkKXxd.s:27     .text.arm_mat_mult_q31:00000000 arm_mat_mult_q31

NO UNDEFINED SYMBOLS
