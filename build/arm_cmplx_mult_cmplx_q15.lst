ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccwc3fQ8.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"arm_cmplx_mult_cmplx_q15.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c"
  20              		.section	.text.arm_cmplx_mult_cmplx_q15,"ax",%progbits
  21              		.align	1
  22              		.global	arm_cmplx_mult_cmplx_q15
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	arm_cmplx_mult_cmplx_q15:
  28              	.LVL0:
  29              	.LFB139:
   1:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** /* ----------------------------------------------------------------------
   2:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Project:      CMSIS DSP Library
   3:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Title:        arm_cmplx_mult_cmplx_q15.c
   4:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Description:  Q15 complex-by-complex multiplication
   5:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *
   6:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * $Date:        27. January 2017
   7:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * $Revision:    V.1.5.1
   8:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *
   9:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Target Processor: Cortex-M cores
  10:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * -------------------------------------------------------------------- */
  11:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** /*
  12:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *
  14:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *
  16:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * not use this file except in compliance with the License.
  18:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * You may obtain a copy of the License at
  19:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *
  20:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *
  22:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * See the License for the specific language governing permissions and
  26:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * limitations under the License.
  27:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  */
  28:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  29:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** #include "arm_math.h"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccwc3fQ8.s 			page 2


  30:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  31:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** /**
  32:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @ingroup groupCmplxMath
  33:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  */
  34:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  35:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** /**
  36:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @addtogroup CmplxByCmplxMult
  37:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @{
  38:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  */
  39:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  40:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** /**
  41:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @brief  Q15 complex-by-complex multiplication
  42:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @param[in]  *pSrcA points to the first input vector
  43:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @param[in]  *pSrcB points to the second input vector
  44:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @param[out]  *pDst  points to the output vector
  45:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @param[in]  numSamples number of complex samples in each vector
  46:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * @return none.
  47:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  *
  48:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * <b>Scaling and Overflow Behavior:</b>
  49:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * \par
  50:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  * The function implements 1.15 by 1.15 multiplications and finally output is converted into 3.13 f
  51:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****  */
  52:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  53:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** void arm_cmplx_mult_cmplx_q15(
  54:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   q15_t * pSrcA,
  55:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   q15_t * pSrcB,
  56:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   q15_t * pDst,
  57:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   uint32_t numSamples)
  58:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** {
  30              		.loc 1 58 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 58 1 is_stmt 0 view .LVU1
  35 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 24
  38              		.cfi_offset 4, -24
  39              		.cfi_offset 5, -20
  40              		.cfi_offset 6, -16
  41              		.cfi_offset 7, -12
  42              		.cfi_offset 8, -8
  43              		.cfi_offset 14, -4
  59:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   q15_t a, b, c, d;                              /* Temporary variables to store real and imaginary
  44              		.loc 1 59 3 is_stmt 1 view .LVU2
  60:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  61:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** #if defined (ARM_MATH_DSP)
  62:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  63:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  64:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   uint32_t blkCnt;                               /* loop counters */
  45              		.loc 1 64 3 view .LVU3
  65:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  66:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   /* loop Unrolling */
  67:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   blkCnt = numSamples >> 2U;
  46              		.loc 1 67 3 view .LVU4
  47              		.loc 1 67 10 is_stmt 0 view .LVU5
  48 0004 9C08     		lsrs	r4, r3, #2
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccwc3fQ8.s 			page 3


  49              	.LVL1:
  68:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  69:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  70:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  71:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   while (blkCnt > 0U)
  50              		.loc 1 71 3 is_stmt 1 view .LVU6
  51              		.loc 1 71 9 is_stmt 0 view .LVU7
  52 0006 7FE0     		b	.L2
  53              	.L3:
  72:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   {
  73:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1].  */
  74:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i].  */
  75:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
  54              		.loc 1 75 5 is_stmt 1 view .LVU8
  55              	.LVL2:
  56              		.loc 1 75 7 is_stmt 0 view .LVU9
  57 0008 B0F900C0 		ldrsh	ip, [r0]
  58              	.LVL3:
  76:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
  59              		.loc 1 76 5 is_stmt 1 view .LVU10
  60              		.loc 1 76 7 is_stmt 0 view .LVU11
  61 000c B0F90260 		ldrsh	r6, [r0, #2]
  62              	.LVL4:
  77:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
  63              		.loc 1 77 5 is_stmt 1 view .LVU12
  64              		.loc 1 77 7 is_stmt 0 view .LVU13
  65 0010 B1F90050 		ldrsh	r5, [r1]
  66              	.LVL5:
  78:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
  67              		.loc 1 78 5 is_stmt 1 view .LVU14
  68              		.loc 1 78 7 is_stmt 0 view .LVU15
  69 0014 B1F90270 		ldrsh	r7, [r1, #2]
  70              	.LVL6:
  79:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  80:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
  81:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
  71              		.loc 1 81 5 is_stmt 1 view .LVU16
  82:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
  72              		.loc 1 82 35 is_stmt 0 view .LVU17
  73 0018 05FB0CFE 		mul	lr, r5, ip
  74              		.loc 1 82 15 view .LVU18
  75 001c 4FEA6E4E 		asr	lr, lr, #17
  76              		.loc 1 82 7 view .LVU19
  77 0020 1FFA8EFE 		uxth	lr, lr
  78              		.loc 1 82 61 view .LVU20
  79 0024 07FB06F8 		mul	r8, r7, r6
  80              	.LVL7:
  81              		.loc 1 82 47 view .LVU21
  82 0028 AEEB684E 		sub	lr, lr, r8, asr #17
  81:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
  83              		.loc 1 81 13 view .LVU22
  84 002c A2F800E0 		strh	lr, [r2]	@ movhi
  83:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
  84:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
  85              		.loc 1 84 5 is_stmt 1 view .LVU23
  85:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
  86              		.loc 1 85 35 is_stmt 0 view .LVU24
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccwc3fQ8.s 			page 4


  87 0030 07FB0CFC 		mul	ip, r7, ip
  88              	.LVL8:
  89              		.loc 1 85 15 view .LVU25
  90 0034 4FEA6C4C 		asr	ip, ip, #17
  91              		.loc 1 85 61 view .LVU26
  92 0038 06FB05F5 		mul	r5, r6, r5
  93              	.LVL9:
  94              		.loc 1 85 66 view .LVU27
  95 003c 6D14     		asrs	r5, r5, #17
  96              	.LVL10:
  97              		.loc 1 85 47 view .LVU28
  98 003e 15FA8CFC 		uxtah	ip, r5, ip
  84:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
  99              		.loc 1 84 13 view .LVU29
 100 0042 A2F802C0 		strh	ip, [r2, #2]	@ movhi
  86:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  87:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
 101              		.loc 1 87 5 is_stmt 1 view .LVU30
 102              	.LVL11:
 103              		.loc 1 87 7 is_stmt 0 view .LVU31
 104 0046 B0F904C0 		ldrsh	ip, [r0, #4]
 105              	.LVL12:
  88:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
 106              		.loc 1 88 5 is_stmt 1 view .LVU32
 107              		.loc 1 88 7 is_stmt 0 view .LVU33
 108 004a B0F90660 		ldrsh	r6, [r0, #6]
 109              	.LVL13:
  89:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 110              		.loc 1 89 5 is_stmt 1 view .LVU34
 111              		.loc 1 89 7 is_stmt 0 view .LVU35
 112 004e B1F90450 		ldrsh	r5, [r1, #4]
 113              	.LVL14:
  90:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
 114              		.loc 1 90 5 is_stmt 1 view .LVU36
 115              		.loc 1 90 7 is_stmt 0 view .LVU37
 116 0052 B1F90670 		ldrsh	r7, [r1, #6]
 117              	.LVL15:
  91:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  92:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
  93:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 118              		.loc 1 93 5 is_stmt 1 view .LVU38
  94:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 119              		.loc 1 94 35 is_stmt 0 view .LVU39
 120 0056 05FB0CFE 		mul	lr, r5, ip
 121              		.loc 1 94 15 view .LVU40
 122 005a 4FEA6E4E 		asr	lr, lr, #17
 123              		.loc 1 94 7 view .LVU41
 124 005e 1FFA8EFE 		uxth	lr, lr
 125              		.loc 1 94 61 view .LVU42
 126 0062 07FB06F8 		mul	r8, r7, r6
 127              	.LVL16:
 128              		.loc 1 94 47 view .LVU43
 129 0066 AEEB684E 		sub	lr, lr, r8, asr #17
  93:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 130              		.loc 1 93 13 view .LVU44
 131 006a A2F804E0 		strh	lr, [r2, #4]	@ movhi
  95:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccwc3fQ8.s 			page 5


  96:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 132              		.loc 1 96 5 is_stmt 1 view .LVU45
  97:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 133              		.loc 1 97 35 is_stmt 0 view .LVU46
 134 006e 07FB0CFC 		mul	ip, r7, ip
 135              	.LVL17:
 136              		.loc 1 97 15 view .LVU47
 137 0072 4FEA6C4C 		asr	ip, ip, #17
 138              		.loc 1 97 61 view .LVU48
 139 0076 06FB05F5 		mul	r5, r6, r5
 140              	.LVL18:
 141              		.loc 1 97 66 view .LVU49
 142 007a 6D14     		asrs	r5, r5, #17
 143              	.LVL19:
 144              		.loc 1 97 47 view .LVU50
 145 007c 15FA8CFC 		uxtah	ip, r5, ip
  96:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 146              		.loc 1 96 13 view .LVU51
 147 0080 A2F806C0 		strh	ip, [r2, #6]	@ movhi
  98:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
  99:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
 148              		.loc 1 99 5 is_stmt 1 view .LVU52
 149              	.LVL20:
 150              		.loc 1 99 7 is_stmt 0 view .LVU53
 151 0084 B0F908C0 		ldrsh	ip, [r0, #8]
 152              	.LVL21:
 100:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
 153              		.loc 1 100 5 is_stmt 1 view .LVU54
 154              		.loc 1 100 7 is_stmt 0 view .LVU55
 155 0088 B0F90A60 		ldrsh	r6, [r0, #10]
 156              	.LVL22:
 101:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 157              		.loc 1 101 5 is_stmt 1 view .LVU56
 158              		.loc 1 101 7 is_stmt 0 view .LVU57
 159 008c B1F90850 		ldrsh	r5, [r1, #8]
 160              	.LVL23:
 102:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
 161              		.loc 1 102 5 is_stmt 1 view .LVU58
 162              		.loc 1 102 7 is_stmt 0 view .LVU59
 163 0090 B1F90A70 		ldrsh	r7, [r1, #10]
 164              	.LVL24:
 103:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 104:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 105:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 165              		.loc 1 105 5 is_stmt 1 view .LVU60
 106:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 166              		.loc 1 106 35 is_stmt 0 view .LVU61
 167 0094 05FB0CFE 		mul	lr, r5, ip
 168              		.loc 1 106 15 view .LVU62
 169 0098 4FEA6E4E 		asr	lr, lr, #17
 170              		.loc 1 106 7 view .LVU63
 171 009c 1FFA8EFE 		uxth	lr, lr
 172              		.loc 1 106 61 view .LVU64
 173 00a0 07FB06F8 		mul	r8, r7, r6
 174              	.LVL25:
 175              		.loc 1 106 47 view .LVU65
 176 00a4 AEEB684E 		sub	lr, lr, r8, asr #17
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccwc3fQ8.s 			page 6


 105:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 177              		.loc 1 105 13 view .LVU66
 178 00a8 A2F808E0 		strh	lr, [r2, #8]	@ movhi
 107:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 108:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 179              		.loc 1 108 5 is_stmt 1 view .LVU67
 109:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 180              		.loc 1 109 35 is_stmt 0 view .LVU68
 181 00ac 07FB0CFC 		mul	ip, r7, ip
 182              	.LVL26:
 183              		.loc 1 109 15 view .LVU69
 184 00b0 4FEA6C4C 		asr	ip, ip, #17
 185              		.loc 1 109 61 view .LVU70
 186 00b4 06FB05F5 		mul	r5, r6, r5
 187              	.LVL27:
 188              		.loc 1 109 66 view .LVU71
 189 00b8 6D14     		asrs	r5, r5, #17
 190              	.LVL28:
 191              		.loc 1 109 47 view .LVU72
 192 00ba 15FA8CFC 		uxtah	ip, r5, ip
 108:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 193              		.loc 1 108 13 view .LVU73
 194 00be A2F80AC0 		strh	ip, [r2, #10]	@ movhi
 110:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 111:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
 195              		.loc 1 111 5 is_stmt 1 view .LVU74
 196              	.LVL29:
 197              		.loc 1 111 7 is_stmt 0 view .LVU75
 198 00c2 B0F90CC0 		ldrsh	ip, [r0, #12]
 199              	.LVL30:
 112:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
 200              		.loc 1 112 5 is_stmt 1 view .LVU76
 201              		.loc 1 112 7 is_stmt 0 view .LVU77
 202 00c6 B0F90E60 		ldrsh	r6, [r0, #14]
 203              	.LVL31:
 113:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 204              		.loc 1 113 5 is_stmt 1 view .LVU78
 205              		.loc 1 113 7 is_stmt 0 view .LVU79
 206 00ca B1F90C50 		ldrsh	r5, [r1, #12]
 207              	.LVL32:
 114:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
 208              		.loc 1 114 5 is_stmt 1 view .LVU80
 209              		.loc 1 114 7 is_stmt 0 view .LVU81
 210 00ce B1F90E70 		ldrsh	r7, [r1, #14]
 211              	.LVL33:
 115:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 116:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 117:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 212              		.loc 1 117 5 is_stmt 1 view .LVU82
 118:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 213              		.loc 1 118 35 is_stmt 0 view .LVU83
 214 00d2 05FB0CFE 		mul	lr, r5, ip
 215              		.loc 1 118 15 view .LVU84
 216 00d6 4FEA6E4E 		asr	lr, lr, #17
 217              		.loc 1 118 7 view .LVU85
 218 00da 1FFA8EFE 		uxth	lr, lr
 219              		.loc 1 118 61 view .LVU86
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccwc3fQ8.s 			page 7


 220 00de 07FB06F8 		mul	r8, r7, r6
 221              	.LVL34:
 222              		.loc 1 118 47 view .LVU87
 223 00e2 AEEB684E 		sub	lr, lr, r8, asr #17
 117:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 224              		.loc 1 117 13 view .LVU88
 225 00e6 A2F80CE0 		strh	lr, [r2, #12]	@ movhi
 119:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 120:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 226              		.loc 1 120 5 is_stmt 1 view .LVU89
 121:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 227              		.loc 1 121 35 is_stmt 0 view .LVU90
 228 00ea 07FB0CFC 		mul	ip, r7, ip
 229              	.LVL35:
 230              		.loc 1 121 15 view .LVU91
 231 00ee 4FEA6C4C 		asr	ip, ip, #17
 232              		.loc 1 121 61 view .LVU92
 233 00f2 06FB05F5 		mul	r5, r6, r5
 234              	.LVL36:
 235              		.loc 1 121 66 view .LVU93
 236 00f6 6D14     		asrs	r5, r5, #17
 237              	.LVL37:
 238              		.loc 1 121 47 view .LVU94
 239 00f8 15FA8CFC 		uxtah	ip, r5, ip
 120:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 240              		.loc 1 120 13 view .LVU95
 241 00fc A2F80EC0 		strh	ip, [r2, #14]	@ movhi
 122:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 123:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* Decrement the blockSize loop counter */
 124:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     blkCnt--;
 242              		.loc 1 124 5 is_stmt 1 view .LVU96
 243              		.loc 1 124 11 is_stmt 0 view .LVU97
 244 0100 013C     		subs	r4, r4, #1
 245              	.LVL38:
 120:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 246              		.loc 1 120 10 view .LVU98
 247 0102 1032     		adds	r2, r2, #16
 248              	.LVL39:
 114:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 249              		.loc 1 114 15 view .LVU99
 250 0104 1031     		adds	r1, r1, #16
 251              	.LVL40:
 112:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 252              		.loc 1 112 15 view .LVU100
 253 0106 1030     		adds	r0, r0, #16
 254              	.LVL41:
 255              	.L2:
  71:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   {
 256              		.loc 1 71 17 is_stmt 1 view .LVU101
 257 0108 002C     		cmp	r4, #0
 258 010a 7FF47DAF 		bne	.L3
 125:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   }
 126:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 127:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 128:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****    ** No loop unrolling is used. */
 129:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   blkCnt = numSamples % 0x4U;
 259              		.loc 1 129 3 view .LVU102
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccwc3fQ8.s 			page 8


 260              		.loc 1 129 10 is_stmt 0 view .LVU103
 261 010e 03F00303 		and	r3, r3, #3
 262              	.LVL42:
 130:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 131:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   while (blkCnt > 0U)
 263              		.loc 1 131 3 is_stmt 1 view .LVU104
 264              		.loc 1 131 9 is_stmt 0 view .LVU105
 265 0112 23E0     		b	.L4
 266              	.L5:
 132:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   {
 133:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1].  */
 134:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i].  */
 135:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
 267              		.loc 1 135 5 is_stmt 1 view .LVU106
 268              	.LVL43:
 269              		.loc 1 135 7 is_stmt 0 view .LVU107
 270 0114 0446     		mov	r4, r0
 271 0116 34F904CB 		ldrsh	ip, [r4], #4
 272              	.LVL44:
 136:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
 273              		.loc 1 136 5 is_stmt 1 view .LVU108
 274              		.loc 1 136 7 is_stmt 0 view .LVU109
 275 011a B0F90250 		ldrsh	r5, [r0, #2]
 276              	.LVL45:
 137:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 277              		.loc 1 137 5 is_stmt 1 view .LVU110
 278              		.loc 1 137 7 is_stmt 0 view .LVU111
 279 011e 8E46     		mov	lr, r1
 280 0120 3EF9040B 		ldrsh	r0, [lr], #4
 281              	.LVL46:
 138:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
 282              		.loc 1 138 5 is_stmt 1 view .LVU112
 283              		.loc 1 138 7 is_stmt 0 view .LVU113
 284 0124 B1F90270 		ldrsh	r7, [r1, #2]
 285              	.LVL47:
 139:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 140:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 141:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 286              		.loc 1 141 5 is_stmt 1 view .LVU114
 142:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 287              		.loc 1 142 35 is_stmt 0 view .LVU115
 288 0128 00FB0CF1 		mul	r1, r0, ip
 289              		.loc 1 142 15 view .LVU116
 290 012c 4914     		asrs	r1, r1, #17
 291              		.loc 1 142 7 view .LVU117
 292 012e 89B2     		uxth	r1, r1
 293              		.loc 1 142 61 view .LVU118
 294 0130 07FB05F6 		mul	r6, r7, r5
 295              	.LVL48:
 296              		.loc 1 142 47 view .LVU119
 297 0134 A1EB6641 		sub	r1, r1, r6, asr #17
 141:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 298              		.loc 1 141 13 view .LVU120
 299 0138 1646     		mov	r6, r2
 300 013a 26F8041B 		strh	r1, [r6], #4	@ movhi
 143:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 144:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccwc3fQ8.s 			page 9


 301              		.loc 1 144 5 is_stmt 1 view .LVU121
 145:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 302              		.loc 1 145 35 is_stmt 0 view .LVU122
 303 013e 07FB0CFC 		mul	ip, r7, ip
 304              	.LVL49:
 305              		.loc 1 145 15 view .LVU123
 306 0142 4FEA6C4C 		asr	ip, ip, #17
 307              		.loc 1 145 61 view .LVU124
 308 0146 05FB00F0 		mul	r0, r5, r0
 309              	.LVL50:
 310              		.loc 1 145 66 view .LVU125
 311 014a 4014     		asrs	r0, r0, #17
 312              	.LVL51:
 313              		.loc 1 145 47 view .LVU126
 314 014c 10FA8CFC 		uxtah	ip, r0, ip
 144:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 315              		.loc 1 144 13 view .LVU127
 316 0150 A2F802C0 		strh	ip, [r2, #2]	@ movhi
 146:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 147:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* Decrement the blockSize loop counter */
 148:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     blkCnt--;
 317              		.loc 1 148 5 is_stmt 1 view .LVU128
 318              		.loc 1 148 11 is_stmt 0 view .LVU129
 319 0154 013B     		subs	r3, r3, #1
 320              	.LVL52:
 144:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 321              		.loc 1 144 10 view .LVU130
 322 0156 3246     		mov	r2, r6
 138:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 323              		.loc 1 138 15 view .LVU131
 324 0158 7146     		mov	r1, lr
 136:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 325              		.loc 1 136 15 view .LVU132
 326 015a 2046     		mov	r0, r4
 327              	.LVL53:
 328              	.L4:
 131:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   {
 329              		.loc 1 131 17 is_stmt 1 view .LVU133
 330 015c 002B     		cmp	r3, #0
 331 015e D9D1     		bne	.L5
 149:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   }
 150:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 151:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** #else
 152:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 153:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   /* Run the below code for Cortex-M0 */
 154:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 155:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   while (numSamples > 0U)
 156:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   {
 157:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i] = A[2 * i] * B[2 * i] - A[2 * i + 1] * B[2 * i + 1].  */
 158:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* C[2 * i + 1] = A[2 * i] * B[2 * i + 1] + A[2 * i + 1] * B[2 * i].  */
 159:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     a = *pSrcA++;
 160:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     b = *pSrcA++;
 161:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     c = *pSrcB++;
 162:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     d = *pSrcB++;
 163:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 164:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 165:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccwc3fQ8.s 			page 10


 166:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * c) >> 17) - (((q31_t) b * d) >> 17);
 167:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* store the result in 3.13 format in the destination buffer. */
 168:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     *pDst++ =
 169:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****       (q15_t) (q31_t) (((q31_t) a * d) >> 17) + (((q31_t) b * c) >> 17);
 170:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 171:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     /* Decrement the blockSize loop counter */
 172:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****     numSamples--;
 173:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c ****   }
 174:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 175:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** #endif /* #if defined (ARM_MATH_DSP) */
 176:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** 
 177:DSP/Source/ComplexMathFunctions/arm_cmplx_mult_cmplx_q15.c **** }
 332              		.loc 1 177 1 is_stmt 0 view .LVU134
 333 0160 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 334              		.cfi_endproc
 335              	.LFE139:
 337              		.text
 338              	.Letext0:
 339              		.file 2 "/Users/luban/.local/xPacks/arm-none-eabi-gcc/xpack-arm-none-eabi-gcc-13.2.1-1.1/arm-none-
 340              		.file 3 "/Users/luban/.local/xPacks/arm-none-eabi-gcc/xpack-arm-none-eabi-gcc-13.2.1-1.1/arm-none-
 341              		.file 4 "DSP/Inc/arm_math.h"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccwc3fQ8.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_mult_cmplx_q15.c
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccwc3fQ8.s:21     .text.arm_cmplx_mult_cmplx_q15:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccwc3fQ8.s:27     .text.arm_cmplx_mult_cmplx_q15:00000000 arm_cmplx_mult_cmplx_q15

NO UNDEFINED SYMBOLS
