ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc5NP0Cl.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"arm_sqrt_q15.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "DSP/Source/FastMathFunctions/arm_sqrt_q15.c"
  20              		.section	.text.arm_sqrt_q15,"ax",%progbits
  21              		.align	1
  22              		.global	arm_sqrt_q15
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	arm_sqrt_q15:
  28              	.LVL0:
  29              	.LFB139:
   1:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** /* ----------------------------------------------------------------------
   2:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * Project:      CMSIS DSP Library
   3:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * Title:        arm_sqrt_q15.c
   4:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * Description:  Q15 square root function
   5:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  *
   6:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * $Date:        27. January 2017
   7:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * $Revision:    V.1.5.1
   8:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  *
   9:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * Target Processor: Cortex-M cores
  10:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * -------------------------------------------------------------------- */
  11:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** /*
  12:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  *
  14:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * SPDX-License-Identifier: Apache-2.0
  15:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  *
  16:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * not use this file except in compliance with the License.
  18:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * You may obtain a copy of the License at
  19:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  *
  20:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  *
  22:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * Unless required by applicable law or agreed to in writing, software
  23:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * See the License for the specific language governing permissions and
  26:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * limitations under the License.
  27:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  */
  28:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** 
  29:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** #include "arm_math.h"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc5NP0Cl.s 			page 2


  30:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** #include "arm_common_tables.h"
  31:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** 
  32:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** 
  33:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** /**
  34:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * @ingroup groupFastMath
  35:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  */
  36:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** 
  37:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** /**
  38:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * @addtogroup SQRT
  39:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  * @{
  40:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****  */
  41:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** 
  42:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   /**
  43:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****    * @brief  Q15 square root function.
  44:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****    * @param[in]   in     input value.  The range of the input value is [0 +1) or 0x0000 to 0x7FFF.
  45:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****    * @param[out]  *pOut  square root of input value.
  46:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****    * @return The function returns ARM_MATH_SUCCESS if the input value is positive
  47:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****    * and ARM_MATH_ARGUMENT_ERROR if the input is negative.  For
  48:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****    * negative inputs, the function returns *pOut = 0.
  49:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****    */
  50:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** 
  51:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** arm_status arm_sqrt_q15(
  52:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   q15_t in,
  53:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   q15_t * pOut)
  54:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** {
  30              		.loc 1 54 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  55:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   q15_t number, temp1, var1, signBits1, half;
  34              		.loc 1 55 3 view .LVU1
  56:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   q31_t bits_val1;
  35              		.loc 1 56 3 view .LVU2
  57:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   float32_t temp_float1;
  36              		.loc 1 57 3 view .LVU3
  58:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   union
  37              		.loc 1 58 3 view .LVU4
  59:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   {
  60:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     q31_t fracval;
  61:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     float32_t floatval;
  62:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   } tempconv;
  63:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** 
  64:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   number = in;
  38              		.loc 1 64 3 view .LVU5
  65:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** 
  66:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   /* If the input is a positive number then compute the signBits. */
  67:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   if (number > 0)
  39              		.loc 1 67 3 view .LVU6
  40              		.loc 1 67 6 is_stmt 0 view .LVU7
  41 0000 0028     		cmp	r0, #0
  42              		.loc 1 67 6 view .LVU8
  43 0002 63DD     		ble	.L2
  54:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   q15_t number, temp1, var1, signBits1, half;
  44              		.loc 1 54 1 view .LVU9
  45 0004 10B5     		push	{r4, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc5NP0Cl.s 			page 3


  48              		.cfi_offset 4, -8
  49              		.cfi_offset 14, -4
  68:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   {
  69:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     signBits1 = __CLZ(number) - 17;
  50              		.loc 1 69 5 is_stmt 1 view .LVU10
  51              	.LVL1:
  52              	.LBB4:
  53              	.LBI4:
  54              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc5NP0Cl.s 			page 4


  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc5NP0Cl.s 			page 5


 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc5NP0Cl.s 			page 6


 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc5NP0Cl.s 			page 7


 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc5NP0Cl.s 			page 8


 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc5NP0Cl.s 			page 9


 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc5NP0Cl.s 			page 10


 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
  55              		.loc 2 403 30 view .LVU11
  56              	.LBB5:
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
  57              		.loc 2 414 3 view .LVU12
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
  58              		.loc 2 418 3 view .LVU13
  59              		.loc 2 418 10 is_stmt 0 discriminator 1 view .LVU14
  60 0006 B0FA80F4 		clz	r4, r0
  61              	.LVL2:
  62              		.loc 2 418 10 discriminator 1 view .LVU15
  63              	.LBE5:
  64              	.LBE4:
  65              		.loc 1 69 31 discriminator 1 view .LVU16
  66 000a 113C     		subs	r4, r4, #17
  67              		.loc 1 69 15 discriminator 1 view .LVU17
  68 000c 2246     		mov	r2, r4
  69              	.LVL3:
  70:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** 
  71:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     /* Shift by the number of signBits1 */
  72:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     if ((signBits1 % 2) == 0)
  70              		.loc 1 72 5 is_stmt 1 view .LVU18
  71              		.loc 1 72 8 is_stmt 0 view .LVU19
  72 000e 14F00104 		ands	r4, r4, #1
  73              	.LVL4:
  74              		.loc 1 72 8 view .LVU20
  75 0012 51D1     		bne	.L3
  73:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     {
  74:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****       number = number << signBits1;
  76              		.loc 1 74 7 is_stmt 1 view .LVU21
  77              		.loc 1 74 23 is_stmt 0 view .LVU22
  78 0014 9040     		lsls	r0, r0, r2
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc5NP0Cl.s 			page 11


  79              	.LVL5:
  80              		.loc 1 74 14 view .LVU23
  81 0016 00B2     		sxth	r0, r0
  82              	.LVL6:
  83              	.L4:
  75:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     }
  76:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     else
  77:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     {
  78:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****       number = number << (signBits1 - 1);
  79:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     }
  80:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** 
  81:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     /* Calculate half value of the number */
  82:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     half = number >> 1;
  84              		.loc 1 82 5 is_stmt 1 view .LVU24
  85              		.loc 1 82 10 is_stmt 0 view .LVU25
  86 0018 4FEA600C 		asr	ip, r0, #1
  87              	.LVL7:
  83:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     /* Store the number for later use */
  84:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     temp1 = number;
  88              		.loc 1 84 5 is_stmt 1 view .LVU26
  85:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** 
  86:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     /* Convert to float */
  87:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     temp_float1 = number * 3.051757812500000e-005f;
  89              		.loc 1 87 5 view .LVU27
  90              		.loc 1 87 26 is_stmt 0 view .LVU28
  91 001c 07EE900A 		vmov	s15, r0	@ int
  92 0020 F8EEE77A 		vcvt.f32.s32	s15, s15
  93              		.loc 1 87 17 view .LVU29
  94 0024 9FED2C7A 		vldr.32	s14, .L12
  95 0028 67EE877A 		vmul.f32	s15, s15, s14
  96              	.LVL8:
  88:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     /*Store as integer */
  89:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     tempconv.floatval = temp_float1;
  97              		.loc 1 89 5 is_stmt 1 view .LVU30
  90:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     bits_val1 = tempconv.fracval;
  98              		.loc 1 90 5 view .LVU31
  91:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     /* Subtract the shifted value from the magic number to give intial guess */
  92:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     bits_val1 = 0x5f3759df - (bits_val1 >> 1);  /* gives initial guess */
  99              		.loc 1 92 5 view .LVU32
 100              		.loc 1 92 15 is_stmt 0 view .LVU33
 101 002c 2B4B     		ldr	r3, .L12+4
 102 002e 17EE90EA 		vmov	lr, s15	@ int
 103 0032 A3EB6E03 		sub	r3, r3, lr, asr #1
 104              	.LVL9:
  93:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     /* Store as float */
  94:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     tempconv.fracval = bits_val1;
 105              		.loc 1 94 5 is_stmt 1 view .LVU34
  95:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     temp_float1 = tempconv.floatval;
 106              		.loc 1 95 5 view .LVU35
  96:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     /* Convert to integer format */
  97:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     var1 = (q31_t) (temp_float1 * 16384);
 107              		.loc 1 97 5 view .LVU36
 108              		.loc 1 97 12 is_stmt 0 view .LVU37
 109 0036 07EE903A 		vmov	s15, r3
 110 003a FEEEC97A 		vcvt.s32.f32	s15, s15, #14
 111              		.loc 1 97 10 view .LVU38
 112 003e 17EE903A 		vmov	r3, s15	@ int
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc5NP0Cl.s 			page 12


 113              	.LVL10:
 114              		.loc 1 97 10 view .LVU39
 115 0042 1BB2     		sxth	r3, r3
 116              	.LVL11:
  98:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** 
  99:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     /* 1st iteration */
 100:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     var1 = ((q15_t) ((q31_t) var1 * (0x3000 -
 117              		.loc 1 100 5 is_stmt 1 view .LVU40
 101:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 102:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                       ((((q15_t)
 103:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                          (((q31_t) var1 * var1) >> 15)) *
 118              		.loc 1 103 57 is_stmt 0 view .LVU41
 119 0044 03FB03FE 		mul	lr, r3, r3
 120              	.LVL12:
 102:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                          (((q31_t) var1 * var1) >> 15)) *
 121              		.loc 1 102 42 view .LVU42
 122 0048 4EF3CF3E 		sbfx	lr, lr, #15, #16
 123              		.loc 1 103 73 view .LVU43
 124 004c 0CFB0EFE 		mul	lr, ip, lr
 101:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 125              		.loc 1 101 39 view .LVU44
 126 0050 4EF3CF3E 		sbfx	lr, lr, #15, #16
 100:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 127              		.loc 1 100 45 view .LVU45
 128 0054 CEF5405E 		rsb	lr, lr, #12288
 100:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 129              		.loc 1 100 35 view .LVU46
 130 0058 0EFB03F3 		mul	r3, lr, r3
 131              	.LVL13:
 104:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                         (q31_t) half) >> 15))) >> 15)) << 2;
 132              		.loc 1 104 64 view .LVU47
 133 005c DB13     		asrs	r3, r3, #15
 100:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 134              		.loc 1 100 10 view .LVU48
 135 005e 9B00     		lsls	r3, r3, #2
 136 0060 1BB2     		sxth	r3, r3
 137              	.LVL14:
 105:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     /* 2nd iteration */
 106:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     var1 = ((q15_t) ((q31_t) var1 * (0x3000 -
 138              		.loc 1 106 5 is_stmt 1 view .LVU49
 107:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 108:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                       ((((q15_t)
 109:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                          (((q31_t) var1 * var1) >> 15)) *
 139              		.loc 1 109 57 is_stmt 0 view .LVU50
 140 0062 03FB03FE 		mul	lr, r3, r3
 108:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                          (((q31_t) var1 * var1) >> 15)) *
 141              		.loc 1 108 42 view .LVU51
 142 0066 4EF3CF3E 		sbfx	lr, lr, #15, #16
 143              		.loc 1 109 73 view .LVU52
 144 006a 0EFB0CFE 		mul	lr, lr, ip
 107:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 145              		.loc 1 107 39 view .LVU53
 146 006e 4EF3CF3E 		sbfx	lr, lr, #15, #16
 106:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 147              		.loc 1 106 45 view .LVU54
 148 0072 CEF5405E 		rsb	lr, lr, #12288
 106:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc5NP0Cl.s 			page 13


 149              		.loc 1 106 35 view .LVU55
 150 0076 0EFB03F3 		mul	r3, lr, r3
 151              	.LVL15:
 110:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                         (q31_t) half) >> 15))) >> 15)) << 2;
 152              		.loc 1 110 64 view .LVU56
 153 007a DB13     		asrs	r3, r3, #15
 106:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 154              		.loc 1 106 10 view .LVU57
 155 007c 9B00     		lsls	r3, r3, #2
 156 007e 1BB2     		sxth	r3, r3
 157              	.LVL16:
 111:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     /* 3rd iteration */
 112:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     var1 = ((q15_t) ((q31_t) var1 * (0x3000 -
 158              		.loc 1 112 5 is_stmt 1 view .LVU58
 113:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 114:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                       ((((q15_t)
 115:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                          (((q31_t) var1 * var1) >> 15)) *
 159              		.loc 1 115 57 is_stmt 0 view .LVU59
 160 0080 03FB03FE 		mul	lr, r3, r3
 114:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                          (((q31_t) var1 * var1) >> 15)) *
 161              		.loc 1 114 42 view .LVU60
 162 0084 4EF3CF3E 		sbfx	lr, lr, #15, #16
 163              		.loc 1 115 73 view .LVU61
 164 0088 0EFB0CFC 		mul	ip, lr, ip
 165              	.LVL17:
 113:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 166              		.loc 1 113 39 view .LVU62
 167 008c 4CF3CF3C 		sbfx	ip, ip, #15, #16
 112:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 168              		.loc 1 112 45 view .LVU63
 169 0090 CCF5405C 		rsb	ip, ip, #12288
 112:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 170              		.loc 1 112 35 view .LVU64
 171 0094 0CFB03F3 		mul	r3, ip, r3
 172              	.LVL18:
 116:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                         (q31_t) half) >> 15))) >> 15)) << 2;
 173              		.loc 1 116 64 view .LVU65
 174 0098 DB13     		asrs	r3, r3, #15
 112:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****                                      ((q15_t)
 175              		.loc 1 112 10 view .LVU66
 176 009a 9B00     		lsls	r3, r3, #2
 177 009c 1BB2     		sxth	r3, r3
 178              	.LVL19:
 117:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** 
 118:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     /* Multiply the inverse square root with the original value */
 119:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     var1 = ((q15_t) (((q31_t) temp1 * var1) >> 15)) << 1;
 179              		.loc 1 119 5 is_stmt 1 view .LVU67
 180              		.loc 1 119 37 is_stmt 0 view .LVU68
 181 009e 00FB03F3 		mul	r3, r0, r3
 182              	.LVL20:
 183              		.loc 1 119 45 view .LVU69
 184 00a2 DB13     		asrs	r3, r3, #15
 185              		.loc 1 119 10 view .LVU70
 186 00a4 5B00     		lsls	r3, r3, #1
 187 00a6 1BB2     		sxth	r3, r3
 188              	.LVL21:
 120:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc5NP0Cl.s 			page 14


 121:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     /* Shift the output down accordingly */
 122:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     if ((signBits1 % 2) == 0)
 189              		.loc 1 122 5 is_stmt 1 view .LVU71
 190              		.loc 1 122 8 is_stmt 0 view .LVU72
 191 00a8 54B9     		cbnz	r4, .L5
 123:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     {
 124:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****       var1 = var1 >> (signBits1 / 2);
 192              		.loc 1 124 7 is_stmt 1 view .LVU73
 193              		.loc 1 124 33 is_stmt 0 view .LVU74
 194 00aa 02EBD272 		add	r2, r2, r2, lsr #31
 195              	.LVL22:
 196              		.loc 1 124 33 view .LVU75
 197 00ae 5210     		asrs	r2, r2, #1
 198              		.loc 1 124 12 view .LVU76
 199 00b0 1341     		asrs	r3, r3, r2
 200              	.LVL23:
 201              	.L6:
 125:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     }
 126:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     else
 127:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     {
 128:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****       var1 = var1 >> ((signBits1 - 1) / 2);
 129:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     }
 130:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     *pOut = var1;
 202              		.loc 1 130 5 is_stmt 1 view .LVU77
 203              		.loc 1 130 11 is_stmt 0 view .LVU78
 204 00b2 0B80     		strh	r3, [r1]	@ movhi
 131:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** 
 132:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     return (ARM_MATH_SUCCESS);
 205              		.loc 1 132 5 is_stmt 1 view .LVU79
 206              		.loc 1 132 12 is_stmt 0 view .LVU80
 207 00b4 0020     		movs	r0, #0
 208              	.LVL24:
 133:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   }
 134:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   /* If the number is a negative number then store zero as its square root value */
 135:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   else
 136:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   {
 137:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     *pOut = 0;
 138:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     return (ARM_MATH_ARGUMENT_ERROR);
 139:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   }
 140:DSP/Source/FastMathFunctions/arm_sqrt_q15.c **** }
 209              		.loc 1 140 1 view .LVU81
 210 00b6 10BD     		pop	{r4, pc}
 211              	.LVL25:
 212              	.L3:
  78:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     }
 213              		.loc 1 78 7 is_stmt 1 view .LVU82
  78:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     }
 214              		.loc 1 78 37 is_stmt 0 view .LVU83
 215 00b8 531E     		subs	r3, r2, #1
  78:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     }
 216              		.loc 1 78 23 view .LVU84
 217 00ba 9840     		lsls	r0, r0, r3
  78:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     }
 218              		.loc 1 78 14 view .LVU85
 219 00bc 00B2     		sxth	r0, r0
 220              	.LVL26:
  78:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     }
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc5NP0Cl.s 			page 15


 221              		.loc 1 78 14 view .LVU86
 222 00be ABE7     		b	.L4
 223              	.LVL27:
 224              	.L5:
 128:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     }
 225              		.loc 1 128 7 is_stmt 1 view .LVU87
 128:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     }
 226              		.loc 1 128 34 is_stmt 0 view .LVU88
 227 00c0 013A     		subs	r2, r2, #1
 228              	.LVL28:
 128:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     }
 229              		.loc 1 128 39 view .LVU89
 230 00c2 02EBD272 		add	r2, r2, r2, lsr #31
 231              	.LVL29:
 128:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     }
 232              		.loc 1 128 39 view .LVU90
 233 00c6 5210     		asrs	r2, r2, #1
 128:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     }
 234              		.loc 1 128 12 view .LVU91
 235 00c8 1341     		asrs	r3, r3, r2
 236              	.LVL30:
 128:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     }
 237              		.loc 1 128 12 view .LVU92
 238 00ca F2E7     		b	.L6
 239              	.LVL31:
 240              	.L2:
 241              	.LCFI1:
 242              		.cfi_def_cfa_offset 0
 243              		.cfi_restore 4
 244              		.cfi_restore 14
 137:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     return (ARM_MATH_ARGUMENT_ERROR);
 245              		.loc 1 137 5 is_stmt 1 view .LVU93
 137:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****     return (ARM_MATH_ARGUMENT_ERROR);
 246              		.loc 1 137 11 is_stmt 0 view .LVU94
 247 00cc 0023     		movs	r3, #0
 248 00ce 0B80     		strh	r3, [r1]	@ movhi
 138:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   }
 249              		.loc 1 138 5 is_stmt 1 view .LVU95
 138:DSP/Source/FastMathFunctions/arm_sqrt_q15.c ****   }
 250              		.loc 1 138 12 is_stmt 0 view .LVU96
 251 00d0 4FF0FF30 		mov	r0, #-1
 252              		.loc 1 140 1 view .LVU97
 253 00d4 7047     		bx	lr
 254              	.L13:
 255 00d6 00BF     		.align	2
 256              	.L12:
 257 00d8 00000038 		.word	939524096
 258 00dc DF59375F 		.word	1597463007
 259              		.cfi_endproc
 260              	.LFE139:
 262              		.text
 263              	.Letext0:
 264              		.file 3 "/Users/luban/.local/xPacks/arm-none-eabi-gcc/xpack-arm-none-eabi-gcc-13.2.1-1.1/arm-none-
 265              		.file 4 "/Users/luban/.local/xPacks/arm-none-eabi-gcc/xpack-arm-none-eabi-gcc-13.2.1-1.1/arm-none-
 266              		.file 5 "DSP/Inc/arm_math.h"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc5NP0Cl.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 arm_sqrt_q15.c
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc5NP0Cl.s:21     .text.arm_sqrt_q15:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc5NP0Cl.s:27     .text.arm_sqrt_q15:00000000 arm_sqrt_q15
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc5NP0Cl.s:257    .text.arm_sqrt_q15:000000d8 $d

NO UNDEFINED SYMBOLS
