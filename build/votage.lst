ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"votage.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "CONTROL/Src/votage.c"
  20              		.section	.text.VOTAGE_PID_INIT,"ax",%progbits
  21              		.align	1
  22              		.global	VOTAGE_PID_INIT
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	VOTAGE_PID_INIT:
  28              	.LFB272:
   1:CONTROL/Src/votage.c **** #include "votage.h"
   2:CONTROL/Src/votage.c **** #include "arm_math.h"
   3:CONTROL/Src/votage.c **** #include "tim.h"
   4:CONTROL/Src/votage.c **** #include "oled.h"
   5:CONTROL/Src/votage.c **** 
   6:CONTROL/Src/votage.c **** #define u8 uint8_t
   7:CONTROL/Src/votage.c **** #define u16 uint16_t
   8:CONTROL/Src/votage.c **** #define u32 uint32_t
   9:CONTROL/Src/votage.c **** 
  10:CONTROL/Src/votage.c **** #define KP 6.95
  11:CONTROL/Src/votage.c **** #define KI 6
  12:CONTROL/Src/votage.c **** #define KD 0
  13:CONTROL/Src/votage.c **** #define VREF 20.97385
  14:CONTROL/Src/votage.c **** #define OUTPUT_VOTAGE ADC1_Buf_f32[0]
  15:CONTROL/Src/votage.c **** #define DEFAULT_RATO 0
  16:CONTROL/Src/votage.c **** 
  17:CONTROL/Src/votage.c **** arm_pid_instance_f32 S_4 = {0};
  18:CONTROL/Src/votage.c **** int count_3 = 0;
  19:CONTROL/Src/votage.c **** float32_t angle_3 = 0;
  20:CONTROL/Src/votage.c **** float32_t V_ref_3 = 0;
  21:CONTROL/Src/votage.c **** float V_error = 0;
  22:CONTROL/Src/votage.c **** float32_t PID_output = 0;
  23:CONTROL/Src/votage.c **** 
  24:CONTROL/Src/votage.c **** float32_t debug_votage = 0;
  25:CONTROL/Src/votage.c **** float32_t debug_rate = 0;
  26:CONTROL/Src/votage.c **** float32_t temp_rato = 0;
  27:CONTROL/Src/votage.c **** 
  28:CONTROL/Src/votage.c **** int spwm_group[400]={
  29:CONTROL/Src/votage.c **** 	33,99,165,231,297,362,428,494,559,624,690,755,819,884,948,1013,1076,
  30:CONTROL/Src/votage.c **** 1140,1203,1266,1329,1392,1454,1515,1577,1638,1698,1758,1818,1877,1936,1994,2052,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 2


  31:CONTROL/Src/votage.c **** 2110,2166,2223,2278,2333,2388,2442,2495,2548,2600,2652,2703,2753,2802,2851,2899,
  32:CONTROL/Src/votage.c **** 2946,2993,3039,3084,3129,3172,3215,3257,3298,3339,3378,3417,3455,3492,3528,3564,
  33:CONTROL/Src/votage.c **** 3598,3632,3664,3696,3727,3757,3786,3814,3841,3868,3893,3917,3940,3963,3984,4005,
  34:CONTROL/Src/votage.c **** 4024,4042,4060,4076,4092,4106,4119,4132,4143,4153,4163,4171,4178,4184,4190,4194,
  35:CONTROL/Src/votage.c **** 4197,4199,4200,4200,4199,4197,4194,4190,4184,4178,4171,4163,4153,4143,4132,4119,
  36:CONTROL/Src/votage.c **** 4106,4092,4076,4060,4042,4024,4005,3984,3963,3940,3917,3893,3868,3841,3814,3786,
  37:CONTROL/Src/votage.c **** 3757,3727,3696,3664,3632,3598,3564,3528,3492,3455,3417,3378,3339,3298,3257,3215,
  38:CONTROL/Src/votage.c **** 3172,3129,3084,3039,2993,2946,2899,2851,2802,2753,2703,2652,2600,2548,2495,2442,
  39:CONTROL/Src/votage.c **** 2388,2333,2278,2223,2166,2110,2052,1994,1936,1877,1818,1758,1698,1638,1577,1515,
  40:CONTROL/Src/votage.c **** 1454,1392,1329,1266,1203,1140,1076,1013,948,884,819,755,690,624,559,494,
  41:CONTROL/Src/votage.c **** 428,362,297,231,165,99,33,-33,-99,-165,-231,-297,-362,-428,-494,-559,
  42:CONTROL/Src/votage.c **** -624,-690,-755,-819,-884,-948,-1013,-1076,-1140,-1203,-1266,-1329,-1392,-1454,-1515,-1577,
  43:CONTROL/Src/votage.c **** -1638,-1698,-1758,-1818,-1877,-1936,-1994,-2052,-2110,-2166,-2223,-2278,-2333,-2388,-2442,-2495,
  44:CONTROL/Src/votage.c **** -2548,-2600,-2652,-2703,-2753,-2802,-2851,-2899,-2946,-2993,-3039,-3084,-3129,-3172,-3215,-3257,
  45:CONTROL/Src/votage.c **** -3298,-3339,-3378,-3417,-3455,-3492,-3528,-3564,-3598,-3632,-3664,-3696,-3727,-3757,-3786,-3814,
  46:CONTROL/Src/votage.c **** -3841,-3868,-3893,-3917,-3940,-3963,-3984,-4005,-4024,-4042,-4060,-4076,-4092,-4106,-4119,-4132,
  47:CONTROL/Src/votage.c **** -4143,-4153,-4163,-4171,-4178,-4184,-4190,-4194,-4197,-4199,-4200,-4200,-4199,-4197,-4194,-4190,
  48:CONTROL/Src/votage.c **** -4184,-4178,-4171,-4163,-4153,-4143,-4132,-4119,-4106,-4092,-4076,-4060,-4042,-4024,-4005,-3984,
  49:CONTROL/Src/votage.c **** -3963,-3940,-3917,-3893,-3868,-3841,-3814,-3786,-3757,-3727,-3696,-3664,-3632,-3598,-3564,-3528,
  50:CONTROL/Src/votage.c **** -3492,-3455,-3417,-3378,-3339,-3298,-3257,-3215,-3172,-3129,-3084,-3039,-2993,-2946,-2899,-2851,
  51:CONTROL/Src/votage.c **** -2802,-2753,-2703,-2652,-2600,-2548,-2495,-2442,-2388,-2333,-2278,-2223,-2166,-2110,-2052,-1994,
  52:CONTROL/Src/votage.c **** -1936,-1877,-1818,-1758,-1698,-1638,-1577,-1515,-1454,-1392,-1329,-1266,-1203,-1140,-1076,-1013,
  53:CONTROL/Src/votage.c **** -948,-884,-819,-755,-690,-624,-559,-494,-428,-362,-297,-231,-165,-99,-33,
  54:CONTROL/Src/votage.c **** };
  55:CONTROL/Src/votage.c **** float32_t square_buffer = 0;
  56:CONTROL/Src/votage.c **** float32_t votage_rms = 0;
  57:CONTROL/Src/votage.c **** float32_t clip_result = 0;
  58:CONTROL/Src/votage.c **** 
  59:CONTROL/Src/votage.c **** extern u32 pid_4[3][5];
  60:CONTROL/Src/votage.c **** extern u32 pid_6[3][5];
  61:CONTROL/Src/votage.c **** extern float32_t ADC1_Buf_f32[4];
  62:CONTROL/Src/votage.c **** extern float32_t ADC3_Buf_f32[4];
  63:CONTROL/Src/votage.c **** 
  64:CONTROL/Src/votage.c **** void VOTAGE_PID_INIT(void)
  65:CONTROL/Src/votage.c **** {
  29              		.loc 1 65 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  66:CONTROL/Src/votage.c ****     S_4.Kp = KP;
  38              		.loc 1 66 5 view .LVU1
  39              		.loc 1 66 12 is_stmt 0 view .LVU2
  40 0002 0548     		ldr	r0, .L3
  41 0004 054B     		ldr	r3, .L3+4
  42 0006 8361     		str	r3, [r0, #24]	@ float
  67:CONTROL/Src/votage.c ****     S_4.Ki = KI*0.01;
  43              		.loc 1 67 5 is_stmt 1 view .LVU3
  44              		.loc 1 67 12 is_stmt 0 view .LVU4
  45 0008 054B     		ldr	r3, .L3+8
  46 000a C361     		str	r3, [r0, #28]	@ float
  68:CONTROL/Src/votage.c ****     S_4.Kd = KD;
  47              		.loc 1 68 5 is_stmt 1 view .LVU5
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 3


  48              		.loc 1 68 12 is_stmt 0 view .LVU6
  49 000c 0023     		movs	r3, #0
  50 000e 0362     		str	r3, [r0, #32]	@ float
  69:CONTROL/Src/votage.c ****     arm_pid_init_f32(&S_4, 1);
  51              		.loc 1 69 5 is_stmt 1 view .LVU7
  52 0010 0121     		movs	r1, #1
  53 0012 FFF7FEFF 		bl	arm_pid_init_f32
  54              	.LVL0:
  70:CONTROL/Src/votage.c **** }
  55              		.loc 1 70 1 is_stmt 0 view .LVU8
  56 0016 08BD     		pop	{r3, pc}
  57              	.L4:
  58              		.align	2
  59              	.L3:
  60 0018 00000000 		.word	S_4
  61 001c 6666DE40 		.word	1088317030
  62 0020 8FC2753D 		.word	1031127695
  63              		.cfi_endproc
  64              	.LFE272:
  66              		.section	.text.UPDATE_RATO_NUM,"ax",%progbits
  67              		.align	1
  68              		.global	UPDATE_RATO_NUM
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	UPDATE_RATO_NUM:
  74              	.LFB273:
  71:CONTROL/Src/votage.c **** 
  72:CONTROL/Src/votage.c **** void UPDATE_RATO_NUM(void)
  73:CONTROL/Src/votage.c **** {
  75              		.loc 1 73 1 is_stmt 1 view -0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 16
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  80              	.LCFI1:
  81              		.cfi_def_cfa_offset 20
  82              		.cfi_offset 4, -20
  83              		.cfi_offset 5, -16
  84              		.cfi_offset 6, -12
  85              		.cfi_offset 7, -8
  86              		.cfi_offset 14, -4
  87 0002 85B0     		sub	sp, sp, #20
  88              	.LCFI2:
  89              		.cfi_def_cfa_offset 40
  74:CONTROL/Src/votage.c ****     u32 temp[3];
  90              		.loc 1 74 5 view .LVU10
  75:CONTROL/Src/votage.c ****     temp[0] = 0;
  91              		.loc 1 75 5 view .LVU11
  92              		.loc 1 75 13 is_stmt 0 view .LVU12
  93 0004 0021     		movs	r1, #0
  94 0006 0191     		str	r1, [sp, #4]
  76:CONTROL/Src/votage.c ****     temp[1] = 0;
  95              		.loc 1 76 5 is_stmt 1 view .LVU13
  96              		.loc 1 76 13 is_stmt 0 view .LVU14
  97 0008 0291     		str	r1, [sp, #8]
  77:CONTROL/Src/votage.c ****     temp[2] = DEFAULT_RATO;
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 4


  98              		.loc 1 77 5 is_stmt 1 view .LVU15
  99              		.loc 1 77 13 is_stmt 0 view .LVU16
 100 000a 0391     		str	r1, [sp, #12]
  78:CONTROL/Src/votage.c ****     for(int i=0;i<3;i++)
 101              		.loc 1 78 5 is_stmt 1 view .LVU17
 102              	.LBB4:
 103              		.loc 1 78 9 view .LVU18
 104              	.LVL1:
 105              		.loc 1 78 5 is_stmt 0 view .LVU19
 106 000c 46E0     		b	.L6
 107              	.LVL2:
 108              	.L7:
  79:CONTROL/Src/votage.c ****     {
  80:CONTROL/Src/votage.c ****         pid_6[i][4] = temp[i]%10;
 109              		.loc 1 80 9 is_stmt 1 view .LVU20
 110              		.loc 1 80 27 is_stmt 0 view .LVU21
 111 000e 04AB     		add	r3, sp, #16
 112 0010 03EB8103 		add	r3, r3, r1, lsl #2
 113 0014 53F80C3C 		ldr	r3, [r3, #-12]
 114              		.loc 1 80 30 view .LVU22
 115 0018 224F     		ldr	r7, .L9
 116 001a A7FB0302 		umull	r0, r2, r7, r3
 117 001e D208     		lsrs	r2, r2, #3
 118 0020 02EB8202 		add	r2, r2, r2, lsl #2
 119 0024 5000     		lsls	r0, r2, #1
 120 0026 1A1A     		subs	r2, r3, r0
 121              		.loc 1 80 21 view .LVU23
 122 0028 1F4C     		ldr	r4, .L9+4
 123 002a 01EB8100 		add	r0, r1, r1, lsl #2
 124 002e 4FEA800C 		lsl	ip, r0, #2
 125 0032 04EB0C00 		add	r0, r4, ip
 126 0036 0261     		str	r2, [r0, #16]
  81:CONTROL/Src/votage.c ****         pid_6[i][3] = ((temp[i]- pid_6[i][4])%100)/10;
 127              		.loc 1 81 9 is_stmt 1 view .LVU24
 128              		.loc 1 81 32 is_stmt 0 view .LVU25
 129 0038 9B1A     		subs	r3, r3, r2
 130              		.loc 1 81 46 view .LVU26
 131 003a 1C4D     		ldr	r5, .L9+8
 132 003c A5FB0362 		umull	r6, r2, r5, r3
 133 0040 5209     		lsrs	r2, r2, #5
 134 0042 6426     		movs	r6, #100
 135 0044 06FB1232 		mls	r2, r6, r2, r3
 136              		.loc 1 81 51 view .LVU27
 137 0048 A7FB0272 		umull	r7, r2, r7, r2
 138 004c D208     		lsrs	r2, r2, #3
 139              		.loc 1 81 21 view .LVU28
 140 004e C260     		str	r2, [r0, #12]
  82:CONTROL/Src/votage.c ****         pid_6[i][2] = ((temp[i]- pid_6[i][4]- pid_6[i][3]*10)%1000)/100;
 141              		.loc 1 82 9 is_stmt 1 view .LVU29
 142              		.loc 1 82 58 is_stmt 0 view .LVU30
 143 0050 02EB8202 		add	r2, r2, r2, lsl #2
 144 0054 5700     		lsls	r7, r2, #1
 145              		.loc 1 82 45 view .LVU31
 146 0056 DB1B     		subs	r3, r3, r7
 147              		.loc 1 82 62 view .LVU32
 148 0058 154F     		ldr	r7, .L9+12
 149 005a A7FB03E2 		umull	lr, r2, r7, r3
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 5


 150 005e 9209     		lsrs	r2, r2, #6
 151 0060 4FF47A7E 		mov	lr, #1000
 152 0064 0EFB1232 		mls	r2, lr, r2, r3
 153              		.loc 1 82 68 view .LVU33
 154 0068 A5FB0252 		umull	r5, r2, r5, r2
 155 006c 5209     		lsrs	r2, r2, #5
 156              		.loc 1 82 21 view .LVU34
 157 006e 8260     		str	r2, [r0, #8]
  83:CONTROL/Src/votage.c ****         pid_6[i][1] = ((temp[i]- pid_6[i][4]- pid_6[i][3]*10-pid_6[i][2]*100)%10000)/1000;
 158              		.loc 1 83 9 is_stmt 1 view .LVU35
 159              		.loc 1 83 61 is_stmt 0 view .LVU36
 160 0070 06FB1233 		mls	r3, r6, r2, r3
 161              		.loc 1 83 78 view .LVU37
 162 0074 0F4D     		ldr	r5, .L9+16
 163 0076 A5FB0362 		umull	r6, r2, r5, r3
 164 007a 520B     		lsrs	r2, r2, #13
 165 007c 42F21076 		movw	r6, #10000
 166 0080 06FB1232 		mls	r2, r6, r2, r3
 167              		.loc 1 83 85 view .LVU38
 168 0084 A7FB0272 		umull	r7, r2, r7, r2
 169 0088 9209     		lsrs	r2, r2, #6
 170              		.loc 1 83 21 view .LVU39
 171 008a 4260     		str	r2, [r0, #4]
  84:CONTROL/Src/votage.c ****         pid_6[i][0] = (temp[i]- pid_6[i][4]- pid_6[i][3]*10-pid_6[i][2]*100-pid_6[i][1]*1000)/10000
 172              		.loc 1 84 9 is_stmt 1 view .LVU40
 173              		.loc 1 84 76 is_stmt 0 view .LVU41
 174 008c 0EFB1233 		mls	r3, lr, r2, r3
 175              		.loc 1 84 94 view .LVU42
 176 0090 A5FB0353 		umull	r5, r3, r5, r3
 177 0094 5B0B     		lsrs	r3, r3, #13
 178              		.loc 1 84 21 view .LVU43
 179 0096 44F80C30 		str	r3, [r4, ip]
  78:CONTROL/Src/votage.c ****     {
 180              		.loc 1 78 22 is_stmt 1 discriminator 3 view .LVU44
 181 009a 0131     		adds	r1, r1, #1
 182              	.LVL3:
 183              	.L6:
  78:CONTROL/Src/votage.c ****     {
 184              		.loc 1 78 18 discriminator 1 view .LVU45
 185 009c 0229     		cmp	r1, #2
 186 009e B6DD     		ble	.L7
 187              	.LBE4:
  85:CONTROL/Src/votage.c ****     }
  86:CONTROL/Src/votage.c **** }
 188              		.loc 1 86 1 is_stmt 0 view .LVU46
 189 00a0 05B0     		add	sp, sp, #20
 190              	.LCFI3:
 191              		.cfi_def_cfa_offset 20
 192              		@ sp needed
 193 00a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 194              	.L10:
 195              		.align	2
 196              	.L9:
 197 00a4 CDCCCCCC 		.word	-858993459
 198 00a8 00000000 		.word	pid_6
 199 00ac 1F85EB51 		.word	1374389535
 200 00b0 D34D6210 		.word	274877907
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 6


 201 00b4 5917B7D1 		.word	-776530087
 202              		.cfi_endproc
 203              	.LFE273:
 205              		.section	.text.UPDATE_VOTAGE_NUM,"ax",%progbits
 206              		.align	1
 207              		.global	UPDATE_VOTAGE_NUM
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 212              	UPDATE_VOTAGE_NUM:
 213              	.LFB274:
  87:CONTROL/Src/votage.c **** 
  88:CONTROL/Src/votage.c **** void UPDATE_VOTAGE_NUM(void)
  89:CONTROL/Src/votage.c **** {
 214              		.loc 1 89 1 is_stmt 1 view -0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 16
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 219              	.LCFI4:
 220              		.cfi_def_cfa_offset 20
 221              		.cfi_offset 4, -20
 222              		.cfi_offset 5, -16
 223              		.cfi_offset 6, -12
 224              		.cfi_offset 7, -8
 225              		.cfi_offset 14, -4
 226 0002 85B0     		sub	sp, sp, #20
 227              	.LCFI5:
 228              		.cfi_def_cfa_offset 40
  90:CONTROL/Src/votage.c ****     u32 temp[3];
 229              		.loc 1 90 5 view .LVU48
  91:CONTROL/Src/votage.c ****     temp[0] = KP*100;
 230              		.loc 1 91 5 view .LVU49
 231              		.loc 1 91 13 is_stmt 0 view .LVU50
 232 0004 40F2B723 		movw	r3, #695
 233 0008 0193     		str	r3, [sp, #4]
  92:CONTROL/Src/votage.c ****     temp[1] = KI*1000;
 234              		.loc 1 92 5 is_stmt 1 view .LVU51
 235              		.loc 1 92 13 is_stmt 0 view .LVU52
 236 000a 41F27073 		movw	r3, #6000
 237 000e 0293     		str	r3, [sp, #8]
  93:CONTROL/Src/votage.c ****     temp[2] = KD*10000;
 238              		.loc 1 93 5 is_stmt 1 view .LVU53
 239              		.loc 1 93 13 is_stmt 0 view .LVU54
 240 0010 0021     		movs	r1, #0
 241 0012 0391     		str	r1, [sp, #12]
  94:CONTROL/Src/votage.c ****     for(int i=0;i<3;i++)
 242              		.loc 1 94 5 is_stmt 1 view .LVU55
 243              	.LBB5:
 244              		.loc 1 94 9 view .LVU56
 245              	.LVL4:
 246              		.loc 1 94 5 is_stmt 0 view .LVU57
 247 0014 46E0     		b	.L12
 248              	.LVL5:
 249              	.L13:
  95:CONTROL/Src/votage.c ****     {
  96:CONTROL/Src/votage.c ****         pid_4[i][4] = temp[i]%10;
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 7


 250              		.loc 1 96 9 is_stmt 1 view .LVU58
 251              		.loc 1 96 27 is_stmt 0 view .LVU59
 252 0016 04AB     		add	r3, sp, #16
 253 0018 03EB8103 		add	r3, r3, r1, lsl #2
 254 001c 53F80C3C 		ldr	r3, [r3, #-12]
 255              		.loc 1 96 30 view .LVU60
 256 0020 224F     		ldr	r7, .L15
 257 0022 A7FB0302 		umull	r0, r2, r7, r3
 258 0026 D208     		lsrs	r2, r2, #3
 259 0028 02EB8202 		add	r2, r2, r2, lsl #2
 260 002c 5000     		lsls	r0, r2, #1
 261 002e 1A1A     		subs	r2, r3, r0
 262              		.loc 1 96 21 view .LVU61
 263 0030 1F4C     		ldr	r4, .L15+4
 264 0032 01EB8100 		add	r0, r1, r1, lsl #2
 265 0036 4FEA800C 		lsl	ip, r0, #2
 266 003a 04EB0C00 		add	r0, r4, ip
 267 003e 0261     		str	r2, [r0, #16]
  97:CONTROL/Src/votage.c ****         pid_4[i][3] = ((temp[i]- pid_4[i][4])%100)/10;
 268              		.loc 1 97 9 is_stmt 1 view .LVU62
 269              		.loc 1 97 32 is_stmt 0 view .LVU63
 270 0040 9B1A     		subs	r3, r3, r2
 271              		.loc 1 97 46 view .LVU64
 272 0042 1C4D     		ldr	r5, .L15+8
 273 0044 A5FB0362 		umull	r6, r2, r5, r3
 274 0048 5209     		lsrs	r2, r2, #5
 275 004a 6426     		movs	r6, #100
 276 004c 06FB1232 		mls	r2, r6, r2, r3
 277              		.loc 1 97 51 view .LVU65
 278 0050 A7FB0272 		umull	r7, r2, r7, r2
 279 0054 D208     		lsrs	r2, r2, #3
 280              		.loc 1 97 21 view .LVU66
 281 0056 C260     		str	r2, [r0, #12]
  98:CONTROL/Src/votage.c ****         pid_4[i][2] = ((temp[i]- pid_4[i][4]- pid_4[i][3]*10)%1000)/100;
 282              		.loc 1 98 9 is_stmt 1 view .LVU67
 283              		.loc 1 98 58 is_stmt 0 view .LVU68
 284 0058 02EB8202 		add	r2, r2, r2, lsl #2
 285 005c 5700     		lsls	r7, r2, #1
 286              		.loc 1 98 45 view .LVU69
 287 005e DB1B     		subs	r3, r3, r7
 288              		.loc 1 98 62 view .LVU70
 289 0060 154F     		ldr	r7, .L15+12
 290 0062 A7FB03E2 		umull	lr, r2, r7, r3
 291 0066 9209     		lsrs	r2, r2, #6
 292 0068 4FF47A7E 		mov	lr, #1000
 293 006c 0EFB1232 		mls	r2, lr, r2, r3
 294              		.loc 1 98 68 view .LVU71
 295 0070 A5FB0252 		umull	r5, r2, r5, r2
 296 0074 5209     		lsrs	r2, r2, #5
 297              		.loc 1 98 21 view .LVU72
 298 0076 8260     		str	r2, [r0, #8]
  99:CONTROL/Src/votage.c ****         pid_4[i][1] = ((temp[i]- pid_4[i][4]- pid_4[i][3]*10-pid_4[i][2]*100)%10000)/1000;
 299              		.loc 1 99 9 is_stmt 1 view .LVU73
 300              		.loc 1 99 61 is_stmt 0 view .LVU74
 301 0078 06FB1233 		mls	r3, r6, r2, r3
 302              		.loc 1 99 78 view .LVU75
 303 007c 0F4D     		ldr	r5, .L15+16
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 8


 304 007e A5FB0362 		umull	r6, r2, r5, r3
 305 0082 520B     		lsrs	r2, r2, #13
 306 0084 42F21076 		movw	r6, #10000
 307 0088 06FB1232 		mls	r2, r6, r2, r3
 308              		.loc 1 99 85 view .LVU76
 309 008c A7FB0272 		umull	r7, r2, r7, r2
 310 0090 9209     		lsrs	r2, r2, #6
 311              		.loc 1 99 21 view .LVU77
 312 0092 4260     		str	r2, [r0, #4]
 100:CONTROL/Src/votage.c ****         pid_4[i][0] = (temp[i]- pid_4[i][4]- pid_4[i][3]*10-pid_4[i][2]*100-pid_4[i][1]*1000)/10000
 313              		.loc 1 100 9 is_stmt 1 view .LVU78
 314              		.loc 1 100 76 is_stmt 0 view .LVU79
 315 0094 0EFB1233 		mls	r3, lr, r2, r3
 316              		.loc 1 100 94 view .LVU80
 317 0098 A5FB0353 		umull	r5, r3, r5, r3
 318 009c 5B0B     		lsrs	r3, r3, #13
 319              		.loc 1 100 21 view .LVU81
 320 009e 44F80C30 		str	r3, [r4, ip]
  94:CONTROL/Src/votage.c ****     {
 321              		.loc 1 94 22 is_stmt 1 discriminator 3 view .LVU82
 322 00a2 0131     		adds	r1, r1, #1
 323              	.LVL6:
 324              	.L12:
  94:CONTROL/Src/votage.c ****     {
 325              		.loc 1 94 18 discriminator 1 view .LVU83
 326 00a4 0229     		cmp	r1, #2
 327 00a6 B6DD     		ble	.L13
 328              	.LBE5:
 101:CONTROL/Src/votage.c ****     }
 102:CONTROL/Src/votage.c **** }
 329              		.loc 1 102 1 is_stmt 0 view .LVU84
 330 00a8 05B0     		add	sp, sp, #20
 331              	.LCFI6:
 332              		.cfi_def_cfa_offset 20
 333              		@ sp needed
 334 00aa F0BD     		pop	{r4, r5, r6, r7, pc}
 335              	.L16:
 336              		.align	2
 337              	.L15:
 338 00ac CDCCCCCC 		.word	-858993459
 339 00b0 00000000 		.word	pid_4
 340 00b4 1F85EB51 		.word	1374389535
 341 00b8 D34D6210 		.word	274877907
 342 00bc 5917B7D1 		.word	-776530087
 343              		.cfi_endproc
 344              	.LFE274:
 346              		.global	__aeabi_f2d
 347              		.global	__aeabi_dmul
 348              		.global	__aeabi_dadd
 349              		.global	__aeabi_d2f
 350              		.global	__aeabi_ui2d
 351              		.section	.text.UPDATE_VOTAGE_PID,"ax",%progbits
 352              		.align	1
 353              		.global	UPDATE_VOTAGE_PID
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 9


 358              	UPDATE_VOTAGE_PID:
 359              	.LFB275:
 103:CONTROL/Src/votage.c **** 
 104:CONTROL/Src/votage.c **** void UPDATE_VOTAGE_PID(void)
 105:CONTROL/Src/votage.c **** {
 360              		.loc 1 105 1 is_stmt 1 view -0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 365              	.LCFI7:
 366              		.cfi_def_cfa_offset 24
 367              		.cfi_offset 3, -24
 368              		.cfi_offset 4, -20
 369              		.cfi_offset 5, -16
 370              		.cfi_offset 6, -12
 371              		.cfi_offset 7, -8
 372              		.cfi_offset 14, -4
 373 0002 2DED028B 		vpush.64	{d8}
 374              	.LCFI8:
 375              		.cfi_def_cfa_offset 32
 376              		.cfi_offset 80, -32
 377              		.cfi_offset 81, -28
 106:CONTROL/Src/votage.c ****     S_4.Kp = (float32_t)(pid_4[0][0])*100 + (float32_t)(pid_4[0][1])*100 + (float32_t)(pid_4[0][2])
 378              		.loc 1 106 5 view .LVU86
 379              		.loc 1 106 34 is_stmt 0 view .LVU87
 380 0006 8C4C     		ldr	r4, .L19+32
 381              		.loc 1 106 14 view .LVU88
 382 0008 D4ED007A 		vldr.32	s15, [r4]	@ int
 383 000c F8EE677A 		vcvt.f32.u32	s15, s15
 384              		.loc 1 106 38 view .LVU89
 385 0010 DFED8A6A 		vldr.32	s13, .L19+36
 386 0014 67EEA67A 		vmul.f32	s15, s15, s13
 387              		.loc 1 106 45 view .LVU90
 388 0018 94ED017A 		vldr.32	s14, [r4, #4]	@ int
 389 001c B8EE477A 		vcvt.f32.u32	s14, s14
 390              		.loc 1 106 69 view .LVU91
 391 0020 27EE267A 		vmul.f32	s14, s14, s13
 392              		.loc 1 106 43 view .LVU92
 393 0024 77EE877A 		vadd.f32	s15, s15, s14
 394              		.loc 1 106 76 view .LVU93
 395 0028 94ED027A 		vldr.32	s14, [r4, #8]	@ int
 396 002c B8EE477A 		vcvt.f32.u32	s14, s14
 397              		.loc 1 106 74 view .LVU94
 398 0030 77EE877A 		vadd.f32	s15, s15, s14
 399 0034 17EE900A 		vmov	r0, s15
 400 0038 FFF7FEFF 		bl	__aeabi_f2d
 401              	.LVL7:
 402 003c 0646     		mov	r6, r0
 403 003e 0F46     		mov	r7, r1
 404              		.loc 1 106 103 view .LVU95
 405 0040 D4ED037A 		vldr.32	s15, [r4, #12]	@ int
 406 0044 F8EE677A 		vcvt.f32.u32	s15, s15
 407 0048 17EE900A 		vmov	r0, s15
 408 004c FFF7FEFF 		bl	__aeabi_f2d
 409              	.LVL8:
 410              		.loc 1 106 127 view .LVU96
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 10


 411 0050 71A3     		adr	r3, .L19
 412 0052 D3E90023 		ldrd	r2, [r3]
 413 0056 FFF7FEFF 		bl	__aeabi_dmul
 414              	.LVL9:
 415 005a 0246     		mov	r2, r0
 416 005c 0B46     		mov	r3, r1
 417              		.loc 1 106 101 view .LVU97
 418 005e 3046     		mov	r0, r6
 419 0060 3946     		mov	r1, r7
 420 0062 FFF7FEFF 		bl	__aeabi_dadd
 421              	.LVL10:
 422 0066 0646     		mov	r6, r0
 423 0068 0F46     		mov	r7, r1
 424              		.loc 1 106 134 view .LVU98
 425 006a D4ED047A 		vldr.32	s15, [r4, #16]	@ int
 426 006e F8EE677A 		vcvt.f32.u32	s15, s15
 427 0072 17EE900A 		vmov	r0, s15
 428 0076 FFF7FEFF 		bl	__aeabi_f2d
 429              	.LVL11:
 430              		.loc 1 106 158 view .LVU99
 431 007a 69A3     		adr	r3, .L19+8
 432 007c D3E90023 		ldrd	r2, [r3]
 433 0080 FFF7FEFF 		bl	__aeabi_dmul
 434              	.LVL12:
 435 0084 0246     		mov	r2, r0
 436 0086 0B46     		mov	r3, r1
 437              		.loc 1 106 132 view .LVU100
 438 0088 3046     		mov	r0, r6
 439 008a 3946     		mov	r1, r7
 440 008c FFF7FEFF 		bl	__aeabi_dadd
 441              	.LVL13:
 442 0090 FFF7FEFF 		bl	__aeabi_d2f
 443              	.LVL14:
 444              		.loc 1 106 12 view .LVU101
 445 0094 6A4D     		ldr	r5, .L19+40
 446 0096 A861     		str	r0, [r5, #24]	@ float
 107:CONTROL/Src/votage.c ****     S_4.Ki = (float32_t)(pid_4[1][0])*10 + (float32_t)(pid_4[1][1]) + (float32_t)(pid_4[1][2])*0.1 
 447              		.loc 1 107 5 is_stmt 1 view .LVU102
 448              		.loc 1 107 14 is_stmt 0 view .LVU103
 449 0098 D4ED057A 		vldr.32	s15, [r4, #20]	@ int
 450 009c F8EE677A 		vcvt.f32.u32	s15, s15
 451              		.loc 1 107 38 view .LVU104
 452 00a0 B2EE047A 		vmov.f32	s14, #1.0e+1
 453 00a4 67EE877A 		vmul.f32	s15, s15, s14
 454              		.loc 1 107 44 view .LVU105
 455 00a8 94ED067A 		vldr.32	s14, [r4, #24]	@ int
 456 00ac B8EE477A 		vcvt.f32.u32	s14, s14
 457              		.loc 1 107 42 view .LVU106
 458 00b0 77EE877A 		vadd.f32	s15, s15, s14
 459 00b4 17EE900A 		vmov	r0, s15
 460 00b8 FFF7FEFF 		bl	__aeabi_f2d
 461              	.LVL15:
 462 00bc 0646     		mov	r6, r0
 463 00be 0F46     		mov	r7, r1
 464              		.loc 1 107 71 view .LVU107
 465 00c0 D4ED077A 		vldr.32	s15, [r4, #28]	@ int
 466 00c4 F8EE677A 		vcvt.f32.u32	s15, s15
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 11


 467 00c8 17EE900A 		vmov	r0, s15
 468 00cc FFF7FEFF 		bl	__aeabi_f2d
 469              	.LVL16:
 470              		.loc 1 107 95 view .LVU108
 471 00d0 51A3     		adr	r3, .L19
 472 00d2 D3E90023 		ldrd	r2, [r3]
 473 00d6 FFF7FEFF 		bl	__aeabi_dmul
 474              	.LVL17:
 475 00da 0246     		mov	r2, r0
 476 00dc 0B46     		mov	r3, r1
 477              		.loc 1 107 69 view .LVU109
 478 00de 3046     		mov	r0, r6
 479 00e0 3946     		mov	r1, r7
 480 00e2 FFF7FEFF 		bl	__aeabi_dadd
 481              	.LVL18:
 482 00e6 0646     		mov	r6, r0
 483 00e8 0F46     		mov	r7, r1
 484              		.loc 1 107 102 view .LVU110
 485 00ea D4ED087A 		vldr.32	s15, [r4, #32]	@ int
 486 00ee F8EE677A 		vcvt.f32.u32	s15, s15
 487 00f2 17EE900A 		vmov	r0, s15
 488 00f6 FFF7FEFF 		bl	__aeabi_f2d
 489              	.LVL19:
 490              		.loc 1 107 126 view .LVU111
 491 00fa 49A3     		adr	r3, .L19+8
 492 00fc D3E90023 		ldrd	r2, [r3]
 493 0100 FFF7FEFF 		bl	__aeabi_dmul
 494              	.LVL20:
 495 0104 0246     		mov	r2, r0
 496 0106 0B46     		mov	r3, r1
 497              		.loc 1 107 100 view .LVU112
 498 0108 3046     		mov	r0, r6
 499 010a 3946     		mov	r1, r7
 500 010c FFF7FEFF 		bl	__aeabi_dadd
 501              	.LVL21:
 502 0110 0646     		mov	r6, r0
 503 0112 0F46     		mov	r7, r1
 504              		.loc 1 107 134 view .LVU113
 505 0114 D4ED097A 		vldr.32	s15, [r4, #36]	@ int
 506 0118 F8EE677A 		vcvt.f32.u32	s15, s15
 507 011c 17EE900A 		vmov	r0, s15
 508 0120 FFF7FEFF 		bl	__aeabi_f2d
 509              	.LVL22:
 510              		.loc 1 107 158 view .LVU114
 511 0124 40A3     		adr	r3, .L19+16
 512 0126 D3E90023 		ldrd	r2, [r3]
 513 012a FFF7FEFF 		bl	__aeabi_dmul
 514              	.LVL23:
 515 012e 0246     		mov	r2, r0
 516 0130 0B46     		mov	r3, r1
 517              		.loc 1 107 132 view .LVU115
 518 0132 3046     		mov	r0, r6
 519 0134 3946     		mov	r1, r7
 520 0136 FFF7FEFF 		bl	__aeabi_dadd
 521              	.LVL24:
 522 013a FFF7FEFF 		bl	__aeabi_d2f
 523              	.LVL25:
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 12


 524              		.loc 1 107 12 view .LVU116
 525 013e E861     		str	r0, [r5, #28]	@ float
 108:CONTROL/Src/votage.c ****     S_4.Ki *= 0.01;
 526              		.loc 1 108 5 is_stmt 1 view .LVU117
 527              		.loc 1 108 8 is_stmt 0 view .LVU118
 528 0140 FFF7FEFF 		bl	__aeabi_f2d
 529              	.LVL26:
 530              		.loc 1 108 12 view .LVU119
 531 0144 36A3     		adr	r3, .L19+8
 532 0146 D3E90023 		ldrd	r2, [r3]
 533 014a FFF7FEFF 		bl	__aeabi_dmul
 534              	.LVL27:
 535 014e FFF7FEFF 		bl	__aeabi_d2f
 536              	.LVL28:
 537 0152 E861     		str	r0, [r5, #28]	@ float
 109:CONTROL/Src/votage.c ****     S_4.Kd = (float32_t)(pid_4[2][0]) + (float32_t)(pid_4[2][1]*0.1) + (float32_t)(pid_4[2][2])*0.0
 538              		.loc 1 109 5 is_stmt 1 view .LVU120
 539              		.loc 1 109 14 is_stmt 0 view .LVU121
 540 0154 D4ED0A7A 		vldr.32	s15, [r4, #40]	@ int
 541 0158 B8EE678A 		vcvt.f32.u32	s16, s15
 542              		.loc 1 109 64 view .LVU122
 543 015c E06A     		ldr	r0, [r4, #44]
 544 015e FFF7FEFF 		bl	__aeabi_ui2d
 545              	.LVL29:
 546 0162 2DA3     		adr	r3, .L19
 547 0164 D3E90023 		ldrd	r2, [r3]
 548 0168 FFF7FEFF 		bl	__aeabi_dmul
 549              	.LVL30:
 550              		.loc 1 109 41 view .LVU123
 551 016c FFF7FEFF 		bl	__aeabi_d2f
 552              	.LVL31:
 553 0170 07EE900A 		vmov	s15, r0
 554              		.loc 1 109 39 view .LVU124
 555 0174 78EE277A 		vadd.f32	s15, s16, s15
 556 0178 17EE900A 		vmov	r0, s15
 557 017c FFF7FEFF 		bl	__aeabi_f2d
 558              	.LVL32:
 559 0180 0646     		mov	r6, r0
 560 0182 0F46     		mov	r7, r1
 561              		.loc 1 109 72 view .LVU125
 562 0184 D4ED0C7A 		vldr.32	s15, [r4, #48]	@ int
 563 0188 F8EE677A 		vcvt.f32.u32	s15, s15
 564 018c 17EE900A 		vmov	r0, s15
 565 0190 FFF7FEFF 		bl	__aeabi_f2d
 566              	.LVL33:
 567              		.loc 1 109 96 view .LVU126
 568 0194 22A3     		adr	r3, .L19+8
 569 0196 D3E90023 		ldrd	r2, [r3]
 570 019a FFF7FEFF 		bl	__aeabi_dmul
 571              	.LVL34:
 572 019e 0246     		mov	r2, r0
 573 01a0 0B46     		mov	r3, r1
 574              		.loc 1 109 70 view .LVU127
 575 01a2 3046     		mov	r0, r6
 576 01a4 3946     		mov	r1, r7
 577 01a6 FFF7FEFF 		bl	__aeabi_dadd
 578              	.LVL35:
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 13


 579 01aa 0646     		mov	r6, r0
 580 01ac 0F46     		mov	r7, r1
 581              		.loc 1 109 104 view .LVU128
 582 01ae D4ED0D7A 		vldr.32	s15, [r4, #52]	@ int
 583 01b2 F8EE677A 		vcvt.f32.u32	s15, s15
 584 01b6 17EE900A 		vmov	r0, s15
 585 01ba FFF7FEFF 		bl	__aeabi_f2d
 586              	.LVL36:
 587              		.loc 1 109 128 view .LVU129
 588 01be 1AA3     		adr	r3, .L19+16
 589 01c0 D3E90023 		ldrd	r2, [r3]
 590 01c4 FFF7FEFF 		bl	__aeabi_dmul
 591              	.LVL37:
 592 01c8 0246     		mov	r2, r0
 593 01ca 0B46     		mov	r3, r1
 594              		.loc 1 109 102 view .LVU130
 595 01cc 3046     		mov	r0, r6
 596 01ce 3946     		mov	r1, r7
 597 01d0 FFF7FEFF 		bl	__aeabi_dadd
 598              	.LVL38:
 599 01d4 0646     		mov	r6, r0
 600 01d6 0F46     		mov	r7, r1
 601              		.loc 1 109 157 view .LVU131
 602 01d8 A06B     		ldr	r0, [r4, #56]
 603              		.loc 1 109 137 view .LVU132
 604 01da 07EE900A 		vmov	s15, r0	@ int
 605 01de F8EE677A 		vcvt.f32.u32	s15, s15
 606 01e2 17EE900A 		vmov	r0, s15
 607 01e6 FFF7FEFF 		bl	__aeabi_f2d
 608              	.LVL39:
 609              		.loc 1 109 161 view .LVU133
 610 01ea 11A3     		adr	r3, .L19+24
 611 01ec D3E90023 		ldrd	r2, [r3]
 612 01f0 FFF7FEFF 		bl	__aeabi_dmul
 613              	.LVL40:
 614 01f4 0246     		mov	r2, r0
 615 01f6 0B46     		mov	r3, r1
 616              		.loc 1 109 135 view .LVU134
 617 01f8 3046     		mov	r0, r6
 618 01fa 3946     		mov	r1, r7
 619 01fc FFF7FEFF 		bl	__aeabi_dadd
 620              	.LVL41:
 621 0200 FFF7FEFF 		bl	__aeabi_d2f
 622              	.LVL42:
 623              		.loc 1 109 12 view .LVU135
 624 0204 2862     		str	r0, [r5, #32]	@ float
 110:CONTROL/Src/votage.c ****     arm_pid_init_f32(&S_4, 0);
 625              		.loc 1 110 5 is_stmt 1 view .LVU136
 626 0206 0021     		movs	r1, #0
 627 0208 2846     		mov	r0, r5
 628 020a FFF7FEFF 		bl	arm_pid_init_f32
 629              	.LVL43:
 111:CONTROL/Src/votage.c **** }
 630              		.loc 1 111 1 is_stmt 0 view .LVU137
 631 020e BDEC028B 		vldm	sp!, {d8}
 632              	.LCFI9:
 633              		.cfi_restore 80
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 14


 634              		.cfi_restore 81
 635              		.cfi_def_cfa_offset 24
 636 0212 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 637              	.L20:
 638 0214 AFF30080 		.align	3
 639              	.L19:
 640 0218 9A999999 		.word	-1717986918
 641 021c 9999B93F 		.word	1069128089
 642 0220 7B14AE47 		.word	1202590843
 643 0224 E17A843F 		.word	1065646817
 644 0228 FCA9F1D2 		.word	-755914244
 645 022c 4D62503F 		.word	1062232653
 646 0230 2D431CEB 		.word	-350469331
 647 0234 E2361A3F 		.word	1058682594
 648 0238 00000000 		.word	pid_4
 649 023c 0000C842 		.word	1120403456
 650 0240 00000000 		.word	S_4
 651              		.cfi_endproc
 652              	.LFE275:
 654              		.section	.text.UPDATE_RATO_PID,"ax",%progbits
 655              		.align	1
 656              		.global	UPDATE_RATO_PID
 657              		.syntax unified
 658              		.thumb
 659              		.thumb_func
 661              	UPDATE_RATO_PID:
 662              	.LFB276:
 112:CONTROL/Src/votage.c **** 
 113:CONTROL/Src/votage.c **** void UPDATE_RATO_PID(void)
 114:CONTROL/Src/votage.c **** {
 663              		.loc 1 114 1 is_stmt 1 view -0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667 0000 D0B5     		push	{r4, r6, r7, lr}
 668              	.LCFI10:
 669              		.cfi_def_cfa_offset 16
 670              		.cfi_offset 4, -16
 671              		.cfi_offset 6, -12
 672              		.cfi_offset 7, -8
 673              		.cfi_offset 14, -4
 674 0002 2DED028B 		vpush.64	{d8}
 675              	.LCFI11:
 676              		.cfi_def_cfa_offset 24
 677              		.cfi_offset 80, -24
 678              		.cfi_offset 81, -20
 115:CONTROL/Src/votage.c ****     temp_rato = (float32_t)(pid_6[2][0]) + (float32_t)(pid_6[2][1]*0.1) + (float32_t)(pid_6[2][2])*
 679              		.loc 1 115 5 view .LVU139
 680              		.loc 1 115 37 is_stmt 0 view .LVU140
 681 0006 384C     		ldr	r4, .L23+32
 682              		.loc 1 115 17 view .LVU141
 683 0008 D4ED0A7A 		vldr.32	s15, [r4, #40]	@ int
 684 000c B8EE678A 		vcvt.f32.u32	s16, s15
 685              		.loc 1 115 67 view .LVU142
 686 0010 E06A     		ldr	r0, [r4, #44]
 687 0012 FFF7FEFF 		bl	__aeabi_ui2d
 688              	.LVL44:
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 15


 689 0016 2CA3     		adr	r3, .L23
 690 0018 D3E90023 		ldrd	r2, [r3]
 691 001c FFF7FEFF 		bl	__aeabi_dmul
 692              	.LVL45:
 693              		.loc 1 115 44 view .LVU143
 694 0020 FFF7FEFF 		bl	__aeabi_d2f
 695              	.LVL46:
 696 0024 07EE900A 		vmov	s15, r0
 697              		.loc 1 115 42 view .LVU144
 698 0028 78EE277A 		vadd.f32	s15, s16, s15
 699 002c 17EE900A 		vmov	r0, s15
 700 0030 FFF7FEFF 		bl	__aeabi_f2d
 701              	.LVL47:
 702 0034 0646     		mov	r6, r0
 703 0036 0F46     		mov	r7, r1
 704              		.loc 1 115 75 view .LVU145
 705 0038 D4ED0C7A 		vldr.32	s15, [r4, #48]	@ int
 706 003c F8EE677A 		vcvt.f32.u32	s15, s15
 707 0040 17EE900A 		vmov	r0, s15
 708 0044 FFF7FEFF 		bl	__aeabi_f2d
 709              	.LVL48:
 710              		.loc 1 115 99 view .LVU146
 711 0048 21A3     		adr	r3, .L23+8
 712 004a D3E90023 		ldrd	r2, [r3]
 713 004e FFF7FEFF 		bl	__aeabi_dmul
 714              	.LVL49:
 715 0052 0246     		mov	r2, r0
 716 0054 0B46     		mov	r3, r1
 717              		.loc 1 115 73 view .LVU147
 718 0056 3046     		mov	r0, r6
 719 0058 3946     		mov	r1, r7
 720 005a FFF7FEFF 		bl	__aeabi_dadd
 721              	.LVL50:
 722 005e 0646     		mov	r6, r0
 723 0060 0F46     		mov	r7, r1
 724              		.loc 1 115 107 view .LVU148
 725 0062 D4ED0D7A 		vldr.32	s15, [r4, #52]	@ int
 726 0066 F8EE677A 		vcvt.f32.u32	s15, s15
 727 006a 17EE900A 		vmov	r0, s15
 728 006e FFF7FEFF 		bl	__aeabi_f2d
 729              	.LVL51:
 730              		.loc 1 115 131 view .LVU149
 731 0072 19A3     		adr	r3, .L23+16
 732 0074 D3E90023 		ldrd	r2, [r3]
 733 0078 FFF7FEFF 		bl	__aeabi_dmul
 734              	.LVL52:
 735 007c 0246     		mov	r2, r0
 736 007e 0B46     		mov	r3, r1
 737              		.loc 1 115 105 view .LVU150
 738 0080 3046     		mov	r0, r6
 739 0082 3946     		mov	r1, r7
 740 0084 FFF7FEFF 		bl	__aeabi_dadd
 741              	.LVL53:
 742 0088 0646     		mov	r6, r0
 743 008a 0F46     		mov	r7, r1
 744              		.loc 1 115 160 view .LVU151
 745 008c A06B     		ldr	r0, [r4, #56]
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 16


 746              		.loc 1 115 140 view .LVU152
 747 008e 07EE900A 		vmov	s15, r0	@ int
 748 0092 F8EE677A 		vcvt.f32.u32	s15, s15
 749 0096 17EE900A 		vmov	r0, s15
 750 009a FFF7FEFF 		bl	__aeabi_f2d
 751              	.LVL54:
 752              		.loc 1 115 164 view .LVU153
 753 009e 10A3     		adr	r3, .L23+24
 754 00a0 D3E90023 		ldrd	r2, [r3]
 755 00a4 FFF7FEFF 		bl	__aeabi_dmul
 756              	.LVL55:
 757 00a8 0246     		mov	r2, r0
 758 00aa 0B46     		mov	r3, r1
 759              		.loc 1 115 138 view .LVU154
 760 00ac 3046     		mov	r0, r6
 761 00ae 3946     		mov	r1, r7
 762 00b0 FFF7FEFF 		bl	__aeabi_dadd
 763              	.LVL56:
 764 00b4 FFF7FEFF 		bl	__aeabi_d2f
 765              	.LVL57:
 766              		.loc 1 115 15 view .LVU155
 767 00b8 0C4B     		ldr	r3, .L23+36
 768 00ba 1860     		str	r0, [r3]	@ float
 116:CONTROL/Src/votage.c **** }
 769              		.loc 1 116 1 view .LVU156
 770 00bc BDEC028B 		vldm	sp!, {d8}
 771              	.LCFI12:
 772              		.cfi_restore 80
 773              		.cfi_restore 81
 774              		.cfi_def_cfa_offset 16
 775 00c0 D0BD     		pop	{r4, r6, r7, pc}
 776              	.L24:
 777 00c2 00BFAFF3 		.align	3
 777      0080
 778              	.L23:
 779 00c8 9A999999 		.word	-1717986918
 780 00cc 9999B93F 		.word	1069128089
 781 00d0 7B14AE47 		.word	1202590843
 782 00d4 E17A843F 		.word	1065646817
 783 00d8 FCA9F1D2 		.word	-755914244
 784 00dc 4D62503F 		.word	1062232653
 785 00e0 2D431CEB 		.word	-350469331
 786 00e4 E2361A3F 		.word	1058682594
 787 00e8 00000000 		.word	pid_6
 788 00ec 00000000 		.word	temp_rato
 789              		.cfi_endproc
 790              	.LFE276:
 792              		.global	__aeabi_dsub
 793              		.global	__aeabi_dcmpge
 794              		.global	__aeabi_dcmple
 795              		.global	__aeabi_d2uiz
 796              		.section	.text.COUNT_VOTAGE_PID,"ax",%progbits
 797              		.align	1
 798              		.global	COUNT_VOTAGE_PID
 799              		.syntax unified
 800              		.thumb
 801              		.thumb_func
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 17


 803              	COUNT_VOTAGE_PID:
 804              	.LFB277:
 117:CONTROL/Src/votage.c **** 
 118:CONTROL/Src/votage.c **** void COUNT_VOTAGE_PID(void)
 119:CONTROL/Src/votage.c **** {
 805              		.loc 1 119 1 is_stmt 1 view -0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 0
 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 810              	.LCFI13:
 811              		.cfi_def_cfa_offset 24
 812              		.cfi_offset 4, -24
 813              		.cfi_offset 5, -20
 814              		.cfi_offset 6, -16
 815              		.cfi_offset 7, -12
 816              		.cfi_offset 8, -8
 817              		.cfi_offset 14, -4
 120:CONTROL/Src/votage.c ****     /*
 121:CONTROL/Src/votage.c ****     angle_3 = (float32_t)(count_3);
 122:CONTROL/Src/votage.c ****     angle_3 = angle_3*0.01570795;
 123:CONTROL/Src/votage.c ****     V_ref_3 = arm_sin_f32(angle_3);
 124:CONTROL/Src/votage.c ****     V_ref_3 = V_ref_3*VREF*1.414;
 125:CONTROL/Src/votage.c ****     V_error = V_ref_3 - OUTPUT_VOTAGE;
 126:CONTROL/Src/votage.c ****     PID_output = arm_pid_f32(&S_4, V_error);
 127:CONTROL/Src/votage.c ****     if(PID_output*10>1372) TIM1->CCR1=1372; 
 128:CONTROL/Src/votage.c ****     else if(PID_output*10<28) TIM1->CCR1=28;
 129:CONTROL/Src/votage.c ****     else TIM1->CCR1 = PID_output*10;
 130:CONTROL/Src/votage.c **** 
 131:CONTROL/Src/votage.c ****     if(count_3==399) count_3 = 0;
 132:CONTROL/Src/votage.c ****     else count_3++;
 133:CONTROL/Src/votage.c ****     */
 134:CONTROL/Src/votage.c ****     if(count_3!=399)
 818              		.loc 1 134 5 view .LVU158
 819              		.loc 1 134 15 is_stmt 0 view .LVU159
 820 0004 7C4B     		ldr	r3, .L39+48
 821 0006 1C68     		ldr	r4, [r3]
 822              		.loc 1 134 7 view .LVU160
 823 0008 40F28F13 		movw	r3, #399
 824 000c 9C42     		cmp	r4, r3
 825 000e 51D0     		beq	.L26
 135:CONTROL/Src/votage.c ****     {
 136:CONTROL/Src/votage.c ****         //SQUARE BUFFER
 137:CONTROL/Src/votage.c ****         square_buffer += OUTPUT_VOTAGE*OUTPUT_VOTAGE; 
 826              		.loc 1 137 9 is_stmt 1 view .LVU161
 827              		.loc 1 137 26 is_stmt 0 view .LVU162
 828 0010 7A4B     		ldr	r3, .L39+52
 829 0012 D3ED007A 		vldr.32	s15, [r3]
 830              		.loc 1 137 39 view .LVU163
 831 0016 67EEA77A 		vmul.f32	s15, s15, s15
 832              		.loc 1 137 23 view .LVU164
 833 001a 794B     		ldr	r3, .L39+56
 834 001c 93ED007A 		vldr.32	s14, [r3]
 835 0020 77EE277A 		vadd.f32	s15, s14, s15
 836 0024 C3ED007A 		vstr.32	s15, [r3]
 837              	.L27:
 138:CONTROL/Src/votage.c ****     }
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 18


 139:CONTROL/Src/votage.c ****     else
 140:CONTROL/Src/votage.c ****     {
 141:CONTROL/Src/votage.c ****         //SQUARE BUFFER
 142:CONTROL/Src/votage.c ****         square_buffer += OUTPUT_VOTAGE*OUTPUT_VOTAGE; 
 143:CONTROL/Src/votage.c ****         square_buffer = square_buffer/400;
 144:CONTROL/Src/votage.c ****         
 145:CONTROL/Src/votage.c ****         //Debug1
 146:CONTROL/Src/votage.c ****         debug_votage = square_buffer;
 147:CONTROL/Src/votage.c ****         
 148:CONTROL/Src/votage.c ****         //PID COUNT
 149:CONTROL/Src/votage.c ****         V_error = VREF*VREF - square_buffer;
 150:CONTROL/Src/votage.c ****         V_error *=0.05;
 151:CONTROL/Src/votage.c ****         PID_output = arm_pid_f32(&S_4, V_error);
 152:CONTROL/Src/votage.c ****         PID_output*=0.001;
 153:CONTROL/Src/votage.c **** 
 154:CONTROL/Src/votage.c ****         //TEMP RATO INPUT
 155:CONTROL/Src/votage.c ****         temp_rato = PID_output*100;
 156:CONTROL/Src/votage.c **** 
 157:CONTROL/Src/votage.c ****         //Debug1
 158:CONTROL/Src/votage.c ****         debug_rate = PID_output*100;
 159:CONTROL/Src/votage.c **** 
 160:CONTROL/Src/votage.c **** 
 161:CONTROL/Src/votage.c **** 
 162:CONTROL/Src/votage.c ****         if(PID_output>=0.99) PID_output = 0.99;
 163:CONTROL/Src/votage.c ****         else if(PID_output<=0.01) PID_output = 0.01;
 164:CONTROL/Src/votage.c **** 
 165:CONTROL/Src/votage.c ****         square_buffer = 0;
 166:CONTROL/Src/votage.c ****     }
 167:CONTROL/Src/votage.c ****     TIM1->CCR1 = 700.f + 0.16666667* PID_output * (float32_t)(spwm_group[count_3]);
 838              		.loc 1 167 5 is_stmt 1 view .LVU165
 839              		.loc 1 167 36 is_stmt 0 view .LVU166
 840 0028 764B     		ldr	r3, .L39+60
 841 002a 1868     		ldr	r0, [r3]	@ float
 842 002c FFF7FEFF 		bl	__aeabi_f2d
 843              	.LVL58:
 844 0030 65A3     		adr	r3, .L39
 845 0032 D3E90023 		ldrd	r2, [r3]
 846 0036 FFF7FEFF 		bl	__aeabi_dmul
 847              	.LVL59:
 848 003a 0646     		mov	r6, r0
 849 003c 0F46     		mov	r7, r1
 850              		.loc 1 167 73 view .LVU167
 851 003e DFF8F481 		ldr	r8, .L39+108
 852              		.loc 1 167 51 view .LVU168
 853 0042 58F82430 		ldr	r3, [r8, r4, lsl #2]
 854 0046 07EE903A 		vmov	s15, r3	@ int
 855 004a F8EEE77A 		vcvt.f32.s32	s15, s15
 856 004e 17EE900A 		vmov	r0, s15
 857 0052 FFF7FEFF 		bl	__aeabi_f2d
 858              	.LVL60:
 859 0056 0246     		mov	r2, r0
 860 0058 0B46     		mov	r3, r1
 861              		.loc 1 167 49 view .LVU169
 862 005a 3046     		mov	r0, r6
 863 005c 3946     		mov	r1, r7
 864 005e FFF7FEFF 		bl	__aeabi_dmul
 865              	.LVL61:
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 19


 866              		.loc 1 167 24 view .LVU170
 867 0062 0022     		movs	r2, #0
 868 0064 684B     		ldr	r3, .L39+64
 869 0066 FFF7FEFF 		bl	__aeabi_dadd
 870              	.LVL62:
 871              		.loc 1 167 16 view .LVU171
 872 006a FFF7FEFF 		bl	__aeabi_d2uiz
 873              	.LVL63:
 874 006e 674D     		ldr	r5, .L39+68
 875 0070 6863     		str	r0, [r5, #52]
 168:CONTROL/Src/votage.c ****     TIM1->CCR3 = 700.f + 0.16666667* PID_output * (float32_t)(spwm_group[count_3]);
 876              		.loc 1 168 5 is_stmt 1 view .LVU172
 877              		.loc 1 168 73 is_stmt 0 view .LVU173
 878 0072 58F82400 		ldr	r0, [r8, r4, lsl #2]
 879              		.loc 1 168 51 view .LVU174
 880 0076 07EE900A 		vmov	s15, r0	@ int
 881 007a F8EEE77A 		vcvt.f32.s32	s15, s15
 882 007e 17EE900A 		vmov	r0, s15
 883 0082 FFF7FEFF 		bl	__aeabi_f2d
 884              	.LVL64:
 885 0086 0246     		mov	r2, r0
 886 0088 0B46     		mov	r3, r1
 887              		.loc 1 168 49 view .LVU175
 888 008a 3046     		mov	r0, r6
 889 008c 3946     		mov	r1, r7
 890 008e FFF7FEFF 		bl	__aeabi_dmul
 891              	.LVL65:
 892              		.loc 1 168 24 view .LVU176
 893 0092 0022     		movs	r2, #0
 894 0094 5C4B     		ldr	r3, .L39+64
 895 0096 FFF7FEFF 		bl	__aeabi_dadd
 896              	.LVL66:
 897              		.loc 1 168 16 view .LVU177
 898 009a FFF7FEFF 		bl	__aeabi_d2uiz
 899              	.LVL67:
 900 009e E863     		str	r0, [r5, #60]
 169:CONTROL/Src/votage.c **** 
 170:CONTROL/Src/votage.c ****     // TIM1->CCR1 = 700.f + 0.16666667* 0.8 * (float32_t)(spwm_group[count_3]);
 171:CONTROL/Src/votage.c ****     // TIM1->CCR3 = 700.f + 0.16666667* 0.8 * (float32_t)(spwm_group[count_3]);
 172:CONTROL/Src/votage.c **** 
 173:CONTROL/Src/votage.c ****     if(count_3==399) count_3 = 0;
 901              		.loc 1 173 5 is_stmt 1 view .LVU178
 902              		.loc 1 173 7 is_stmt 0 view .LVU179
 903 00a0 40F28F13 		movw	r3, #399
 904 00a4 9C42     		cmp	r4, r3
 905 00a6 00F08B80 		beq	.L38
 174:CONTROL/Src/votage.c ****     else count_3++; 
 906              		.loc 1 174 10 is_stmt 1 view .LVU180
 907              		.loc 1 174 17 is_stmt 0 view .LVU181
 908 00aa 0134     		adds	r4, r4, #1
 909 00ac 524B     		ldr	r3, .L39+48
 910 00ae 1C60     		str	r4, [r3]
 911              	.L25:
 175:CONTROL/Src/votage.c **** }...
 912              		.loc 1 175 1 view .LVU182
 913 00b0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 914              	.L26:
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 20


 142:CONTROL/Src/votage.c ****         square_buffer += OUTPUT_VOTAGE*OUTPUT_VOTAGE; 
 915              		.loc 1 142 9 is_stmt 1 view .LVU183
 142:CONTROL/Src/votage.c ****         square_buffer += OUTPUT_VOTAGE*OUTPUT_VOTAGE; 
 916              		.loc 1 142 26 is_stmt 0 view .LVU184
 917 00b4 514B     		ldr	r3, .L39+52
 918 00b6 D3ED007A 		vldr.32	s15, [r3]
 142:CONTROL/Src/votage.c ****         square_buffer += OUTPUT_VOTAGE*OUTPUT_VOTAGE; 
 919              		.loc 1 142 39 view .LVU185
 920 00ba 67EEA77A 		vmul.f32	s15, s15, s15
 142:CONTROL/Src/votage.c ****         square_buffer += OUTPUT_VOTAGE*OUTPUT_VOTAGE; 
 921              		.loc 1 142 23 view .LVU186
 922 00be 504B     		ldr	r3, .L39+56
 923 00c0 93ED007A 		vldr.32	s14, [r3]
 924 00c4 77EE877A 		vadd.f32	s15, s15, s14
 925 00c8 C3ED007A 		vstr.32	s15, [r3]
 143:CONTROL/Src/votage.c ****         square_buffer = square_buffer/400;
 926              		.loc 1 143 9 is_stmt 1 view .LVU187
 143:CONTROL/Src/votage.c ****         square_buffer = square_buffer/400;
 927              		.loc 1 143 38 is_stmt 0 view .LVU188
 928 00cc DFED506A 		vldr.32	s13, .L39+72
 929 00d0 87EEA67A 		vdiv.f32	s14, s15, s13
 143:CONTROL/Src/votage.c ****         square_buffer = square_buffer/400;
 930              		.loc 1 143 23 view .LVU189
 931 00d4 83ED007A 		vstr.32	s14, [r3]
 146:CONTROL/Src/votage.c ****         debug_votage = square_buffer;
 932              		.loc 1 146 9 is_stmt 1 view .LVU190
 146:CONTROL/Src/votage.c ****         debug_votage = square_buffer;
 933              		.loc 1 146 22 is_stmt 0 view .LVU191
 934 00d8 4E4B     		ldr	r3, .L39+76
 935 00da 83ED007A 		vstr.32	s14, [r3]
 149:CONTROL/Src/votage.c ****         V_error = VREF*VREF - square_buffer;
 936              		.loc 1 149 9 is_stmt 1 view .LVU192
 149:CONTROL/Src/votage.c ****         V_error = VREF*VREF - square_buffer;
 937              		.loc 1 149 29 is_stmt 0 view .LVU193
 938 00de 17EE100A 		vmov	r0, s14
 939 00e2 FFF7FEFF 		bl	__aeabi_f2d
 940              	.LVL68:
 941 00e6 0246     		mov	r2, r0
 942 00e8 0B46     		mov	r3, r1
 943 00ea 39A1     		adr	r1, .L39+8
 944 00ec D1E90001 		ldrd	r0, [r1]
 945 00f0 FFF7FEFF 		bl	__aeabi_dsub
 946              	.LVL69:
 947 00f4 FFF7FEFF 		bl	__aeabi_d2f
 948              	.LVL70:
 149:CONTROL/Src/votage.c ****         V_error = VREF*VREF - square_buffer;
 949              		.loc 1 149 17 view .LVU194
 950 00f8 474D     		ldr	r5, .L39+80
 951 00fa 2860     		str	r0, [r5]	@ float
 150:CONTROL/Src/votage.c ****         V_error *=0.05;
 952              		.loc 1 150 9 is_stmt 1 view .LVU195
 150:CONTROL/Src/votage.c ****         V_error *=0.05;
 953              		.loc 1 150 17 is_stmt 0 view .LVU196
 954 00fc FFF7FEFF 		bl	__aeabi_f2d
 955              	.LVL71:
 956 0100 35A3     		adr	r3, .L39+16
 957 0102 D3E90023 		ldrd	r2, [r3]
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 21


 958 0106 FFF7FEFF 		bl	__aeabi_dmul
 959              	.LVL72:
 960 010a FFF7FEFF 		bl	__aeabi_d2f
 961              	.LVL73:
 962 010e 07EE100A 		vmov	s14, r0
 963 0112 2860     		str	r0, [r5]	@ float
 151:CONTROL/Src/votage.c ****         PID_output = arm_pid_f32(&S_4, V_error);
 964              		.loc 1 151 9 is_stmt 1 view .LVU197
 965              	.LVL74:
 966              	.LBB6:
 967              	.LBI6:
 968              		.file 2 "DSP/Inc/arm_math.h"
   1:DSP/Inc/arm_math.h **** /******************************************************************************
   2:DSP/Inc/arm_math.h ****  * @file     arm_math.h
   3:DSP/Inc/arm_math.h ****  * @brief    Public header file for CMSIS DSP LibraryU
   4:DSP/Inc/arm_math.h ****  * @version  V1.5.3
   5:DSP/Inc/arm_math.h ****  * @date     10. January 2018
   6:DSP/Inc/arm_math.h ****  ******************************************************************************/
   7:DSP/Inc/arm_math.h **** /*
   8:DSP/Inc/arm_math.h ****  * Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved.
   9:DSP/Inc/arm_math.h ****  *
  10:DSP/Inc/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  11:DSP/Inc/arm_math.h ****  *
  12:DSP/Inc/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:DSP/Inc/arm_math.h ****  * not use this file except in compliance with the License.
  14:DSP/Inc/arm_math.h ****  * You may obtain a copy of the License at
  15:DSP/Inc/arm_math.h ****  *
  16:DSP/Inc/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:DSP/Inc/arm_math.h ****  *
  18:DSP/Inc/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  19:DSP/Inc/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:DSP/Inc/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:DSP/Inc/arm_math.h ****  * See the License for the specific language governing permissions and
  22:DSP/Inc/arm_math.h ****  * limitations under the License.
  23:DSP/Inc/arm_math.h ****  */
  24:DSP/Inc/arm_math.h **** 
  25:DSP/Inc/arm_math.h **** /**
  26:DSP/Inc/arm_math.h ****    \mainpage CMSIS DSP Software Library
  27:DSP/Inc/arm_math.h ****    *
  28:DSP/Inc/arm_math.h ****    * Introduction
  29:DSP/Inc/arm_math.h ****    * ------------
  30:DSP/Inc/arm_math.h ****    *
  31:DSP/Inc/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  32:DSP/Inc/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  33:DSP/Inc/arm_math.h ****    *
  34:DSP/Inc/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  35:DSP/Inc/arm_math.h ****    * - Basic math functions
  36:DSP/Inc/arm_math.h ****    * - Fast math functions
  37:DSP/Inc/arm_math.h ****    * - Complex math functions
  38:DSP/Inc/arm_math.h ****    * - Filters
  39:DSP/Inc/arm_math.h ****    * - Matrix functions
  40:DSP/Inc/arm_math.h ****    * - Transforms
  41:DSP/Inc/arm_math.h ****    * - Motor control functions
  42:DSP/Inc/arm_math.h ****    * - Statistical functions
  43:DSP/Inc/arm_math.h ****    * - Support functions
  44:DSP/Inc/arm_math.h ****    * - Interpolation functions
  45:DSP/Inc/arm_math.h ****    *
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 22


  46:DSP/Inc/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  47:DSP/Inc/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  48:DSP/Inc/arm_math.h ****    *
  49:DSP/Inc/arm_math.h ****    * Using the Library
  50:DSP/Inc/arm_math.h ****    * ------------
  51:DSP/Inc/arm_math.h ****    *
  52:DSP/Inc/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  53:DSP/Inc/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  54:DSP/Inc/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  55:DSP/Inc/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  56:DSP/Inc/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  57:DSP/Inc/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  58:DSP/Inc/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  59:DSP/Inc/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  60:DSP/Inc/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
  61:DSP/Inc/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  62:DSP/Inc/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  63:DSP/Inc/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  64:DSP/Inc/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  65:DSP/Inc/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  66:DSP/Inc/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  67:DSP/Inc/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (Armv8-M Baseline, Little endian)
  68:DSP/Inc/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (Armv8-M Mainline, Little endian)
  69:DSP/Inc/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (Armv8-M Mainline, Little endian, Single Precision Floating Point 
  70:DSP/Inc/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (Armv8-M Mainline, Little endian, DSP instructions)
  71:DSP/Inc/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (Armv8-M Mainline, Little endian, DSP instructions, Single Precis
  72:DSP/Inc/arm_math.h ****    *
  73:DSP/Inc/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  74:DSP/Inc/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  75:DSP/Inc/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  76:DSP/Inc/arm_math.h ****    * Define the appropriate preprocessor macro ARM_MATH_CM7 or ARM_MATH_CM4 or ARM_MATH_CM3 or
  77:DSP/Inc/arm_math.h ****    * ARM_MATH_CM0 or ARM_MATH_CM0PLUS depending on the target processor in the application.
  78:DSP/Inc/arm_math.h ****    * For Armv8-M cores define preprocessor macro ARM_MATH_ARMV8MBL or ARM_MATH_ARMV8MML.
  79:DSP/Inc/arm_math.h ****    * Set preprocessor macro __DSP_PRESENT if Armv8-M Mainline core supports DSP instructions.
  80:DSP/Inc/arm_math.h ****    * 
  81:DSP/Inc/arm_math.h ****    *
  82:DSP/Inc/arm_math.h ****    * Examples
  83:DSP/Inc/arm_math.h ****    * --------
  84:DSP/Inc/arm_math.h ****    *
  85:DSP/Inc/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  86:DSP/Inc/arm_math.h ****    *
  87:DSP/Inc/arm_math.h ****    * Toolchain Support
  88:DSP/Inc/arm_math.h ****    * ------------
  89:DSP/Inc/arm_math.h ****    *
  90:DSP/Inc/arm_math.h ****    * The library has been developed and tested with MDK version 5.14.0.0
  91:DSP/Inc/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  92:DSP/Inc/arm_math.h ****    *
  93:DSP/Inc/arm_math.h ****    * Building the Library
  94:DSP/Inc/arm_math.h ****    * ------------
  95:DSP/Inc/arm_math.h ****    *
  96:DSP/Inc/arm_math.h ****    * The library installer contains a project file to rebuild libraries on MDK toolchain in the <co
  97:DSP/Inc/arm_math.h ****    * - arm_cortexM_math.uvprojx
  98:DSP/Inc/arm_math.h ****    *
  99:DSP/Inc/arm_math.h ****    *
 100:DSP/Inc/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
 101:DSP/Inc/arm_math.h ****    *
 102:DSP/Inc/arm_math.h ****    * Preprocessor Macros
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 23


 103:DSP/Inc/arm_math.h ****    * ------------
 104:DSP/Inc/arm_math.h ****    *
 105:DSP/Inc/arm_math.h ****    * Each library project have different preprocessor macros.
 106:DSP/Inc/arm_math.h ****    *
 107:DSP/Inc/arm_math.h ****    * - UNALIGNED_SUPPORT_DISABLE:
 108:DSP/Inc/arm_math.h ****    *
 109:DSP/Inc/arm_math.h ****    * Define macro UNALIGNED_SUPPORT_DISABLE, If the silicon does not support unaligned memory acces
 110:DSP/Inc/arm_math.h ****    *
 111:DSP/Inc/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 112:DSP/Inc/arm_math.h ****    *
 113:DSP/Inc/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 114:DSP/Inc/arm_math.h ****    *
 115:DSP/Inc/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 116:DSP/Inc/arm_math.h ****    *
 117:DSP/Inc/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 118:DSP/Inc/arm_math.h ****    *
 119:DSP/Inc/arm_math.h ****    * - ARM_MATH_ROUNDING:
 120:DSP/Inc/arm_math.h ****    *
 121:DSP/Inc/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 122:DSP/Inc/arm_math.h ****    *
 123:DSP/Inc/arm_math.h ****    * - ARM_MATH_CMx:
 124:DSP/Inc/arm_math.h ****    *
 125:DSP/Inc/arm_math.h ****    * Define macro ARM_MATH_CM4 for building the library on Cortex-M4 target, ARM_MATH_CM3 for build
 126:DSP/Inc/arm_math.h ****    * and ARM_MATH_CM0 for building library on Cortex-M0 target, ARM_MATH_CM0PLUS for building libra
 127:DSP/Inc/arm_math.h ****    * ARM_MATH_CM7 for building the library on cortex-M7.
 128:DSP/Inc/arm_math.h ****    *
 129:DSP/Inc/arm_math.h ****    * - ARM_MATH_ARMV8MxL:
 130:DSP/Inc/arm_math.h ****    *
 131:DSP/Inc/arm_math.h ****    * Define macro ARM_MATH_ARMV8MBL for building the library on Armv8-M Baseline target, ARM_MATH_A
 132:DSP/Inc/arm_math.h ****    * on Armv8-M Mainline target.
 133:DSP/Inc/arm_math.h ****    *
 134:DSP/Inc/arm_math.h ****    * - __FPU_PRESENT:
 135:DSP/Inc/arm_math.h ****    *
 136:DSP/Inc/arm_math.h ****    * Initialize macro __FPU_PRESENT = 1 when building on FPU supported Targets. Enable this macro f
 137:DSP/Inc/arm_math.h ****    *
 138:DSP/Inc/arm_math.h ****    * - __DSP_PRESENT:
 139:DSP/Inc/arm_math.h ****    *
 140:DSP/Inc/arm_math.h ****    * Initialize macro __DSP_PRESENT = 1 when Armv8-M Mainline core supports DSP instructions.
 141:DSP/Inc/arm_math.h ****    *
 142:DSP/Inc/arm_math.h ****    * <hr>
 143:DSP/Inc/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 144:DSP/Inc/arm_math.h ****    * -----------------------------
 145:DSP/Inc/arm_math.h ****    *
 146:DSP/Inc/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 147:DSP/Inc/arm_math.h ****    * |File/Folder                   |Content                                                       
 148:DSP/Inc/arm_math.h ****    * |------------------------------|--------------------------------------------------------------
 149:DSP/Inc/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP  | This documentation                                           
 150:DSP/Inc/arm_math.h ****    * |\b CMSIS\\DSP_Lib             | Software license agreement (license.txt)                     
 151:DSP/Inc/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Examples   | Example projects demonstrating the usage of the library funct
 152:DSP/Inc/arm_math.h ****    * |\b CMSIS\\DSP_Lib\\Source     | Source files for rebuilding the library                      
 153:DSP/Inc/arm_math.h ****    *
 154:DSP/Inc/arm_math.h ****    * <hr>
 155:DSP/Inc/arm_math.h ****    * Revision History of CMSIS-DSP
 156:DSP/Inc/arm_math.h ****    * ------------
 157:DSP/Inc/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 158:DSP/Inc/arm_math.h ****    *
 159:DSP/Inc/arm_math.h ****    * Copyright Notice
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 24


 160:DSP/Inc/arm_math.h ****    * ------------
 161:DSP/Inc/arm_math.h ****    *
 162:DSP/Inc/arm_math.h ****    * Copyright (C) 2010-2015 Arm Limited. All rights reserved.
 163:DSP/Inc/arm_math.h ****    */
 164:DSP/Inc/arm_math.h **** 
 165:DSP/Inc/arm_math.h **** 
 166:DSP/Inc/arm_math.h **** /**
 167:DSP/Inc/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 168:DSP/Inc/arm_math.h ****  */
 169:DSP/Inc/arm_math.h **** 
 170:DSP/Inc/arm_math.h **** /**
 171:DSP/Inc/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 172:DSP/Inc/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 173:DSP/Inc/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 174:DSP/Inc/arm_math.h ****  * operate on individual values and not arrays.
 175:DSP/Inc/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 176:DSP/Inc/arm_math.h ****  *
 177:DSP/Inc/arm_math.h ****  */
 178:DSP/Inc/arm_math.h **** 
 179:DSP/Inc/arm_math.h **** /**
 180:DSP/Inc/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 181:DSP/Inc/arm_math.h ****  * This set of functions operates on complex data vectors.
 182:DSP/Inc/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 183:DSP/Inc/arm_math.h ****  * (real, imag, real, imag, ...).
 184:DSP/Inc/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 185:DSP/Inc/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 186:DSP/Inc/arm_math.h ****  * real values.
 187:DSP/Inc/arm_math.h ****  */
 188:DSP/Inc/arm_math.h **** 
 189:DSP/Inc/arm_math.h **** /**
 190:DSP/Inc/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 191:DSP/Inc/arm_math.h ****  */
 192:DSP/Inc/arm_math.h **** 
 193:DSP/Inc/arm_math.h **** /**
 194:DSP/Inc/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 195:DSP/Inc/arm_math.h ****  *
 196:DSP/Inc/arm_math.h ****  * This set of functions provides basic matrix math operations.
 197:DSP/Inc/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 198:DSP/Inc/arm_math.h ****  * the type
 199:DSP/Inc/arm_math.h ****  * definition for the floating-point matrix structure is shown
 200:DSP/Inc/arm_math.h ****  * below:
 201:DSP/Inc/arm_math.h ****  * <pre>
 202:DSP/Inc/arm_math.h ****  *     typedef struct
 203:DSP/Inc/arm_math.h ****  *     {
 204:DSP/Inc/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 205:DSP/Inc/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 206:DSP/Inc/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 207:DSP/Inc/arm_math.h ****  *     } arm_matrix_instance_f32;
 208:DSP/Inc/arm_math.h ****  * </pre>
 209:DSP/Inc/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 210:DSP/Inc/arm_math.h ****  *
 211:DSP/Inc/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 212:DSP/Inc/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 213:DSP/Inc/arm_math.h ****  * and the values are arranged in row order.  That is, the
 214:DSP/Inc/arm_math.h ****  * matrix element (i, j) is stored at:
 215:DSP/Inc/arm_math.h ****  * <pre>
 216:DSP/Inc/arm_math.h ****  *     pData[i*numCols + j]
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 25


 217:DSP/Inc/arm_math.h ****  * </pre>
 218:DSP/Inc/arm_math.h ****  *
 219:DSP/Inc/arm_math.h ****  * \par Init Functions
 220:DSP/Inc/arm_math.h ****  * There is an associated initialization function for each type of matrix
 221:DSP/Inc/arm_math.h ****  * data structure.
 222:DSP/Inc/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 223:DSP/Inc/arm_math.h ****  * Refer to the function <code>arm_mat_init_f32()</code>, <code>arm_mat_init_q31()</code>
 224:DSP/Inc/arm_math.h ****  * and <code>arm_mat_init_q15()</code> for floating-point, Q31 and Q15 types,  respectively.
 225:DSP/Inc/arm_math.h ****  *
 226:DSP/Inc/arm_math.h ****  * \par
 227:DSP/Inc/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 228:DSP/Inc/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 229:DSP/Inc/arm_math.h ****  * To place the instance structure in a const data
 230:DSP/Inc/arm_math.h ****  * section, manually initialize the data structure.  For example:
 231:DSP/Inc/arm_math.h ****  * <pre>
 232:DSP/Inc/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 233:DSP/Inc/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 234:DSP/Inc/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 235:DSP/Inc/arm_math.h ****  * </pre>
 236:DSP/Inc/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 237:DSP/Inc/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 238:DSP/Inc/arm_math.h ****  * data array.
 239:DSP/Inc/arm_math.h ****  *
 240:DSP/Inc/arm_math.h ****  * \par Size Checking
 241:DSP/Inc/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 242:DSP/Inc/arm_math.h ****  * output matrices. For example, the matrix addition function verifies that the
 243:DSP/Inc/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 244:DSP/Inc/arm_math.h ****  * columns. If the size check fails the functions return:
 245:DSP/Inc/arm_math.h ****  * <pre>
 246:DSP/Inc/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 247:DSP/Inc/arm_math.h ****  * </pre>
 248:DSP/Inc/arm_math.h ****  * Otherwise the functions return
 249:DSP/Inc/arm_math.h ****  * <pre>
 250:DSP/Inc/arm_math.h ****  *     ARM_MATH_SUCCESS
 251:DSP/Inc/arm_math.h ****  * </pre>
 252:DSP/Inc/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 253:DSP/Inc/arm_math.h ****  * The matrix size checking is enabled via the \#define
 254:DSP/Inc/arm_math.h ****  * <pre>
 255:DSP/Inc/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 256:DSP/Inc/arm_math.h ****  * </pre>
 257:DSP/Inc/arm_math.h ****  * within the library project settings.  By default this macro is defined
 258:DSP/Inc/arm_math.h ****  * and size checking is enabled. By changing the project settings and
 259:DSP/Inc/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 260:DSP/Inc/arm_math.h ****  * run a bit faster. With size checking disabled the functions always
 261:DSP/Inc/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 262:DSP/Inc/arm_math.h ****  */
 263:DSP/Inc/arm_math.h **** 
 264:DSP/Inc/arm_math.h **** /**
 265:DSP/Inc/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 266:DSP/Inc/arm_math.h ****  */
 267:DSP/Inc/arm_math.h **** 
 268:DSP/Inc/arm_math.h **** /**
 269:DSP/Inc/arm_math.h ****  * @defgroup groupController Controller Functions
 270:DSP/Inc/arm_math.h ****  */
 271:DSP/Inc/arm_math.h **** 
 272:DSP/Inc/arm_math.h **** /**
 273:DSP/Inc/arm_math.h ****  * @defgroup groupStats Statistics Functions
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 26


 274:DSP/Inc/arm_math.h ****  */
 275:DSP/Inc/arm_math.h **** /**
 276:DSP/Inc/arm_math.h ****  * @defgroup groupSupport Support Functions
 277:DSP/Inc/arm_math.h ****  */
 278:DSP/Inc/arm_math.h **** 
 279:DSP/Inc/arm_math.h **** /**
 280:DSP/Inc/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 281:DSP/Inc/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 282:DSP/Inc/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 283:DSP/Inc/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 284:DSP/Inc/arm_math.h ****  */
 285:DSP/Inc/arm_math.h **** 
 286:DSP/Inc/arm_math.h **** /**
 287:DSP/Inc/arm_math.h ****  * @defgroup groupExamples Examples
 288:DSP/Inc/arm_math.h ****  */
 289:DSP/Inc/arm_math.h **** #ifndef _ARM_MATH_H
 290:DSP/Inc/arm_math.h **** #define _ARM_MATH_H
 291:DSP/Inc/arm_math.h **** 
 292:DSP/Inc/arm_math.h **** /* Compiler specific diagnostic adjustment */
 293:DSP/Inc/arm_math.h **** #if   defined ( __CC_ARM )
 294:DSP/Inc/arm_math.h **** 
 295:DSP/Inc/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 296:DSP/Inc/arm_math.h **** 
 297:DSP/Inc/arm_math.h **** #elif defined ( __GNUC__ )
 298:DSP/Inc/arm_math.h **** #pragma GCC diagnostic push
 299:DSP/Inc/arm_math.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
 300:DSP/Inc/arm_math.h **** #pragma GCC diagnostic ignored "-Wconversion"
 301:DSP/Inc/arm_math.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
 302:DSP/Inc/arm_math.h **** 
 303:DSP/Inc/arm_math.h **** #elif defined ( __ICCARM__ )
 304:DSP/Inc/arm_math.h **** 
 305:DSP/Inc/arm_math.h **** #elif defined ( __TI_ARM__ )
 306:DSP/Inc/arm_math.h **** 
 307:DSP/Inc/arm_math.h **** #elif defined ( __CSMC__ )
 308:DSP/Inc/arm_math.h **** 
 309:DSP/Inc/arm_math.h **** #elif defined ( __TASKING__ )
 310:DSP/Inc/arm_math.h **** 
 311:DSP/Inc/arm_math.h **** #else
 312:DSP/Inc/arm_math.h ****   #error Unknown compiler
 313:DSP/Inc/arm_math.h **** #endif
 314:DSP/Inc/arm_math.h **** 
 315:DSP/Inc/arm_math.h **** 
 316:DSP/Inc/arm_math.h **** #define __CMSIS_GENERIC         /* disable NVIC and Systick functions */
 317:DSP/Inc/arm_math.h **** 
 318:DSP/Inc/arm_math.h **** #if defined(ARM_MATH_CM7)
 319:DSP/Inc/arm_math.h ****   #include "core_cm7.h"
 320:DSP/Inc/arm_math.h ****   #define ARM_MATH_DSP
 321:DSP/Inc/arm_math.h **** #elif defined (ARM_MATH_CM4)
 322:DSP/Inc/arm_math.h ****   #include "core_cm4.h"
 323:DSP/Inc/arm_math.h ****   #define ARM_MATH_DSP
 324:DSP/Inc/arm_math.h **** #elif defined (ARM_MATH_CM3)
 325:DSP/Inc/arm_math.h ****   #include "core_cm3.h"
 326:DSP/Inc/arm_math.h **** #elif defined (ARM_MATH_CM0)
 327:DSP/Inc/arm_math.h ****   #include "core_cm0.h"
 328:DSP/Inc/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 329:DSP/Inc/arm_math.h **** #elif defined (ARM_MATH_CM0PLUS)
 330:DSP/Inc/arm_math.h ****   #include "core_cm0plus.h"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 27


 331:DSP/Inc/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 332:DSP/Inc/arm_math.h **** #elif defined (ARM_MATH_ARMV8MBL)
 333:DSP/Inc/arm_math.h ****   #include "core_armv8mbl.h"
 334:DSP/Inc/arm_math.h ****   #define ARM_MATH_CM0_FAMILY
 335:DSP/Inc/arm_math.h **** #elif defined (ARM_MATH_ARMV8MML)
 336:DSP/Inc/arm_math.h ****   #include "core_armv8mml.h"
 337:DSP/Inc/arm_math.h ****   #if (defined (__DSP_PRESENT) && (__DSP_PRESENT == 1))
 338:DSP/Inc/arm_math.h ****     #define ARM_MATH_DSP
 339:DSP/Inc/arm_math.h ****   #endif
 340:DSP/Inc/arm_math.h **** #else
 341:DSP/Inc/arm_math.h ****   #error "Define according the used Cortex core ARM_MATH_CM7, ARM_MATH_CM4, ARM_MATH_CM3, ARM_MATH_
 342:DSP/Inc/arm_math.h **** #endif
 343:DSP/Inc/arm_math.h **** 
 344:DSP/Inc/arm_math.h **** #undef  __CMSIS_GENERIC         /* enable NVIC and Systick functions */
 345:DSP/Inc/arm_math.h **** #include "string.h"
 346:DSP/Inc/arm_math.h **** #include "math.h"
 347:DSP/Inc/arm_math.h **** #ifdef   __cplusplus
 348:DSP/Inc/arm_math.h **** extern "C"
 349:DSP/Inc/arm_math.h **** {
 350:DSP/Inc/arm_math.h **** #endif
 351:DSP/Inc/arm_math.h **** 
 352:DSP/Inc/arm_math.h **** 
 353:DSP/Inc/arm_math.h ****   /**
 354:DSP/Inc/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 355:DSP/Inc/arm_math.h ****    */
 356:DSP/Inc/arm_math.h **** 
 357:DSP/Inc/arm_math.h **** #define DELTA_Q31          (0x100)
 358:DSP/Inc/arm_math.h **** #define DELTA_Q15          0x5
 359:DSP/Inc/arm_math.h **** #define INDEX_MASK         0x0000003F
 360:DSP/Inc/arm_math.h **** #ifndef PI
 361:DSP/Inc/arm_math.h ****   #define PI               3.14159265358979f
 362:DSP/Inc/arm_math.h **** #endif
 363:DSP/Inc/arm_math.h **** 
 364:DSP/Inc/arm_math.h ****   /**
 365:DSP/Inc/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 366:DSP/Inc/arm_math.h ****    */
 367:DSP/Inc/arm_math.h **** 
 368:DSP/Inc/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 369:DSP/Inc/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 370:DSP/Inc/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 371:DSP/Inc/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 372:DSP/Inc/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 373:DSP/Inc/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 374:DSP/Inc/arm_math.h **** 
 375:DSP/Inc/arm_math.h ****   /**
 376:DSP/Inc/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 377:DSP/Inc/arm_math.h ****    */
 378:DSP/Inc/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 379:DSP/Inc/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 380:DSP/Inc/arm_math.h **** #define INPUT_SPACING         0xB60B61
 381:DSP/Inc/arm_math.h **** 
 382:DSP/Inc/arm_math.h ****   /**
 383:DSP/Inc/arm_math.h ****    * @brief Macro for Unaligned Support
 384:DSP/Inc/arm_math.h ****    */
 385:DSP/Inc/arm_math.h **** #ifndef UNALIGNED_SUPPORT_DISABLE
 386:DSP/Inc/arm_math.h ****     #define ALIGN4
 387:DSP/Inc/arm_math.h **** #else
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 28


 388:DSP/Inc/arm_math.h ****   #if defined  (__GNUC__)
 389:DSP/Inc/arm_math.h ****     #define ALIGN4 __attribute__((aligned(4)))
 390:DSP/Inc/arm_math.h ****   #else
 391:DSP/Inc/arm_math.h ****     #define ALIGN4 __align(4)
 392:DSP/Inc/arm_math.h ****   #endif
 393:DSP/Inc/arm_math.h **** #endif   /* #ifndef UNALIGNED_SUPPORT_DISABLE */
 394:DSP/Inc/arm_math.h **** 
 395:DSP/Inc/arm_math.h ****   /**
 396:DSP/Inc/arm_math.h ****    * @brief Error status returned by some functions in the library.
 397:DSP/Inc/arm_math.h ****    */
 398:DSP/Inc/arm_math.h **** 
 399:DSP/Inc/arm_math.h ****   typedef enum
 400:DSP/Inc/arm_math.h ****   {
 401:DSP/Inc/arm_math.h ****     ARM_MATH_SUCCESS = 0,                /**< No error */
 402:DSP/Inc/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 403:DSP/Inc/arm_math.h ****     ARM_MATH_LENGTH_ERROR = -2,          /**< Length of data buffer is incorrect */
 404:DSP/Inc/arm_math.h ****     ARM_MATH_SIZE_MISMATCH = -3,         /**< Size of matrices is not compatible with the operation
 405:DSP/Inc/arm_math.h ****     ARM_MATH_NANINF = -4,                /**< Not-a-number (NaN) or infinity is generated */
 406:DSP/Inc/arm_math.h ****     ARM_MATH_SINGULAR = -5,              /**< Generated by matrix inversion if the input matrix is 
 407:DSP/Inc/arm_math.h ****     ARM_MATH_TEST_FAILURE = -6           /**< Test Failed  */
 408:DSP/Inc/arm_math.h ****   } arm_status;
 409:DSP/Inc/arm_math.h **** 
 410:DSP/Inc/arm_math.h ****   /**
 411:DSP/Inc/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 412:DSP/Inc/arm_math.h ****    */
 413:DSP/Inc/arm_math.h ****   typedef int8_t q7_t;
 414:DSP/Inc/arm_math.h **** 
 415:DSP/Inc/arm_math.h ****   /**
 416:DSP/Inc/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 417:DSP/Inc/arm_math.h ****    */
 418:DSP/Inc/arm_math.h ****   typedef int16_t q15_t;
 419:DSP/Inc/arm_math.h **** 
 420:DSP/Inc/arm_math.h ****   /**
 421:DSP/Inc/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 422:DSP/Inc/arm_math.h ****    */
 423:DSP/Inc/arm_math.h ****   typedef int32_t q31_t;
 424:DSP/Inc/arm_math.h **** 
 425:DSP/Inc/arm_math.h ****   /**
 426:DSP/Inc/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
 427:DSP/Inc/arm_math.h ****    */
 428:DSP/Inc/arm_math.h ****   typedef int64_t q63_t;
 429:DSP/Inc/arm_math.h **** 
 430:DSP/Inc/arm_math.h ****   /**
 431:DSP/Inc/arm_math.h ****    * @brief 32-bit floating-point type definition.
 432:DSP/Inc/arm_math.h ****    */
 433:DSP/Inc/arm_math.h ****   typedef float float32_t;
 434:DSP/Inc/arm_math.h **** 
 435:DSP/Inc/arm_math.h ****   /**
 436:DSP/Inc/arm_math.h ****    * @brief 64-bit floating-point type definition.
 437:DSP/Inc/arm_math.h ****    */
 438:DSP/Inc/arm_math.h ****   typedef double float64_t;
 439:DSP/Inc/arm_math.h **** 
 440:DSP/Inc/arm_math.h ****   /**
 441:DSP/Inc/arm_math.h ****    * @brief definition to read/write two 16 bit values.
 442:DSP/Inc/arm_math.h ****    */
 443:DSP/Inc/arm_math.h **** #if   defined ( __CC_ARM )
 444:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 29


 445:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 446:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 447:DSP/Inc/arm_math.h **** 
 448:DSP/Inc/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 449:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE int32_t
 450:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 451:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 452:DSP/Inc/arm_math.h **** 
 453:DSP/Inc/arm_math.h **** #elif defined ( __GNUC__ )
 454:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE int32_t
 455:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 456:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE __attribute__((always_inline))
 457:DSP/Inc/arm_math.h **** 
 458:DSP/Inc/arm_math.h **** #elif defined ( __ICCARM__ )
 459:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 460:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED
 461:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE
 462:DSP/Inc/arm_math.h **** 
 463:DSP/Inc/arm_math.h **** #elif defined ( __TI_ARM__ )
 464:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE int32_t
 465:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED __attribute__((unused))
 466:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE
 467:DSP/Inc/arm_math.h **** 
 468:DSP/Inc/arm_math.h **** #elif defined ( __CSMC__ )
 469:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE int32_t
 470:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED
 471:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE
 472:DSP/Inc/arm_math.h **** 
 473:DSP/Inc/arm_math.h **** #elif defined ( __TASKING__ )
 474:DSP/Inc/arm_math.h ****   #define __SIMD32_TYPE __unaligned int32_t
 475:DSP/Inc/arm_math.h ****   #define CMSIS_UNUSED
 476:DSP/Inc/arm_math.h ****   #define CMSIS_INLINE
 477:DSP/Inc/arm_math.h **** 
 478:DSP/Inc/arm_math.h **** #else
 479:DSP/Inc/arm_math.h ****   #error Unknown compiler
 480:DSP/Inc/arm_math.h **** #endif
 481:DSP/Inc/arm_math.h **** 
 482:DSP/Inc/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 483:DSP/Inc/arm_math.h **** #define __SIMD32_CONST(addr)  ((__SIMD32_TYPE *)(addr))
 484:DSP/Inc/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE *)  (addr))
 485:DSP/Inc/arm_math.h **** #define __SIMD64(addr)        (*(int64_t **) & (addr))
 486:DSP/Inc/arm_math.h **** 
 487:DSP/Inc/arm_math.h **** #if !defined (ARM_MATH_DSP)
 488:DSP/Inc/arm_math.h ****   /**
 489:DSP/Inc/arm_math.h ****    * @brief definition to pack two 16 bit values.
 490:DSP/Inc/arm_math.h ****    */
 491:DSP/Inc/arm_math.h **** #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 492:DSP/Inc/arm_math.h ****                                     (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 493:DSP/Inc/arm_math.h **** #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 494:DSP/Inc/arm_math.h ****                                     (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 495:DSP/Inc/arm_math.h **** 
 496:DSP/Inc/arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
 497:DSP/Inc/arm_math.h **** 
 498:DSP/Inc/arm_math.h ****    /**
 499:DSP/Inc/arm_math.h ****    * @brief definition to pack four 8 bit values.
 500:DSP/Inc/arm_math.h ****    */
 501:DSP/Inc/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 30


 502:DSP/Inc/arm_math.h **** 
 503:DSP/Inc/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 504:DSP/Inc/arm_math.h ****                                 (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 505:DSP/Inc/arm_math.h ****                                 (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 506:DSP/Inc/arm_math.h ****                                 (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 507:DSP/Inc/arm_math.h **** #else
 508:DSP/Inc/arm_math.h **** 
 509:DSP/Inc/arm_math.h **** #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 510:DSP/Inc/arm_math.h ****                                 (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 511:DSP/Inc/arm_math.h ****                                 (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 512:DSP/Inc/arm_math.h ****                                 (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 513:DSP/Inc/arm_math.h **** 
 514:DSP/Inc/arm_math.h **** #endif
 515:DSP/Inc/arm_math.h **** 
 516:DSP/Inc/arm_math.h **** 
 517:DSP/Inc/arm_math.h ****   /**
 518:DSP/Inc/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 519:DSP/Inc/arm_math.h ****    */
 520:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q31_t clip_q63_to_q31(
 521:DSP/Inc/arm_math.h ****   q63_t x)
 522:DSP/Inc/arm_math.h ****   {
 523:DSP/Inc/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 524:DSP/Inc/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 525:DSP/Inc/arm_math.h ****   }
 526:DSP/Inc/arm_math.h **** 
 527:DSP/Inc/arm_math.h ****   /**
 528:DSP/Inc/arm_math.h ****    * @brief Clips Q63 to Q15 values.
 529:DSP/Inc/arm_math.h ****    */
 530:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q63_to_q15(
 531:DSP/Inc/arm_math.h ****   q63_t x)
 532:DSP/Inc/arm_math.h ****   {
 533:DSP/Inc/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 534:DSP/Inc/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 535:DSP/Inc/arm_math.h ****   }
 536:DSP/Inc/arm_math.h **** 
 537:DSP/Inc/arm_math.h ****   /**
 538:DSP/Inc/arm_math.h ****    * @brief Clips Q31 to Q7 values.
 539:DSP/Inc/arm_math.h ****    */
 540:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q7_t clip_q31_to_q7(
 541:DSP/Inc/arm_math.h ****   q31_t x)
 542:DSP/Inc/arm_math.h ****   {
 543:DSP/Inc/arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 544:DSP/Inc/arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 545:DSP/Inc/arm_math.h ****   }
 546:DSP/Inc/arm_math.h **** 
 547:DSP/Inc/arm_math.h ****   /**
 548:DSP/Inc/arm_math.h ****    * @brief Clips Q31 to Q15 values.
 549:DSP/Inc/arm_math.h ****    */
 550:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q15_t clip_q31_to_q15(
 551:DSP/Inc/arm_math.h ****   q31_t x)
 552:DSP/Inc/arm_math.h ****   {
 553:DSP/Inc/arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 554:DSP/Inc/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 555:DSP/Inc/arm_math.h ****   }
 556:DSP/Inc/arm_math.h **** 
 557:DSP/Inc/arm_math.h ****   /**
 558:DSP/Inc/arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 31


 559:DSP/Inc/arm_math.h ****    */
 560:DSP/Inc/arm_math.h **** 
 561:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE q63_t mult32x64(
 562:DSP/Inc/arm_math.h ****   q63_t x,
 563:DSP/Inc/arm_math.h ****   q31_t y)
 564:DSP/Inc/arm_math.h ****   {
 565:DSP/Inc/arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 566:DSP/Inc/arm_math.h ****             (((q63_t) (x >> 32) * y)));
 567:DSP/Inc/arm_math.h ****   }
 568:DSP/Inc/arm_math.h **** 
 569:DSP/Inc/arm_math.h ****   /**
 570:DSP/Inc/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
 571:DSP/Inc/arm_math.h ****    */
 572:DSP/Inc/arm_math.h **** 
 573:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q31(
 574:DSP/Inc/arm_math.h ****   q31_t in,
 575:DSP/Inc/arm_math.h ****   q31_t * dst,
 576:DSP/Inc/arm_math.h ****   q31_t * pRecipTable)
 577:DSP/Inc/arm_math.h ****   {
 578:DSP/Inc/arm_math.h ****     q31_t out;
 579:DSP/Inc/arm_math.h ****     uint32_t tempVal;
 580:DSP/Inc/arm_math.h ****     uint32_t index, i;
 581:DSP/Inc/arm_math.h ****     uint32_t signBits;
 582:DSP/Inc/arm_math.h **** 
 583:DSP/Inc/arm_math.h ****     if (in > 0)
 584:DSP/Inc/arm_math.h ****     {
 585:DSP/Inc/arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
 586:DSP/Inc/arm_math.h ****     }
 587:DSP/Inc/arm_math.h ****     else
 588:DSP/Inc/arm_math.h ****     {
 589:DSP/Inc/arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
 590:DSP/Inc/arm_math.h ****     }
 591:DSP/Inc/arm_math.h **** 
 592:DSP/Inc/arm_math.h ****     /* Convert input sample to 1.31 format */
 593:DSP/Inc/arm_math.h ****     in = (in << signBits);
 594:DSP/Inc/arm_math.h **** 
 595:DSP/Inc/arm_math.h ****     /* calculation of index for initial approximated Val */
 596:DSP/Inc/arm_math.h ****     index = (uint32_t)(in >> 24);
 597:DSP/Inc/arm_math.h ****     index = (index & INDEX_MASK);
 598:DSP/Inc/arm_math.h **** 
 599:DSP/Inc/arm_math.h ****     /* 1.31 with exp 1 */
 600:DSP/Inc/arm_math.h ****     out = pRecipTable[index];
 601:DSP/Inc/arm_math.h **** 
 602:DSP/Inc/arm_math.h ****     /* calculation of reciprocal value */
 603:DSP/Inc/arm_math.h ****     /* running approximation for two iterations */
 604:DSP/Inc/arm_math.h ****     for (i = 0U; i < 2U; i++)
 605:DSP/Inc/arm_math.h ****     {
 606:DSP/Inc/arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
 607:DSP/Inc/arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
 608:DSP/Inc/arm_math.h ****       /*      1.31 with exp 1 */
 609:DSP/Inc/arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
 610:DSP/Inc/arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
 611:DSP/Inc/arm_math.h ****     }
 612:DSP/Inc/arm_math.h **** 
 613:DSP/Inc/arm_math.h ****     /* write output */
 614:DSP/Inc/arm_math.h ****     *dst = out;
 615:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 32


 616:DSP/Inc/arm_math.h ****     /* return num of signbits of out = 1/in value */
 617:DSP/Inc/arm_math.h ****     return (signBits + 1U);
 618:DSP/Inc/arm_math.h ****   }
 619:DSP/Inc/arm_math.h **** 
 620:DSP/Inc/arm_math.h **** 
 621:DSP/Inc/arm_math.h ****   /**
 622:DSP/Inc/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q15 Data type.
 623:DSP/Inc/arm_math.h ****    */
 624:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t arm_recip_q15(
 625:DSP/Inc/arm_math.h ****   q15_t in,
 626:DSP/Inc/arm_math.h ****   q15_t * dst,
 627:DSP/Inc/arm_math.h ****   q15_t * pRecipTable)
 628:DSP/Inc/arm_math.h ****   {
 629:DSP/Inc/arm_math.h ****     q15_t out = 0;
 630:DSP/Inc/arm_math.h ****     uint32_t tempVal = 0;
 631:DSP/Inc/arm_math.h ****     uint32_t index = 0, i = 0;
 632:DSP/Inc/arm_math.h ****     uint32_t signBits = 0;
 633:DSP/Inc/arm_math.h **** 
 634:DSP/Inc/arm_math.h ****     if (in > 0)
 635:DSP/Inc/arm_math.h ****     {
 636:DSP/Inc/arm_math.h ****       signBits = ((uint32_t)(__CLZ( in) - 17));
 637:DSP/Inc/arm_math.h ****     }
 638:DSP/Inc/arm_math.h ****     else
 639:DSP/Inc/arm_math.h ****     {
 640:DSP/Inc/arm_math.h ****       signBits = ((uint32_t)(__CLZ(-in) - 17));
 641:DSP/Inc/arm_math.h ****     }
 642:DSP/Inc/arm_math.h **** 
 643:DSP/Inc/arm_math.h ****     /* Convert input sample to 1.15 format */
 644:DSP/Inc/arm_math.h ****     in = (in << signBits);
 645:DSP/Inc/arm_math.h **** 
 646:DSP/Inc/arm_math.h ****     /* calculation of index for initial approximated Val */
 647:DSP/Inc/arm_math.h ****     index = (uint32_t)(in >>  8);
 648:DSP/Inc/arm_math.h ****     index = (index & INDEX_MASK);
 649:DSP/Inc/arm_math.h **** 
 650:DSP/Inc/arm_math.h ****     /*      1.15 with exp 1  */
 651:DSP/Inc/arm_math.h ****     out = pRecipTable[index];
 652:DSP/Inc/arm_math.h **** 
 653:DSP/Inc/arm_math.h ****     /* calculation of reciprocal value */
 654:DSP/Inc/arm_math.h ****     /* running approximation for two iterations */
 655:DSP/Inc/arm_math.h ****     for (i = 0U; i < 2U; i++)
 656:DSP/Inc/arm_math.h ****     {
 657:DSP/Inc/arm_math.h ****       tempVal = (uint32_t) (((q31_t) in * out) >> 15);
 658:DSP/Inc/arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 659:DSP/Inc/arm_math.h ****       /*      1.15 with exp 1 */
 660:DSP/Inc/arm_math.h ****       out = (q15_t) (((q31_t) out * tempVal) >> 14);
 661:DSP/Inc/arm_math.h ****       /* out = clip_q31_to_q15(((q31_t) out * tempVal) >> 14); */
 662:DSP/Inc/arm_math.h ****     }
 663:DSP/Inc/arm_math.h **** 
 664:DSP/Inc/arm_math.h ****     /* write output */
 665:DSP/Inc/arm_math.h ****     *dst = out;
 666:DSP/Inc/arm_math.h **** 
 667:DSP/Inc/arm_math.h ****     /* return num of signbits of out = 1/in value */
 668:DSP/Inc/arm_math.h ****     return (signBits + 1);
 669:DSP/Inc/arm_math.h ****   }
 670:DSP/Inc/arm_math.h **** 
 671:DSP/Inc/arm_math.h **** 
 672:DSP/Inc/arm_math.h **** /*
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 33


 673:DSP/Inc/arm_math.h ****  * @brief C custom defined intrinsic function for M3 and M0 processors
 674:DSP/Inc/arm_math.h ****  */
 675:DSP/Inc/arm_math.h **** #if !defined (ARM_MATH_DSP)
 676:DSP/Inc/arm_math.h **** 
 677:DSP/Inc/arm_math.h ****   /*
 678:DSP/Inc/arm_math.h ****    * @brief C custom defined QADD8 for M3 and M0 processors
 679:DSP/Inc/arm_math.h ****    */
 680:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QADD8(
 681:DSP/Inc/arm_math.h ****   uint32_t x,
 682:DSP/Inc/arm_math.h ****   uint32_t y)
 683:DSP/Inc/arm_math.h ****   {
 684:DSP/Inc/arm_math.h ****     q31_t r, s, t, u;
 685:DSP/Inc/arm_math.h **** 
 686:DSP/Inc/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) + (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 687:DSP/Inc/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) + (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 688:DSP/Inc/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) + (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 689:DSP/Inc/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) + (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 690:DSP/Inc/arm_math.h **** 
 691:DSP/Inc/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 692:DSP/Inc/arm_math.h ****   }
 693:DSP/Inc/arm_math.h **** 
 694:DSP/Inc/arm_math.h **** 
 695:DSP/Inc/arm_math.h ****   /*
 696:DSP/Inc/arm_math.h ****    * @brief C custom defined QSUB8 for M3 and M0 processors
 697:DSP/Inc/arm_math.h ****    */
 698:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB8(
 699:DSP/Inc/arm_math.h ****   uint32_t x,
 700:DSP/Inc/arm_math.h ****   uint32_t y)
 701:DSP/Inc/arm_math.h ****   {
 702:DSP/Inc/arm_math.h ****     q31_t r, s, t, u;
 703:DSP/Inc/arm_math.h **** 
 704:DSP/Inc/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) - (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 705:DSP/Inc/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) - (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 706:DSP/Inc/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) - (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 707:DSP/Inc/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) - (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 708:DSP/Inc/arm_math.h **** 
 709:DSP/Inc/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 710:DSP/Inc/arm_math.h ****   }
 711:DSP/Inc/arm_math.h **** 
 712:DSP/Inc/arm_math.h **** 
 713:DSP/Inc/arm_math.h ****   /*
 714:DSP/Inc/arm_math.h ****    * @brief C custom defined QADD16 for M3 and M0 processors
 715:DSP/Inc/arm_math.h ****    */
 716:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QADD16(
 717:DSP/Inc/arm_math.h ****   uint32_t x,
 718:DSP/Inc/arm_math.h ****   uint32_t y)
 719:DSP/Inc/arm_math.h ****   {
 720:DSP/Inc/arm_math.h **** /*  q31_t r,     s;  without initialisation 'arm_offset_q15 test' fails  but 'intrinsic' tests pass
 721:DSP/Inc/arm_math.h ****     q31_t r = 0, s = 0;
 722:DSP/Inc/arm_math.h **** 
 723:DSP/Inc/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 724:DSP/Inc/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 725:DSP/Inc/arm_math.h **** 
 726:DSP/Inc/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 727:DSP/Inc/arm_math.h ****   }
 728:DSP/Inc/arm_math.h **** 
 729:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 34


 730:DSP/Inc/arm_math.h ****   /*
 731:DSP/Inc/arm_math.h ****    * @brief C custom defined SHADD16 for M3 and M0 processors
 732:DSP/Inc/arm_math.h ****    */
 733:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHADD16(
 734:DSP/Inc/arm_math.h ****   uint32_t x,
 735:DSP/Inc/arm_math.h ****   uint32_t y)
 736:DSP/Inc/arm_math.h ****   {
 737:DSP/Inc/arm_math.h ****     q31_t r, s;
 738:DSP/Inc/arm_math.h **** 
 739:DSP/Inc/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 740:DSP/Inc/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 741:DSP/Inc/arm_math.h **** 
 742:DSP/Inc/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 743:DSP/Inc/arm_math.h ****   }
 744:DSP/Inc/arm_math.h **** 
 745:DSP/Inc/arm_math.h **** 
 746:DSP/Inc/arm_math.h ****   /*
 747:DSP/Inc/arm_math.h ****    * @brief C custom defined QSUB16 for M3 and M0 processors
 748:DSP/Inc/arm_math.h ****    */
 749:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSUB16(
 750:DSP/Inc/arm_math.h ****   uint32_t x,
 751:DSP/Inc/arm_math.h ****   uint32_t y)
 752:DSP/Inc/arm_math.h ****   {
 753:DSP/Inc/arm_math.h ****     q31_t r, s;
 754:DSP/Inc/arm_math.h **** 
 755:DSP/Inc/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 756:DSP/Inc/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 757:DSP/Inc/arm_math.h **** 
 758:DSP/Inc/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 759:DSP/Inc/arm_math.h ****   }
 760:DSP/Inc/arm_math.h **** 
 761:DSP/Inc/arm_math.h **** 
 762:DSP/Inc/arm_math.h ****   /*
 763:DSP/Inc/arm_math.h ****    * @brief C custom defined SHSUB16 for M3 and M0 processors
 764:DSP/Inc/arm_math.h ****    */
 765:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHSUB16(
 766:DSP/Inc/arm_math.h ****   uint32_t x,
 767:DSP/Inc/arm_math.h ****   uint32_t y)
 768:DSP/Inc/arm_math.h ****   {
 769:DSP/Inc/arm_math.h ****     q31_t r, s;
 770:DSP/Inc/arm_math.h **** 
 771:DSP/Inc/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 772:DSP/Inc/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 773:DSP/Inc/arm_math.h **** 
 774:DSP/Inc/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 775:DSP/Inc/arm_math.h ****   }
 776:DSP/Inc/arm_math.h **** 
 777:DSP/Inc/arm_math.h **** 
 778:DSP/Inc/arm_math.h ****   /*
 779:DSP/Inc/arm_math.h ****    * @brief C custom defined QASX for M3 and M0 processors
 780:DSP/Inc/arm_math.h ****    */
 781:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QASX(
 782:DSP/Inc/arm_math.h ****   uint32_t x,
 783:DSP/Inc/arm_math.h ****   uint32_t y)
 784:DSP/Inc/arm_math.h ****   {
 785:DSP/Inc/arm_math.h ****     q31_t r, s;
 786:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 35


 787:DSP/Inc/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 788:DSP/Inc/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 789:DSP/Inc/arm_math.h **** 
 790:DSP/Inc/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 791:DSP/Inc/arm_math.h ****   }
 792:DSP/Inc/arm_math.h **** 
 793:DSP/Inc/arm_math.h **** 
 794:DSP/Inc/arm_math.h ****   /*
 795:DSP/Inc/arm_math.h ****    * @brief C custom defined SHASX for M3 and M0 processors
 796:DSP/Inc/arm_math.h ****    */
 797:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHASX(
 798:DSP/Inc/arm_math.h ****   uint32_t x,
 799:DSP/Inc/arm_math.h ****   uint32_t y)
 800:DSP/Inc/arm_math.h ****   {
 801:DSP/Inc/arm_math.h ****     q31_t r, s;
 802:DSP/Inc/arm_math.h **** 
 803:DSP/Inc/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 804:DSP/Inc/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 805:DSP/Inc/arm_math.h **** 
 806:DSP/Inc/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 807:DSP/Inc/arm_math.h ****   }
 808:DSP/Inc/arm_math.h **** 
 809:DSP/Inc/arm_math.h **** 
 810:DSP/Inc/arm_math.h ****   /*
 811:DSP/Inc/arm_math.h ****    * @brief C custom defined QSAX for M3 and M0 processors
 812:DSP/Inc/arm_math.h ****    */
 813:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __QSAX(
 814:DSP/Inc/arm_math.h ****   uint32_t x,
 815:DSP/Inc/arm_math.h ****   uint32_t y)
 816:DSP/Inc/arm_math.h ****   {
 817:DSP/Inc/arm_math.h ****     q31_t r, s;
 818:DSP/Inc/arm_math.h **** 
 819:DSP/Inc/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 820:DSP/Inc/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 821:DSP/Inc/arm_math.h **** 
 822:DSP/Inc/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 823:DSP/Inc/arm_math.h ****   }
 824:DSP/Inc/arm_math.h **** 
 825:DSP/Inc/arm_math.h **** 
 826:DSP/Inc/arm_math.h ****   /*
 827:DSP/Inc/arm_math.h ****    * @brief C custom defined SHSAX for M3 and M0 processors
 828:DSP/Inc/arm_math.h ****    */
 829:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SHSAX(
 830:DSP/Inc/arm_math.h ****   uint32_t x,
 831:DSP/Inc/arm_math.h ****   uint32_t y)
 832:DSP/Inc/arm_math.h ****   {
 833:DSP/Inc/arm_math.h ****     q31_t r, s;
 834:DSP/Inc/arm_math.h **** 
 835:DSP/Inc/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 836:DSP/Inc/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 837:DSP/Inc/arm_math.h **** 
 838:DSP/Inc/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 839:DSP/Inc/arm_math.h ****   }
 840:DSP/Inc/arm_math.h **** 
 841:DSP/Inc/arm_math.h **** 
 842:DSP/Inc/arm_math.h ****   /*
 843:DSP/Inc/arm_math.h ****    * @brief C custom defined SMUSDX for M3 and M0 processors
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 36


 844:DSP/Inc/arm_math.h ****    */
 845:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUSDX(
 846:DSP/Inc/arm_math.h ****   uint32_t x,
 847:DSP/Inc/arm_math.h ****   uint32_t y)
 848:DSP/Inc/arm_math.h ****   {
 849:DSP/Inc/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 850:DSP/Inc/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 851:DSP/Inc/arm_math.h ****   }
 852:DSP/Inc/arm_math.h **** 
 853:DSP/Inc/arm_math.h ****   /*
 854:DSP/Inc/arm_math.h ****    * @brief C custom defined SMUADX for M3 and M0 processors
 855:DSP/Inc/arm_math.h ****    */
 856:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUADX(
 857:DSP/Inc/arm_math.h ****   uint32_t x,
 858:DSP/Inc/arm_math.h ****   uint32_t y)
 859:DSP/Inc/arm_math.h ****   {
 860:DSP/Inc/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 861:DSP/Inc/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
 862:DSP/Inc/arm_math.h ****   }
 863:DSP/Inc/arm_math.h **** 
 864:DSP/Inc/arm_math.h **** 
 865:DSP/Inc/arm_math.h ****   /*
 866:DSP/Inc/arm_math.h ****    * @brief C custom defined QADD for M3 and M0 processors
 867:DSP/Inc/arm_math.h ****    */
 868:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __QADD(
 869:DSP/Inc/arm_math.h ****   int32_t x,
 870:DSP/Inc/arm_math.h ****   int32_t y)
 871:DSP/Inc/arm_math.h ****   {
 872:DSP/Inc/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x + (q31_t)y)));
 873:DSP/Inc/arm_math.h ****   }
 874:DSP/Inc/arm_math.h **** 
 875:DSP/Inc/arm_math.h **** 
 876:DSP/Inc/arm_math.h ****   /*
 877:DSP/Inc/arm_math.h ****    * @brief C custom defined QSUB for M3 and M0 processors
 878:DSP/Inc/arm_math.h ****    */
 879:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __QSUB(
 880:DSP/Inc/arm_math.h ****   int32_t x,
 881:DSP/Inc/arm_math.h ****   int32_t y)
 882:DSP/Inc/arm_math.h ****   {
 883:DSP/Inc/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x - (q31_t)y)));
 884:DSP/Inc/arm_math.h ****   }
 885:DSP/Inc/arm_math.h **** 
 886:DSP/Inc/arm_math.h **** 
 887:DSP/Inc/arm_math.h ****   /*
 888:DSP/Inc/arm_math.h ****    * @brief C custom defined SMLAD for M3 and M0 processors
 889:DSP/Inc/arm_math.h ****    */
 890:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLAD(
 891:DSP/Inc/arm_math.h ****   uint32_t x,
 892:DSP/Inc/arm_math.h ****   uint32_t y,
 893:DSP/Inc/arm_math.h ****   uint32_t sum)
 894:DSP/Inc/arm_math.h ****   {
 895:DSP/Inc/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 896:DSP/Inc/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 897:DSP/Inc/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 898:DSP/Inc/arm_math.h ****   }
 899:DSP/Inc/arm_math.h **** 
 900:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 37


 901:DSP/Inc/arm_math.h ****   /*
 902:DSP/Inc/arm_math.h ****    * @brief C custom defined SMLADX for M3 and M0 processors
 903:DSP/Inc/arm_math.h ****    */
 904:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLADX(
 905:DSP/Inc/arm_math.h ****   uint32_t x,
 906:DSP/Inc/arm_math.h ****   uint32_t y,
 907:DSP/Inc/arm_math.h ****   uint32_t sum)
 908:DSP/Inc/arm_math.h ****   {
 909:DSP/Inc/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 910:DSP/Inc/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 911:DSP/Inc/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 912:DSP/Inc/arm_math.h ****   }
 913:DSP/Inc/arm_math.h **** 
 914:DSP/Inc/arm_math.h **** 
 915:DSP/Inc/arm_math.h ****   /*
 916:DSP/Inc/arm_math.h ****    * @brief C custom defined SMLSDX for M3 and M0 processors
 917:DSP/Inc/arm_math.h ****    */
 918:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMLSDX(
 919:DSP/Inc/arm_math.h ****   uint32_t x,
 920:DSP/Inc/arm_math.h ****   uint32_t y,
 921:DSP/Inc/arm_math.h ****   uint32_t sum)
 922:DSP/Inc/arm_math.h ****   {
 923:DSP/Inc/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
 924:DSP/Inc/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 925:DSP/Inc/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
 926:DSP/Inc/arm_math.h ****   }
 927:DSP/Inc/arm_math.h **** 
 928:DSP/Inc/arm_math.h **** 
 929:DSP/Inc/arm_math.h ****   /*
 930:DSP/Inc/arm_math.h ****    * @brief C custom defined SMLALD for M3 and M0 processors
 931:DSP/Inc/arm_math.h ****    */
 932:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint64_t __SMLALD(
 933:DSP/Inc/arm_math.h ****   uint32_t x,
 934:DSP/Inc/arm_math.h ****   uint32_t y,
 935:DSP/Inc/arm_math.h ****   uint64_t sum)
 936:DSP/Inc/arm_math.h ****   {
 937:DSP/Inc/arm_math.h **** /*  return (sum + ((q15_t) (x >> 16) * (q15_t) (y >> 16)) + ((q15_t) x * (q15_t) y)); */
 938:DSP/Inc/arm_math.h ****     return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 939:DSP/Inc/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
 940:DSP/Inc/arm_math.h ****                        ( ((q63_t)sum    )                                  )   ));
 941:DSP/Inc/arm_math.h ****   }
 942:DSP/Inc/arm_math.h **** 
 943:DSP/Inc/arm_math.h **** 
 944:DSP/Inc/arm_math.h ****   /*
 945:DSP/Inc/arm_math.h ****    * @brief C custom defined SMLALDX for M3 and M0 processors
 946:DSP/Inc/arm_math.h ****    */
 947:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint64_t __SMLALDX(
 948:DSP/Inc/arm_math.h ****   uint32_t x,
 949:DSP/Inc/arm_math.h ****   uint32_t y,
 950:DSP/Inc/arm_math.h ****   uint64_t sum)
 951:DSP/Inc/arm_math.h ****   {
 952:DSP/Inc/arm_math.h **** /*  return (sum + ((q15_t) (x >> 16) * (q15_t) y)) + ((q15_t) x * (q15_t) (y >> 16)); */
 953:DSP/Inc/arm_math.h ****     return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
 954:DSP/Inc/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
 955:DSP/Inc/arm_math.h ****                        ( ((q63_t)sum    )                                  )   ));
 956:DSP/Inc/arm_math.h ****   }
 957:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 38


 958:DSP/Inc/arm_math.h **** 
 959:DSP/Inc/arm_math.h ****   /*
 960:DSP/Inc/arm_math.h ****    * @brief C custom defined SMUAD for M3 and M0 processors
 961:DSP/Inc/arm_math.h ****    */
 962:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUAD(
 963:DSP/Inc/arm_math.h ****   uint32_t x,
 964:DSP/Inc/arm_math.h ****   uint32_t y)
 965:DSP/Inc/arm_math.h ****   {
 966:DSP/Inc/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
 967:DSP/Inc/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
 968:DSP/Inc/arm_math.h ****   }
 969:DSP/Inc/arm_math.h **** 
 970:DSP/Inc/arm_math.h **** 
 971:DSP/Inc/arm_math.h ****   /*
 972:DSP/Inc/arm_math.h ****    * @brief C custom defined SMUSD for M3 and M0 processors
 973:DSP/Inc/arm_math.h ****    */
 974:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SMUSD(
 975:DSP/Inc/arm_math.h ****   uint32_t x,
 976:DSP/Inc/arm_math.h ****   uint32_t y)
 977:DSP/Inc/arm_math.h ****   {
 978:DSP/Inc/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) -
 979:DSP/Inc/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
 980:DSP/Inc/arm_math.h ****   }
 981:DSP/Inc/arm_math.h **** 
 982:DSP/Inc/arm_math.h **** 
 983:DSP/Inc/arm_math.h ****   /*
 984:DSP/Inc/arm_math.h ****    * @brief C custom defined SXTB16 for M3 and M0 processors
 985:DSP/Inc/arm_math.h ****    */
 986:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE uint32_t __SXTB16(
 987:DSP/Inc/arm_math.h ****   uint32_t x)
 988:DSP/Inc/arm_math.h ****   {
 989:DSP/Inc/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 24) >> 24) & (q31_t)0x0000FFFF) |
 990:DSP/Inc/arm_math.h ****                        ((((q31_t)x <<  8) >>  8) & (q31_t)0xFFFF0000)  ));
 991:DSP/Inc/arm_math.h ****   }
 992:DSP/Inc/arm_math.h **** 
 993:DSP/Inc/arm_math.h ****   /*
 994:DSP/Inc/arm_math.h ****    * @brief C custom defined SMMLA for M3 and M0 processors
 995:DSP/Inc/arm_math.h ****    */
 996:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE int32_t __SMMLA(
 997:DSP/Inc/arm_math.h ****   int32_t x,
 998:DSP/Inc/arm_math.h ****   int32_t y,
 999:DSP/Inc/arm_math.h ****   int32_t sum)
1000:DSP/Inc/arm_math.h ****   {
1001:DSP/Inc/arm_math.h ****     return (sum + (int32_t) (((int64_t) x * y) >> 32));
1002:DSP/Inc/arm_math.h ****   }
1003:DSP/Inc/arm_math.h **** 
1004:DSP/Inc/arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
1005:DSP/Inc/arm_math.h **** 
1006:DSP/Inc/arm_math.h **** 
1007:DSP/Inc/arm_math.h ****   /**
1008:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q7 FIR filter.
1009:DSP/Inc/arm_math.h ****    */
1010:DSP/Inc/arm_math.h ****   typedef struct
1011:DSP/Inc/arm_math.h ****   {
1012:DSP/Inc/arm_math.h ****     uint16_t numTaps;        /**< number of filter coefficients in the filter. */
1013:DSP/Inc/arm_math.h ****     q7_t *pState;            /**< points to the state variable array. The array is of length numTap
1014:DSP/Inc/arm_math.h ****     q7_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.*
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 39


1015:DSP/Inc/arm_math.h ****   } arm_fir_instance_q7;
1016:DSP/Inc/arm_math.h **** 
1017:DSP/Inc/arm_math.h ****   /**
1018:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 FIR filter.
1019:DSP/Inc/arm_math.h ****    */
1020:DSP/Inc/arm_math.h ****   typedef struct
1021:DSP/Inc/arm_math.h ****   {
1022:DSP/Inc/arm_math.h ****     uint16_t numTaps;         /**< number of filter coefficients in the filter. */
1023:DSP/Inc/arm_math.h ****     q15_t *pState;            /**< points to the state variable array. The array is of length numTa
1024:DSP/Inc/arm_math.h ****     q15_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.
1025:DSP/Inc/arm_math.h ****   } arm_fir_instance_q15;
1026:DSP/Inc/arm_math.h **** 
1027:DSP/Inc/arm_math.h ****   /**
1028:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 FIR filter.
1029:DSP/Inc/arm_math.h ****    */
1030:DSP/Inc/arm_math.h ****   typedef struct
1031:DSP/Inc/arm_math.h ****   {
1032:DSP/Inc/arm_math.h ****     uint16_t numTaps;         /**< number of filter coefficients in the filter. */
1033:DSP/Inc/arm_math.h ****     q31_t *pState;            /**< points to the state variable array. The array is of length numTa
1034:DSP/Inc/arm_math.h ****     q31_t *pCoeffs;           /**< points to the coefficient array. The array is of length numTaps.
1035:DSP/Inc/arm_math.h ****   } arm_fir_instance_q31;
1036:DSP/Inc/arm_math.h **** 
1037:DSP/Inc/arm_math.h ****   /**
1038:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point FIR filter.
1039:DSP/Inc/arm_math.h ****    */
1040:DSP/Inc/arm_math.h ****   typedef struct
1041:DSP/Inc/arm_math.h ****   {
1042:DSP/Inc/arm_math.h ****     uint16_t numTaps;     /**< number of filter coefficients in the filter. */
1043:DSP/Inc/arm_math.h ****     float32_t *pState;    /**< points to the state variable array. The array is of length numTaps+b
1044:DSP/Inc/arm_math.h ****     float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTaps. */
1045:DSP/Inc/arm_math.h ****   } arm_fir_instance_f32;
1046:DSP/Inc/arm_math.h **** 
1047:DSP/Inc/arm_math.h **** 
1048:DSP/Inc/arm_math.h ****   /**
1049:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q7 FIR filter.
1050:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q7 FIR filter structure.
1051:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1052:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1053:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1054:DSP/Inc/arm_math.h ****    */
1055:DSP/Inc/arm_math.h ****   void arm_fir_q7(
1056:DSP/Inc/arm_math.h ****   const arm_fir_instance_q7 * S,
1057:DSP/Inc/arm_math.h ****   q7_t * pSrc,
1058:DSP/Inc/arm_math.h ****   q7_t * pDst,
1059:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1060:DSP/Inc/arm_math.h **** 
1061:DSP/Inc/arm_math.h **** 
1062:DSP/Inc/arm_math.h ****   /**
1063:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q7 FIR filter.
1064:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q7 FIR structure.
1065:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1066:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1067:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1068:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed.
1069:DSP/Inc/arm_math.h ****    */
1070:DSP/Inc/arm_math.h ****   void arm_fir_init_q7(
1071:DSP/Inc/arm_math.h ****   arm_fir_instance_q7 * S,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 40


1072:DSP/Inc/arm_math.h ****   uint16_t numTaps,
1073:DSP/Inc/arm_math.h ****   q7_t * pCoeffs,
1074:DSP/Inc/arm_math.h ****   q7_t * pState,
1075:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1076:DSP/Inc/arm_math.h **** 
1077:DSP/Inc/arm_math.h **** 
1078:DSP/Inc/arm_math.h ****   /**
1079:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q15 FIR filter.
1080:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR structure.
1081:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1082:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1083:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1084:DSP/Inc/arm_math.h ****    */
1085:DSP/Inc/arm_math.h ****   void arm_fir_q15(
1086:DSP/Inc/arm_math.h ****   const arm_fir_instance_q15 * S,
1087:DSP/Inc/arm_math.h ****   q15_t * pSrc,
1088:DSP/Inc/arm_math.h ****   q15_t * pDst,
1089:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1090:DSP/Inc/arm_math.h **** 
1091:DSP/Inc/arm_math.h **** 
1092:DSP/Inc/arm_math.h ****   /**
1093:DSP/Inc/arm_math.h ****    * @brief Processing function for the fast Q15 FIR filter for Cortex-M3 and Cortex-M4.
1094:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR filter structure.
1095:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1096:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1097:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1098:DSP/Inc/arm_math.h ****    */
1099:DSP/Inc/arm_math.h ****   void arm_fir_fast_q15(
1100:DSP/Inc/arm_math.h ****   const arm_fir_instance_q15 * S,
1101:DSP/Inc/arm_math.h ****   q15_t * pSrc,
1102:DSP/Inc/arm_math.h ****   q15_t * pDst,
1103:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1104:DSP/Inc/arm_math.h **** 
1105:DSP/Inc/arm_math.h **** 
1106:DSP/Inc/arm_math.h ****   /**
1107:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q15 FIR filter.
1108:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR filter structure.
1109:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter. Must be even and greate
1110:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1111:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1112:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1113:DSP/Inc/arm_math.h ****    * @return The function returns ARM_MATH_SUCCESS if initialization was successful or ARM_MATH_ARG
1114:DSP/Inc/arm_math.h ****    * <code>numTaps</code> is not a supported value.
1115:DSP/Inc/arm_math.h ****    */
1116:DSP/Inc/arm_math.h ****   arm_status arm_fir_init_q15(
1117:DSP/Inc/arm_math.h ****   arm_fir_instance_q15 * S,
1118:DSP/Inc/arm_math.h ****   uint16_t numTaps,
1119:DSP/Inc/arm_math.h ****   q15_t * pCoeffs,
1120:DSP/Inc/arm_math.h ****   q15_t * pState,
1121:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1122:DSP/Inc/arm_math.h **** 
1123:DSP/Inc/arm_math.h **** 
1124:DSP/Inc/arm_math.h ****   /**
1125:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q31 FIR filter.
1126:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR filter structure.
1127:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1128:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 41


1129:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1130:DSP/Inc/arm_math.h ****    */
1131:DSP/Inc/arm_math.h ****   void arm_fir_q31(
1132:DSP/Inc/arm_math.h ****   const arm_fir_instance_q31 * S,
1133:DSP/Inc/arm_math.h ****   q31_t * pSrc,
1134:DSP/Inc/arm_math.h ****   q31_t * pDst,
1135:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1136:DSP/Inc/arm_math.h **** 
1137:DSP/Inc/arm_math.h **** 
1138:DSP/Inc/arm_math.h ****   /**
1139:DSP/Inc/arm_math.h ****    * @brief Processing function for the fast Q31 FIR filter for Cortex-M3 and Cortex-M4.
1140:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR structure.
1141:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1142:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1143:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1144:DSP/Inc/arm_math.h ****    */
1145:DSP/Inc/arm_math.h ****   void arm_fir_fast_q31(
1146:DSP/Inc/arm_math.h ****   const arm_fir_instance_q31 * S,
1147:DSP/Inc/arm_math.h ****   q31_t * pSrc,
1148:DSP/Inc/arm_math.h ****   q31_t * pDst,
1149:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1150:DSP/Inc/arm_math.h **** 
1151:DSP/Inc/arm_math.h **** 
1152:DSP/Inc/arm_math.h ****   /**
1153:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q31 FIR filter.
1154:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR structure.
1155:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1156:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1157:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1158:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1159:DSP/Inc/arm_math.h ****    */
1160:DSP/Inc/arm_math.h ****   void arm_fir_init_q31(
1161:DSP/Inc/arm_math.h ****   arm_fir_instance_q31 * S,
1162:DSP/Inc/arm_math.h ****   uint16_t numTaps,
1163:DSP/Inc/arm_math.h ****   q31_t * pCoeffs,
1164:DSP/Inc/arm_math.h ****   q31_t * pState,
1165:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1166:DSP/Inc/arm_math.h **** 
1167:DSP/Inc/arm_math.h **** 
1168:DSP/Inc/arm_math.h ****   /**
1169:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point FIR filter.
1170:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR structure.
1171:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1172:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1173:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1174:DSP/Inc/arm_math.h ****    */
1175:DSP/Inc/arm_math.h ****   void arm_fir_f32(
1176:DSP/Inc/arm_math.h ****   const arm_fir_instance_f32 * S,
1177:DSP/Inc/arm_math.h ****   float32_t * pSrc,
1178:DSP/Inc/arm_math.h ****   float32_t * pDst,
1179:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1180:DSP/Inc/arm_math.h **** 
1181:DSP/Inc/arm_math.h **** 
1182:DSP/Inc/arm_math.h ****   /**
1183:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the floating-point FIR filter.
1184:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR filter structure.
1185:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 42


1186:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1187:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1188:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1189:DSP/Inc/arm_math.h ****    */
1190:DSP/Inc/arm_math.h ****   void arm_fir_init_f32(
1191:DSP/Inc/arm_math.h ****   arm_fir_instance_f32 * S,
1192:DSP/Inc/arm_math.h ****   uint16_t numTaps,
1193:DSP/Inc/arm_math.h ****   float32_t * pCoeffs,
1194:DSP/Inc/arm_math.h ****   float32_t * pState,
1195:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1196:DSP/Inc/arm_math.h **** 
1197:DSP/Inc/arm_math.h **** 
1198:DSP/Inc/arm_math.h ****   /**
1199:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 Biquad cascade filter.
1200:DSP/Inc/arm_math.h ****    */
1201:DSP/Inc/arm_math.h ****   typedef struct
1202:DSP/Inc/arm_math.h ****   {
1203:DSP/Inc/arm_math.h ****     int8_t numStages;        /**< number of 2nd order stages in the filter.  Overall order is 2*num
1204:DSP/Inc/arm_math.h ****     q15_t *pState;           /**< Points to the array of state coefficients.  The array is of lengt
1205:DSP/Inc/arm_math.h ****     q15_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of length 5*nu
1206:DSP/Inc/arm_math.h ****     int8_t postShift;        /**< Additional shift, in bits, applied to each output sample. */
1207:DSP/Inc/arm_math.h ****   } arm_biquad_casd_df1_inst_q15;
1208:DSP/Inc/arm_math.h **** 
1209:DSP/Inc/arm_math.h ****   /**
1210:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 Biquad cascade filter.
1211:DSP/Inc/arm_math.h ****    */
1212:DSP/Inc/arm_math.h ****   typedef struct
1213:DSP/Inc/arm_math.h ****   {
1214:DSP/Inc/arm_math.h ****     uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is 2*num
1215:DSP/Inc/arm_math.h ****     q31_t *pState;           /**< Points to the array of state coefficients.  The array is of lengt
1216:DSP/Inc/arm_math.h ****     q31_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of length 5*nu
1217:DSP/Inc/arm_math.h ****     uint8_t postShift;       /**< Additional shift, in bits, applied to each output sample. */
1218:DSP/Inc/arm_math.h ****   } arm_biquad_casd_df1_inst_q31;
1219:DSP/Inc/arm_math.h **** 
1220:DSP/Inc/arm_math.h ****   /**
1221:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point Biquad cascade filter.
1222:DSP/Inc/arm_math.h ****    */
1223:DSP/Inc/arm_math.h ****   typedef struct
1224:DSP/Inc/arm_math.h ****   {
1225:DSP/Inc/arm_math.h ****     uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is 2*num
1226:DSP/Inc/arm_math.h ****     float32_t *pState;       /**< Points to the array of state coefficients.  The array is of lengt
1227:DSP/Inc/arm_math.h ****     float32_t *pCoeffs;      /**< Points to the array of coefficients.  The array is of length 5*nu
1228:DSP/Inc/arm_math.h ****   } arm_biquad_casd_df1_inst_f32;
1229:DSP/Inc/arm_math.h **** 
1230:DSP/Inc/arm_math.h **** 
1231:DSP/Inc/arm_math.h ****   /**
1232:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q15 Biquad cascade filter.
1233:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
1234:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1235:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1236:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1237:DSP/Inc/arm_math.h ****    */
1238:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df1_q15(
1239:DSP/Inc/arm_math.h ****   const arm_biquad_casd_df1_inst_q15 * S,
1240:DSP/Inc/arm_math.h ****   q15_t * pSrc,
1241:DSP/Inc/arm_math.h ****   q15_t * pDst,
1242:DSP/Inc/arm_math.h ****   uint32_t blockSize);
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 43


1243:DSP/Inc/arm_math.h **** 
1244:DSP/Inc/arm_math.h **** 
1245:DSP/Inc/arm_math.h ****   /**
1246:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q15 Biquad cascade filter.
1247:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 Biquad cascade structure.
1248:DSP/Inc/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1249:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1250:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1251:DSP/Inc/arm_math.h ****    * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficie
1252:DSP/Inc/arm_math.h ****    */
1253:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df1_init_q15(
1254:DSP/Inc/arm_math.h ****   arm_biquad_casd_df1_inst_q15 * S,
1255:DSP/Inc/arm_math.h ****   uint8_t numStages,
1256:DSP/Inc/arm_math.h ****   q15_t * pCoeffs,
1257:DSP/Inc/arm_math.h ****   q15_t * pState,
1258:DSP/Inc/arm_math.h ****   int8_t postShift);
1259:DSP/Inc/arm_math.h **** 
1260:DSP/Inc/arm_math.h **** 
1261:DSP/Inc/arm_math.h ****   /**
1262:DSP/Inc/arm_math.h ****    * @brief Fast but less precise processing function for the Q15 Biquad cascade filter for Cortex-
1263:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
1264:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1265:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1266:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1267:DSP/Inc/arm_math.h ****    */
1268:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df1_fast_q15(
1269:DSP/Inc/arm_math.h ****   const arm_biquad_casd_df1_inst_q15 * S,
1270:DSP/Inc/arm_math.h ****   q15_t * pSrc,
1271:DSP/Inc/arm_math.h ****   q15_t * pDst,
1272:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1273:DSP/Inc/arm_math.h **** 
1274:DSP/Inc/arm_math.h **** 
1275:DSP/Inc/arm_math.h ****   /**
1276:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q31 Biquad cascade filter
1277:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
1278:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1279:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1280:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1281:DSP/Inc/arm_math.h ****    */
1282:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df1_q31(
1283:DSP/Inc/arm_math.h ****   const arm_biquad_casd_df1_inst_q31 * S,
1284:DSP/Inc/arm_math.h ****   q31_t * pSrc,
1285:DSP/Inc/arm_math.h ****   q31_t * pDst,
1286:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1287:DSP/Inc/arm_math.h **** 
1288:DSP/Inc/arm_math.h **** 
1289:DSP/Inc/arm_math.h ****   /**
1290:DSP/Inc/arm_math.h ****    * @brief Fast but less precise processing function for the Q31 Biquad cascade filter for Cortex-
1291:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
1292:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1293:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1294:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1295:DSP/Inc/arm_math.h ****    */
1296:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df1_fast_q31(
1297:DSP/Inc/arm_math.h ****   const arm_biquad_casd_df1_inst_q31 * S,
1298:DSP/Inc/arm_math.h ****   q31_t * pSrc,
1299:DSP/Inc/arm_math.h ****   q31_t * pDst,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 44


1300:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1301:DSP/Inc/arm_math.h **** 
1302:DSP/Inc/arm_math.h **** 
1303:DSP/Inc/arm_math.h ****   /**
1304:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q31 Biquad cascade filter.
1305:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 Biquad cascade structure.
1306:DSP/Inc/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1307:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1308:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1309:DSP/Inc/arm_math.h ****    * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficie
1310:DSP/Inc/arm_math.h ****    */
1311:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df1_init_q31(
1312:DSP/Inc/arm_math.h ****   arm_biquad_casd_df1_inst_q31 * S,
1313:DSP/Inc/arm_math.h ****   uint8_t numStages,
1314:DSP/Inc/arm_math.h ****   q31_t * pCoeffs,
1315:DSP/Inc/arm_math.h ****   q31_t * pState,
1316:DSP/Inc/arm_math.h ****   int8_t postShift);
1317:DSP/Inc/arm_math.h **** 
1318:DSP/Inc/arm_math.h **** 
1319:DSP/Inc/arm_math.h ****   /**
1320:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point Biquad cascade filter.
1321:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point Biquad cascade structure.
1322:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1323:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1324:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1325:DSP/Inc/arm_math.h ****    */
1326:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df1_f32(
1327:DSP/Inc/arm_math.h ****   const arm_biquad_casd_df1_inst_f32 * S,
1328:DSP/Inc/arm_math.h ****   float32_t * pSrc,
1329:DSP/Inc/arm_math.h ****   float32_t * pDst,
1330:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1331:DSP/Inc/arm_math.h **** 
1332:DSP/Inc/arm_math.h **** 
1333:DSP/Inc/arm_math.h ****   /**
1334:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the floating-point Biquad cascade filter.
1335:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point Biquad cascade structure
1336:DSP/Inc/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1337:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1338:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1339:DSP/Inc/arm_math.h ****    */
1340:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df1_init_f32(
1341:DSP/Inc/arm_math.h ****   arm_biquad_casd_df1_inst_f32 * S,
1342:DSP/Inc/arm_math.h ****   uint8_t numStages,
1343:DSP/Inc/arm_math.h ****   float32_t * pCoeffs,
1344:DSP/Inc/arm_math.h ****   float32_t * pState);
1345:DSP/Inc/arm_math.h **** 
1346:DSP/Inc/arm_math.h **** 
1347:DSP/Inc/arm_math.h ****   /**
1348:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point matrix structure.
1349:DSP/Inc/arm_math.h ****    */
1350:DSP/Inc/arm_math.h ****   typedef struct
1351:DSP/Inc/arm_math.h ****   {
1352:DSP/Inc/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1353:DSP/Inc/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1354:DSP/Inc/arm_math.h ****     float32_t *pData;     /**< points to the data of the matrix. */
1355:DSP/Inc/arm_math.h ****   } arm_matrix_instance_f32;
1356:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 45


1357:DSP/Inc/arm_math.h **** 
1358:DSP/Inc/arm_math.h ****   /**
1359:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point matrix structure.
1360:DSP/Inc/arm_math.h ****    */
1361:DSP/Inc/arm_math.h ****   typedef struct
1362:DSP/Inc/arm_math.h ****   {
1363:DSP/Inc/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1364:DSP/Inc/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1365:DSP/Inc/arm_math.h ****     float64_t *pData;     /**< points to the data of the matrix. */
1366:DSP/Inc/arm_math.h ****   } arm_matrix_instance_f64;
1367:DSP/Inc/arm_math.h **** 
1368:DSP/Inc/arm_math.h ****   /**
1369:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 matrix structure.
1370:DSP/Inc/arm_math.h ****    */
1371:DSP/Inc/arm_math.h ****   typedef struct
1372:DSP/Inc/arm_math.h ****   {
1373:DSP/Inc/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1374:DSP/Inc/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1375:DSP/Inc/arm_math.h ****     q15_t *pData;         /**< points to the data of the matrix. */
1376:DSP/Inc/arm_math.h ****   } arm_matrix_instance_q15;
1377:DSP/Inc/arm_math.h **** 
1378:DSP/Inc/arm_math.h ****   /**
1379:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 matrix structure.
1380:DSP/Inc/arm_math.h ****    */
1381:DSP/Inc/arm_math.h ****   typedef struct
1382:DSP/Inc/arm_math.h ****   {
1383:DSP/Inc/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1384:DSP/Inc/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1385:DSP/Inc/arm_math.h ****     q31_t *pData;         /**< points to the data of the matrix. */
1386:DSP/Inc/arm_math.h ****   } arm_matrix_instance_q31;
1387:DSP/Inc/arm_math.h **** 
1388:DSP/Inc/arm_math.h **** 
1389:DSP/Inc/arm_math.h ****   /**
1390:DSP/Inc/arm_math.h ****    * @brief Floating-point matrix addition.
1391:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1392:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1393:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1394:DSP/Inc/arm_math.h ****    * @return     The function returns either
1395:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1396:DSP/Inc/arm_math.h ****    */
1397:DSP/Inc/arm_math.h ****   arm_status arm_mat_add_f32(
1398:DSP/Inc/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1399:DSP/Inc/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1400:DSP/Inc/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1401:DSP/Inc/arm_math.h **** 
1402:DSP/Inc/arm_math.h **** 
1403:DSP/Inc/arm_math.h ****   /**
1404:DSP/Inc/arm_math.h ****    * @brief Q15 matrix addition.
1405:DSP/Inc/arm_math.h ****    * @param[in]   pSrcA  points to the first input matrix structure
1406:DSP/Inc/arm_math.h ****    * @param[in]   pSrcB  points to the second input matrix structure
1407:DSP/Inc/arm_math.h ****    * @param[out]  pDst   points to output matrix structure
1408:DSP/Inc/arm_math.h ****    * @return     The function returns either
1409:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1410:DSP/Inc/arm_math.h ****    */
1411:DSP/Inc/arm_math.h ****   arm_status arm_mat_add_q15(
1412:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1413:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 46


1414:DSP/Inc/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1415:DSP/Inc/arm_math.h **** 
1416:DSP/Inc/arm_math.h **** 
1417:DSP/Inc/arm_math.h ****   /**
1418:DSP/Inc/arm_math.h ****    * @brief Q31 matrix addition.
1419:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1420:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1421:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1422:DSP/Inc/arm_math.h ****    * @return     The function returns either
1423:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1424:DSP/Inc/arm_math.h ****    */
1425:DSP/Inc/arm_math.h ****   arm_status arm_mat_add_q31(
1426:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1427:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1428:DSP/Inc/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1429:DSP/Inc/arm_math.h **** 
1430:DSP/Inc/arm_math.h **** 
1431:DSP/Inc/arm_math.h ****   /**
1432:DSP/Inc/arm_math.h ****    * @brief Floating-point, complex, matrix multiplication.
1433:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1434:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1435:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1436:DSP/Inc/arm_math.h ****    * @return     The function returns either
1437:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1438:DSP/Inc/arm_math.h ****    */
1439:DSP/Inc/arm_math.h ****   arm_status arm_mat_cmplx_mult_f32(
1440:DSP/Inc/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1441:DSP/Inc/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1442:DSP/Inc/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1443:DSP/Inc/arm_math.h **** 
1444:DSP/Inc/arm_math.h **** 
1445:DSP/Inc/arm_math.h ****   /**
1446:DSP/Inc/arm_math.h ****    * @brief Q15, complex,  matrix multiplication.
1447:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1448:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1449:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1450:DSP/Inc/arm_math.h ****    * @return     The function returns either
1451:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1452:DSP/Inc/arm_math.h ****    */
1453:DSP/Inc/arm_math.h ****   arm_status arm_mat_cmplx_mult_q15(
1454:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1455:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1456:DSP/Inc/arm_math.h ****   arm_matrix_instance_q15 * pDst,
1457:DSP/Inc/arm_math.h ****   q15_t * pScratch);
1458:DSP/Inc/arm_math.h **** 
1459:DSP/Inc/arm_math.h **** 
1460:DSP/Inc/arm_math.h ****   /**
1461:DSP/Inc/arm_math.h ****    * @brief Q31, complex, matrix multiplication.
1462:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1463:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1464:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1465:DSP/Inc/arm_math.h ****    * @return     The function returns either
1466:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1467:DSP/Inc/arm_math.h ****    */
1468:DSP/Inc/arm_math.h ****   arm_status arm_mat_cmplx_mult_q31(
1469:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1470:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 47


1471:DSP/Inc/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1472:DSP/Inc/arm_math.h **** 
1473:DSP/Inc/arm_math.h **** 
1474:DSP/Inc/arm_math.h ****   /**
1475:DSP/Inc/arm_math.h ****    * @brief Floating-point matrix transpose.
1476:DSP/Inc/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1477:DSP/Inc/arm_math.h ****    * @param[out] pDst  points to the output matrix
1478:DSP/Inc/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1479:DSP/Inc/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1480:DSP/Inc/arm_math.h ****    */
1481:DSP/Inc/arm_math.h ****   arm_status arm_mat_trans_f32(
1482:DSP/Inc/arm_math.h ****   const arm_matrix_instance_f32 * pSrc,
1483:DSP/Inc/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1484:DSP/Inc/arm_math.h **** 
1485:DSP/Inc/arm_math.h **** 
1486:DSP/Inc/arm_math.h ****   /**
1487:DSP/Inc/arm_math.h ****    * @brief Q15 matrix transpose.
1488:DSP/Inc/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1489:DSP/Inc/arm_math.h ****    * @param[out] pDst  points to the output matrix
1490:DSP/Inc/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1491:DSP/Inc/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1492:DSP/Inc/arm_math.h ****    */
1493:DSP/Inc/arm_math.h ****   arm_status arm_mat_trans_q15(
1494:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrc,
1495:DSP/Inc/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1496:DSP/Inc/arm_math.h **** 
1497:DSP/Inc/arm_math.h **** 
1498:DSP/Inc/arm_math.h ****   /**
1499:DSP/Inc/arm_math.h ****    * @brief Q31 matrix transpose.
1500:DSP/Inc/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1501:DSP/Inc/arm_math.h ****    * @param[out] pDst  points to the output matrix
1502:DSP/Inc/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1503:DSP/Inc/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1504:DSP/Inc/arm_math.h ****    */
1505:DSP/Inc/arm_math.h ****   arm_status arm_mat_trans_q31(
1506:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrc,
1507:DSP/Inc/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1508:DSP/Inc/arm_math.h **** 
1509:DSP/Inc/arm_math.h **** 
1510:DSP/Inc/arm_math.h ****   /**
1511:DSP/Inc/arm_math.h ****    * @brief Floating-point matrix multiplication
1512:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1513:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1514:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1515:DSP/Inc/arm_math.h ****    * @return     The function returns either
1516:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1517:DSP/Inc/arm_math.h ****    */
1518:DSP/Inc/arm_math.h ****   arm_status arm_mat_mult_f32(
1519:DSP/Inc/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1520:DSP/Inc/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1521:DSP/Inc/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1522:DSP/Inc/arm_math.h **** 
1523:DSP/Inc/arm_math.h **** 
1524:DSP/Inc/arm_math.h ****   /**
1525:DSP/Inc/arm_math.h ****    * @brief Q15 matrix multiplication
1526:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA   points to the first input matrix structure
1527:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB   points to the second input matrix structure
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 48


1528:DSP/Inc/arm_math.h ****    * @param[out] pDst    points to output matrix structure
1529:DSP/Inc/arm_math.h ****    * @param[in]  pState  points to the array for storing intermediate results
1530:DSP/Inc/arm_math.h ****    * @return     The function returns either
1531:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1532:DSP/Inc/arm_math.h ****    */
1533:DSP/Inc/arm_math.h ****   arm_status arm_mat_mult_q15(
1534:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1535:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1536:DSP/Inc/arm_math.h ****   arm_matrix_instance_q15 * pDst,
1537:DSP/Inc/arm_math.h ****   q15_t * pState);
1538:DSP/Inc/arm_math.h **** 
1539:DSP/Inc/arm_math.h **** 
1540:DSP/Inc/arm_math.h ****   /**
1541:DSP/Inc/arm_math.h ****    * @brief Q15 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
1542:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA   points to the first input matrix structure
1543:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB   points to the second input matrix structure
1544:DSP/Inc/arm_math.h ****    * @param[out] pDst    points to output matrix structure
1545:DSP/Inc/arm_math.h ****    * @param[in]  pState  points to the array for storing intermediate results
1546:DSP/Inc/arm_math.h ****    * @return     The function returns either
1547:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1548:DSP/Inc/arm_math.h ****    */
1549:DSP/Inc/arm_math.h ****   arm_status arm_mat_mult_fast_q15(
1550:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1551:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1552:DSP/Inc/arm_math.h ****   arm_matrix_instance_q15 * pDst,
1553:DSP/Inc/arm_math.h ****   q15_t * pState);
1554:DSP/Inc/arm_math.h **** 
1555:DSP/Inc/arm_math.h **** 
1556:DSP/Inc/arm_math.h ****   /**
1557:DSP/Inc/arm_math.h ****    * @brief Q31 matrix multiplication
1558:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1559:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1560:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1561:DSP/Inc/arm_math.h ****    * @return     The function returns either
1562:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1563:DSP/Inc/arm_math.h ****    */
1564:DSP/Inc/arm_math.h ****   arm_status arm_mat_mult_q31(
1565:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1566:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1567:DSP/Inc/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1568:DSP/Inc/arm_math.h **** 
1569:DSP/Inc/arm_math.h **** 
1570:DSP/Inc/arm_math.h ****   /**
1571:DSP/Inc/arm_math.h ****    * @brief Q31 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
1572:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1573:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1574:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1575:DSP/Inc/arm_math.h ****    * @return     The function returns either
1576:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1577:DSP/Inc/arm_math.h ****    */
1578:DSP/Inc/arm_math.h ****   arm_status arm_mat_mult_fast_q31(
1579:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1580:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1581:DSP/Inc/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1582:DSP/Inc/arm_math.h **** 
1583:DSP/Inc/arm_math.h **** 
1584:DSP/Inc/arm_math.h ****   /**
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 49


1585:DSP/Inc/arm_math.h ****    * @brief Floating-point matrix subtraction
1586:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1587:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1588:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1589:DSP/Inc/arm_math.h ****    * @return     The function returns either
1590:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1591:DSP/Inc/arm_math.h ****    */
1592:DSP/Inc/arm_math.h ****   arm_status arm_mat_sub_f32(
1593:DSP/Inc/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1594:DSP/Inc/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1595:DSP/Inc/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1596:DSP/Inc/arm_math.h **** 
1597:DSP/Inc/arm_math.h **** 
1598:DSP/Inc/arm_math.h ****   /**
1599:DSP/Inc/arm_math.h ****    * @brief Q15 matrix subtraction
1600:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1601:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1602:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1603:DSP/Inc/arm_math.h ****    * @return     The function returns either
1604:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1605:DSP/Inc/arm_math.h ****    */
1606:DSP/Inc/arm_math.h ****   arm_status arm_mat_sub_q15(
1607:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1608:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1609:DSP/Inc/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1610:DSP/Inc/arm_math.h **** 
1611:DSP/Inc/arm_math.h **** 
1612:DSP/Inc/arm_math.h ****   /**
1613:DSP/Inc/arm_math.h ****    * @brief Q31 matrix subtraction
1614:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1615:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1616:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1617:DSP/Inc/arm_math.h ****    * @return     The function returns either
1618:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1619:DSP/Inc/arm_math.h ****    */
1620:DSP/Inc/arm_math.h ****   arm_status arm_mat_sub_q31(
1621:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1622:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1623:DSP/Inc/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1624:DSP/Inc/arm_math.h **** 
1625:DSP/Inc/arm_math.h **** 
1626:DSP/Inc/arm_math.h ****   /**
1627:DSP/Inc/arm_math.h ****    * @brief Floating-point matrix scaling.
1628:DSP/Inc/arm_math.h ****    * @param[in]  pSrc   points to the input matrix
1629:DSP/Inc/arm_math.h ****    * @param[in]  scale  scale factor
1630:DSP/Inc/arm_math.h ****    * @param[out] pDst   points to the output matrix
1631:DSP/Inc/arm_math.h ****    * @return     The function returns either
1632:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1633:DSP/Inc/arm_math.h ****    */
1634:DSP/Inc/arm_math.h ****   arm_status arm_mat_scale_f32(
1635:DSP/Inc/arm_math.h ****   const arm_matrix_instance_f32 * pSrc,
1636:DSP/Inc/arm_math.h ****   float32_t scale,
1637:DSP/Inc/arm_math.h ****   arm_matrix_instance_f32 * pDst);
1638:DSP/Inc/arm_math.h **** 
1639:DSP/Inc/arm_math.h **** 
1640:DSP/Inc/arm_math.h ****   /**
1641:DSP/Inc/arm_math.h ****    * @brief Q15 matrix scaling.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 50


1642:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to input matrix
1643:DSP/Inc/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale factor
1644:DSP/Inc/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
1645:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to output matrix
1646:DSP/Inc/arm_math.h ****    * @return     The function returns either
1647:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1648:DSP/Inc/arm_math.h ****    */
1649:DSP/Inc/arm_math.h ****   arm_status arm_mat_scale_q15(
1650:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q15 * pSrc,
1651:DSP/Inc/arm_math.h ****   q15_t scaleFract,
1652:DSP/Inc/arm_math.h ****   int32_t shift,
1653:DSP/Inc/arm_math.h ****   arm_matrix_instance_q15 * pDst);
1654:DSP/Inc/arm_math.h **** 
1655:DSP/Inc/arm_math.h **** 
1656:DSP/Inc/arm_math.h ****   /**
1657:DSP/Inc/arm_math.h ****    * @brief Q31 matrix scaling.
1658:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to input matrix
1659:DSP/Inc/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale factor
1660:DSP/Inc/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
1661:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to output matrix structure
1662:DSP/Inc/arm_math.h ****    * @return     The function returns either
1663:DSP/Inc/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1664:DSP/Inc/arm_math.h ****    */
1665:DSP/Inc/arm_math.h ****   arm_status arm_mat_scale_q31(
1666:DSP/Inc/arm_math.h ****   const arm_matrix_instance_q31 * pSrc,
1667:DSP/Inc/arm_math.h ****   q31_t scaleFract,
1668:DSP/Inc/arm_math.h ****   int32_t shift,
1669:DSP/Inc/arm_math.h ****   arm_matrix_instance_q31 * pDst);
1670:DSP/Inc/arm_math.h **** 
1671:DSP/Inc/arm_math.h **** 
1672:DSP/Inc/arm_math.h ****   /**
1673:DSP/Inc/arm_math.h ****    * @brief  Q31 matrix initialization.
1674:DSP/Inc/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1675:DSP/Inc/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1676:DSP/Inc/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1677:DSP/Inc/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1678:DSP/Inc/arm_math.h ****    */
1679:DSP/Inc/arm_math.h ****   void arm_mat_init_q31(
1680:DSP/Inc/arm_math.h ****   arm_matrix_instance_q31 * S,
1681:DSP/Inc/arm_math.h ****   uint16_t nRows,
1682:DSP/Inc/arm_math.h ****   uint16_t nColumns,
1683:DSP/Inc/arm_math.h ****   q31_t * pData);
1684:DSP/Inc/arm_math.h **** 
1685:DSP/Inc/arm_math.h **** 
1686:DSP/Inc/arm_math.h ****   /**
1687:DSP/Inc/arm_math.h ****    * @brief  Q15 matrix initialization.
1688:DSP/Inc/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1689:DSP/Inc/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1690:DSP/Inc/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1691:DSP/Inc/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1692:DSP/Inc/arm_math.h ****    */
1693:DSP/Inc/arm_math.h ****   void arm_mat_init_q15(
1694:DSP/Inc/arm_math.h ****   arm_matrix_instance_q15 * S,
1695:DSP/Inc/arm_math.h ****   uint16_t nRows,
1696:DSP/Inc/arm_math.h ****   uint16_t nColumns,
1697:DSP/Inc/arm_math.h ****   q15_t * pData);
1698:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 51


1699:DSP/Inc/arm_math.h **** 
1700:DSP/Inc/arm_math.h ****   /**
1701:DSP/Inc/arm_math.h ****    * @brief  Floating-point matrix initialization.
1702:DSP/Inc/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1703:DSP/Inc/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1704:DSP/Inc/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1705:DSP/Inc/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1706:DSP/Inc/arm_math.h ****    */
1707:DSP/Inc/arm_math.h ****   void arm_mat_init_f32(
1708:DSP/Inc/arm_math.h ****   arm_matrix_instance_f32 * S,
1709:DSP/Inc/arm_math.h ****   uint16_t nRows,
1710:DSP/Inc/arm_math.h ****   uint16_t nColumns,
1711:DSP/Inc/arm_math.h ****   float32_t * pData);
1712:DSP/Inc/arm_math.h **** 
1713:DSP/Inc/arm_math.h **** 
1714:DSP/Inc/arm_math.h **** 
1715:DSP/Inc/arm_math.h ****   /**
1716:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 PID Control.
1717:DSP/Inc/arm_math.h ****    */
1718:DSP/Inc/arm_math.h ****   typedef struct
1719:DSP/Inc/arm_math.h ****   {
1720:DSP/Inc/arm_math.h ****     q15_t A0;           /**< The derived gain, A0 = Kp + Ki + Kd . */
1721:DSP/Inc/arm_math.h **** #if !defined (ARM_MATH_DSP)
1722:DSP/Inc/arm_math.h ****     q15_t A1;
1723:DSP/Inc/arm_math.h ****     q15_t A2;
1724:DSP/Inc/arm_math.h **** #else
1725:DSP/Inc/arm_math.h ****     q31_t A1;           /**< The derived gain A1 = -Kp - 2Kd | Kd.*/
1726:DSP/Inc/arm_math.h **** #endif
1727:DSP/Inc/arm_math.h ****     q15_t state[3];     /**< The state array of length 3. */
1728:DSP/Inc/arm_math.h ****     q15_t Kp;           /**< The proportional gain. */
1729:DSP/Inc/arm_math.h ****     q15_t Ki;           /**< The integral gain. */
1730:DSP/Inc/arm_math.h ****     q15_t Kd;           /**< The derivative gain. */
1731:DSP/Inc/arm_math.h ****   } arm_pid_instance_q15;
1732:DSP/Inc/arm_math.h **** 
1733:DSP/Inc/arm_math.h ****   /**
1734:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 PID Control.
1735:DSP/Inc/arm_math.h ****    */
1736:DSP/Inc/arm_math.h ****   typedef struct
1737:DSP/Inc/arm_math.h ****   {
1738:DSP/Inc/arm_math.h ****     q31_t A0;            /**< The derived gain, A0 = Kp + Ki + Kd . */
1739:DSP/Inc/arm_math.h ****     q31_t A1;            /**< The derived gain, A1 = -Kp - 2Kd. */
1740:DSP/Inc/arm_math.h ****     q31_t A2;            /**< The derived gain, A2 = Kd . */
1741:DSP/Inc/arm_math.h ****     q31_t state[3];      /**< The state array of length 3. */
1742:DSP/Inc/arm_math.h ****     q31_t Kp;            /**< The proportional gain. */
1743:DSP/Inc/arm_math.h ****     q31_t Ki;            /**< The integral gain. */
1744:DSP/Inc/arm_math.h ****     q31_t Kd;            /**< The derivative gain. */
1745:DSP/Inc/arm_math.h ****   } arm_pid_instance_q31;
1746:DSP/Inc/arm_math.h **** 
1747:DSP/Inc/arm_math.h ****   /**
1748:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point PID Control.
1749:DSP/Inc/arm_math.h ****    */
1750:DSP/Inc/arm_math.h ****   typedef struct
1751:DSP/Inc/arm_math.h ****   {
1752:DSP/Inc/arm_math.h ****     float32_t A0;          /**< The derived gain, A0 = Kp + Ki + Kd . */
1753:DSP/Inc/arm_math.h ****     float32_t A1;          /**< The derived gain, A1 = -Kp - 2Kd. */
1754:DSP/Inc/arm_math.h ****     float32_t A2;          /**< The derived gain, A2 = Kd . */
1755:DSP/Inc/arm_math.h ****     float32_t state[3];    /**< The state array of length 3. */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 52


1756:DSP/Inc/arm_math.h ****     float32_t Kp;          /**< The proportional gain. */
1757:DSP/Inc/arm_math.h ****     float32_t Ki;          /**< The integral gain. */
1758:DSP/Inc/arm_math.h ****     float32_t Kd;          /**< The derivative gain. */
1759:DSP/Inc/arm_math.h ****   } arm_pid_instance_f32;
1760:DSP/Inc/arm_math.h **** 
1761:DSP/Inc/arm_math.h **** 
1762:DSP/Inc/arm_math.h **** 
1763:DSP/Inc/arm_math.h ****   /**
1764:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the floating-point PID Control.
1765:DSP/Inc/arm_math.h ****    * @param[in,out] S               points to an instance of the PID structure.
1766:DSP/Inc/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1767:DSP/Inc/arm_math.h ****    */
1768:DSP/Inc/arm_math.h ****   void arm_pid_init_f32(
1769:DSP/Inc/arm_math.h ****   arm_pid_instance_f32 * S,
1770:DSP/Inc/arm_math.h ****   int32_t resetStateFlag);
1771:DSP/Inc/arm_math.h **** 
1772:DSP/Inc/arm_math.h **** 
1773:DSP/Inc/arm_math.h ****   /**
1774:DSP/Inc/arm_math.h ****    * @brief  Reset function for the floating-point PID Control.
1775:DSP/Inc/arm_math.h ****    * @param[in,out] S  is an instance of the floating-point PID Control structure
1776:DSP/Inc/arm_math.h ****    */
1777:DSP/Inc/arm_math.h ****   void arm_pid_reset_f32(
1778:DSP/Inc/arm_math.h ****   arm_pid_instance_f32 * S);
1779:DSP/Inc/arm_math.h **** 
1780:DSP/Inc/arm_math.h **** 
1781:DSP/Inc/arm_math.h ****   /**
1782:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q31 PID Control.
1783:DSP/Inc/arm_math.h ****    * @param[in,out] S               points to an instance of the Q15 PID structure.
1784:DSP/Inc/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1785:DSP/Inc/arm_math.h ****    */
1786:DSP/Inc/arm_math.h ****   void arm_pid_init_q31(
1787:DSP/Inc/arm_math.h ****   arm_pid_instance_q31 * S,
1788:DSP/Inc/arm_math.h ****   int32_t resetStateFlag);
1789:DSP/Inc/arm_math.h **** 
1790:DSP/Inc/arm_math.h **** 
1791:DSP/Inc/arm_math.h ****   /**
1792:DSP/Inc/arm_math.h ****    * @brief  Reset function for the Q31 PID Control.
1793:DSP/Inc/arm_math.h ****    * @param[in,out] S   points to an instance of the Q31 PID Control structure
1794:DSP/Inc/arm_math.h ****    */
1795:DSP/Inc/arm_math.h **** 
1796:DSP/Inc/arm_math.h ****   void arm_pid_reset_q31(
1797:DSP/Inc/arm_math.h ****   arm_pid_instance_q31 * S);
1798:DSP/Inc/arm_math.h **** 
1799:DSP/Inc/arm_math.h **** 
1800:DSP/Inc/arm_math.h ****   /**
1801:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q15 PID Control.
1802:DSP/Inc/arm_math.h ****    * @param[in,out] S               points to an instance of the Q15 PID structure.
1803:DSP/Inc/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1804:DSP/Inc/arm_math.h ****    */
1805:DSP/Inc/arm_math.h ****   void arm_pid_init_q15(
1806:DSP/Inc/arm_math.h ****   arm_pid_instance_q15 * S,
1807:DSP/Inc/arm_math.h ****   int32_t resetStateFlag);
1808:DSP/Inc/arm_math.h **** 
1809:DSP/Inc/arm_math.h **** 
1810:DSP/Inc/arm_math.h ****   /**
1811:DSP/Inc/arm_math.h ****    * @brief  Reset function for the Q15 PID Control.
1812:DSP/Inc/arm_math.h ****    * @param[in,out] S  points to an instance of the q15 PID Control structure
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 53


1813:DSP/Inc/arm_math.h ****    */
1814:DSP/Inc/arm_math.h ****   void arm_pid_reset_q15(
1815:DSP/Inc/arm_math.h ****   arm_pid_instance_q15 * S);
1816:DSP/Inc/arm_math.h **** 
1817:DSP/Inc/arm_math.h **** 
1818:DSP/Inc/arm_math.h ****   /**
1819:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point Linear Interpolate function.
1820:DSP/Inc/arm_math.h ****    */
1821:DSP/Inc/arm_math.h ****   typedef struct
1822:DSP/Inc/arm_math.h ****   {
1823:DSP/Inc/arm_math.h ****     uint32_t nValues;           /**< nValues */
1824:DSP/Inc/arm_math.h ****     float32_t x1;               /**< x1 */
1825:DSP/Inc/arm_math.h ****     float32_t xSpacing;         /**< xSpacing */
1826:DSP/Inc/arm_math.h ****     float32_t *pYData;          /**< pointer to the table of Y values */
1827:DSP/Inc/arm_math.h ****   } arm_linear_interp_instance_f32;
1828:DSP/Inc/arm_math.h **** 
1829:DSP/Inc/arm_math.h ****   /**
1830:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point bilinear interpolation function.
1831:DSP/Inc/arm_math.h ****    */
1832:DSP/Inc/arm_math.h ****   typedef struct
1833:DSP/Inc/arm_math.h ****   {
1834:DSP/Inc/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1835:DSP/Inc/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1836:DSP/Inc/arm_math.h ****     float32_t *pData;   /**< points to the data table. */
1837:DSP/Inc/arm_math.h ****   } arm_bilinear_interp_instance_f32;
1838:DSP/Inc/arm_math.h **** 
1839:DSP/Inc/arm_math.h ****    /**
1840:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 bilinear interpolation function.
1841:DSP/Inc/arm_math.h ****    */
1842:DSP/Inc/arm_math.h ****   typedef struct
1843:DSP/Inc/arm_math.h ****   {
1844:DSP/Inc/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1845:DSP/Inc/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1846:DSP/Inc/arm_math.h ****     q31_t *pData;       /**< points to the data table. */
1847:DSP/Inc/arm_math.h ****   } arm_bilinear_interp_instance_q31;
1848:DSP/Inc/arm_math.h **** 
1849:DSP/Inc/arm_math.h ****    /**
1850:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 bilinear interpolation function.
1851:DSP/Inc/arm_math.h ****    */
1852:DSP/Inc/arm_math.h ****   typedef struct
1853:DSP/Inc/arm_math.h ****   {
1854:DSP/Inc/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1855:DSP/Inc/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1856:DSP/Inc/arm_math.h ****     q15_t *pData;       /**< points to the data table. */
1857:DSP/Inc/arm_math.h ****   } arm_bilinear_interp_instance_q15;
1858:DSP/Inc/arm_math.h **** 
1859:DSP/Inc/arm_math.h ****    /**
1860:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 bilinear interpolation function.
1861:DSP/Inc/arm_math.h ****    */
1862:DSP/Inc/arm_math.h ****   typedef struct
1863:DSP/Inc/arm_math.h ****   {
1864:DSP/Inc/arm_math.h ****     uint16_t numRows;   /**< number of rows in the data table. */
1865:DSP/Inc/arm_math.h ****     uint16_t numCols;   /**< number of columns in the data table. */
1866:DSP/Inc/arm_math.h ****     q7_t *pData;        /**< points to the data table. */
1867:DSP/Inc/arm_math.h ****   } arm_bilinear_interp_instance_q7;
1868:DSP/Inc/arm_math.h **** 
1869:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 54


1870:DSP/Inc/arm_math.h ****   /**
1871:DSP/Inc/arm_math.h ****    * @brief Q7 vector multiplication.
1872:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1873:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1874:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
1875:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1876:DSP/Inc/arm_math.h ****    */
1877:DSP/Inc/arm_math.h ****   void arm_mult_q7(
1878:DSP/Inc/arm_math.h ****   q7_t * pSrcA,
1879:DSP/Inc/arm_math.h ****   q7_t * pSrcB,
1880:DSP/Inc/arm_math.h ****   q7_t * pDst,
1881:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1882:DSP/Inc/arm_math.h **** 
1883:DSP/Inc/arm_math.h **** 
1884:DSP/Inc/arm_math.h ****   /**
1885:DSP/Inc/arm_math.h ****    * @brief Q15 vector multiplication.
1886:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1887:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1888:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
1889:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1890:DSP/Inc/arm_math.h ****    */
1891:DSP/Inc/arm_math.h ****   void arm_mult_q15(
1892:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
1893:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
1894:DSP/Inc/arm_math.h ****   q15_t * pDst,
1895:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1896:DSP/Inc/arm_math.h **** 
1897:DSP/Inc/arm_math.h **** 
1898:DSP/Inc/arm_math.h ****   /**
1899:DSP/Inc/arm_math.h ****    * @brief Q31 vector multiplication.
1900:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1901:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1902:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
1903:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1904:DSP/Inc/arm_math.h ****    */
1905:DSP/Inc/arm_math.h ****   void arm_mult_q31(
1906:DSP/Inc/arm_math.h ****   q31_t * pSrcA,
1907:DSP/Inc/arm_math.h ****   q31_t * pSrcB,
1908:DSP/Inc/arm_math.h ****   q31_t * pDst,
1909:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1910:DSP/Inc/arm_math.h **** 
1911:DSP/Inc/arm_math.h **** 
1912:DSP/Inc/arm_math.h ****   /**
1913:DSP/Inc/arm_math.h ****    * @brief Floating-point vector multiplication.
1914:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
1915:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
1916:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
1917:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
1918:DSP/Inc/arm_math.h ****    */
1919:DSP/Inc/arm_math.h ****   void arm_mult_f32(
1920:DSP/Inc/arm_math.h ****   float32_t * pSrcA,
1921:DSP/Inc/arm_math.h ****   float32_t * pSrcB,
1922:DSP/Inc/arm_math.h ****   float32_t * pDst,
1923:DSP/Inc/arm_math.h ****   uint32_t blockSize);
1924:DSP/Inc/arm_math.h **** 
1925:DSP/Inc/arm_math.h **** 
1926:DSP/Inc/arm_math.h ****   /**
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 55


1927:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 CFFT/CIFFT function.
1928:DSP/Inc/arm_math.h ****    */
1929:DSP/Inc/arm_math.h ****   typedef struct
1930:DSP/Inc/arm_math.h ****   {
1931:DSP/Inc/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
1932:DSP/Inc/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
1933:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
1934:DSP/Inc/arm_math.h ****     q15_t *pTwiddle;                 /**< points to the Sin twiddle factor table. */
1935:DSP/Inc/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
1936:DSP/Inc/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
1937:DSP/Inc/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
1938:DSP/Inc/arm_math.h ****   } arm_cfft_radix2_instance_q15;
1939:DSP/Inc/arm_math.h **** 
1940:DSP/Inc/arm_math.h **** /* Deprecated */
1941:DSP/Inc/arm_math.h ****   arm_status arm_cfft_radix2_init_q15(
1942:DSP/Inc/arm_math.h ****   arm_cfft_radix2_instance_q15 * S,
1943:DSP/Inc/arm_math.h ****   uint16_t fftLen,
1944:DSP/Inc/arm_math.h ****   uint8_t ifftFlag,
1945:DSP/Inc/arm_math.h ****   uint8_t bitReverseFlag);
1946:DSP/Inc/arm_math.h **** 
1947:DSP/Inc/arm_math.h **** /* Deprecated */
1948:DSP/Inc/arm_math.h ****   void arm_cfft_radix2_q15(
1949:DSP/Inc/arm_math.h ****   const arm_cfft_radix2_instance_q15 * S,
1950:DSP/Inc/arm_math.h ****   q15_t * pSrc);
1951:DSP/Inc/arm_math.h **** 
1952:DSP/Inc/arm_math.h **** 
1953:DSP/Inc/arm_math.h ****   /**
1954:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 CFFT/CIFFT function.
1955:DSP/Inc/arm_math.h ****    */
1956:DSP/Inc/arm_math.h ****   typedef struct
1957:DSP/Inc/arm_math.h ****   {
1958:DSP/Inc/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
1959:DSP/Inc/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
1960:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
1961:DSP/Inc/arm_math.h ****     q15_t *pTwiddle;                 /**< points to the twiddle factor table. */
1962:DSP/Inc/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
1963:DSP/Inc/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
1964:DSP/Inc/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
1965:DSP/Inc/arm_math.h ****   } arm_cfft_radix4_instance_q15;
1966:DSP/Inc/arm_math.h **** 
1967:DSP/Inc/arm_math.h **** /* Deprecated */
1968:DSP/Inc/arm_math.h ****   arm_status arm_cfft_radix4_init_q15(
1969:DSP/Inc/arm_math.h ****   arm_cfft_radix4_instance_q15 * S,
1970:DSP/Inc/arm_math.h ****   uint16_t fftLen,
1971:DSP/Inc/arm_math.h ****   uint8_t ifftFlag,
1972:DSP/Inc/arm_math.h ****   uint8_t bitReverseFlag);
1973:DSP/Inc/arm_math.h **** 
1974:DSP/Inc/arm_math.h **** /* Deprecated */
1975:DSP/Inc/arm_math.h ****   void arm_cfft_radix4_q15(
1976:DSP/Inc/arm_math.h ****   const arm_cfft_radix4_instance_q15 * S,
1977:DSP/Inc/arm_math.h ****   q15_t * pSrc);
1978:DSP/Inc/arm_math.h **** 
1979:DSP/Inc/arm_math.h ****   /**
1980:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Radix-2 Q31 CFFT/CIFFT function.
1981:DSP/Inc/arm_math.h ****    */
1982:DSP/Inc/arm_math.h ****   typedef struct
1983:DSP/Inc/arm_math.h ****   {
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 56


1984:DSP/Inc/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
1985:DSP/Inc/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
1986:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
1987:DSP/Inc/arm_math.h ****     q31_t *pTwiddle;                 /**< points to the Twiddle factor table. */
1988:DSP/Inc/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
1989:DSP/Inc/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
1990:DSP/Inc/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
1991:DSP/Inc/arm_math.h ****   } arm_cfft_radix2_instance_q31;
1992:DSP/Inc/arm_math.h **** 
1993:DSP/Inc/arm_math.h **** /* Deprecated */
1994:DSP/Inc/arm_math.h ****   arm_status arm_cfft_radix2_init_q31(
1995:DSP/Inc/arm_math.h ****   arm_cfft_radix2_instance_q31 * S,
1996:DSP/Inc/arm_math.h ****   uint16_t fftLen,
1997:DSP/Inc/arm_math.h ****   uint8_t ifftFlag,
1998:DSP/Inc/arm_math.h ****   uint8_t bitReverseFlag);
1999:DSP/Inc/arm_math.h **** 
2000:DSP/Inc/arm_math.h **** /* Deprecated */
2001:DSP/Inc/arm_math.h ****   void arm_cfft_radix2_q31(
2002:DSP/Inc/arm_math.h ****   const arm_cfft_radix2_instance_q31 * S,
2003:DSP/Inc/arm_math.h ****   q31_t * pSrc);
2004:DSP/Inc/arm_math.h **** 
2005:DSP/Inc/arm_math.h ****   /**
2006:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 CFFT/CIFFT function.
2007:DSP/Inc/arm_math.h ****    */
2008:DSP/Inc/arm_math.h ****   typedef struct
2009:DSP/Inc/arm_math.h ****   {
2010:DSP/Inc/arm_math.h ****     uint16_t fftLen;                 /**< length of the FFT. */
2011:DSP/Inc/arm_math.h ****     uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (ifftFl
2012:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (bitReve
2013:DSP/Inc/arm_math.h ****     q31_t *pTwiddle;                 /**< points to the twiddle factor table. */
2014:DSP/Inc/arm_math.h ****     uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2015:DSP/Inc/arm_math.h ****     uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports different size
2016:DSP/Inc/arm_math.h ****     uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size FFTs w
2017:DSP/Inc/arm_math.h ****   } arm_cfft_radix4_instance_q31;
2018:DSP/Inc/arm_math.h **** 
2019:DSP/Inc/arm_math.h **** /* Deprecated */
2020:DSP/Inc/arm_math.h ****   void arm_cfft_radix4_q31(
2021:DSP/Inc/arm_math.h ****   const arm_cfft_radix4_instance_q31 * S,
2022:DSP/Inc/arm_math.h ****   q31_t * pSrc);
2023:DSP/Inc/arm_math.h **** 
2024:DSP/Inc/arm_math.h **** /* Deprecated */
2025:DSP/Inc/arm_math.h ****   arm_status arm_cfft_radix4_init_q31(
2026:DSP/Inc/arm_math.h ****   arm_cfft_radix4_instance_q31 * S,
2027:DSP/Inc/arm_math.h ****   uint16_t fftLen,
2028:DSP/Inc/arm_math.h ****   uint8_t ifftFlag,
2029:DSP/Inc/arm_math.h ****   uint8_t bitReverseFlag);
2030:DSP/Inc/arm_math.h **** 
2031:DSP/Inc/arm_math.h ****   /**
2032:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2033:DSP/Inc/arm_math.h ****    */
2034:DSP/Inc/arm_math.h ****   typedef struct
2035:DSP/Inc/arm_math.h ****   {
2036:DSP/Inc/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2037:DSP/Inc/arm_math.h ****     uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse (ifft
2038:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables (bitRe
2039:DSP/Inc/arm_math.h ****     float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
2040:DSP/Inc/arm_math.h ****     uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 57


2041:DSP/Inc/arm_math.h ****     uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports different si
2042:DSP/Inc/arm_math.h ****     uint16_t bitRevFactor;             /**< bit reversal modifier that supports different size FFTs
2043:DSP/Inc/arm_math.h ****     float32_t onebyfftLen;             /**< value of 1/fftLen. */
2044:DSP/Inc/arm_math.h ****   } arm_cfft_radix2_instance_f32;
2045:DSP/Inc/arm_math.h **** 
2046:DSP/Inc/arm_math.h **** /* Deprecated */
2047:DSP/Inc/arm_math.h ****   arm_status arm_cfft_radix2_init_f32(
2048:DSP/Inc/arm_math.h ****   arm_cfft_radix2_instance_f32 * S,
2049:DSP/Inc/arm_math.h ****   uint16_t fftLen,
2050:DSP/Inc/arm_math.h ****   uint8_t ifftFlag,
2051:DSP/Inc/arm_math.h ****   uint8_t bitReverseFlag);
2052:DSP/Inc/arm_math.h **** 
2053:DSP/Inc/arm_math.h **** /* Deprecated */
2054:DSP/Inc/arm_math.h ****   void arm_cfft_radix2_f32(
2055:DSP/Inc/arm_math.h ****   const arm_cfft_radix2_instance_f32 * S,
2056:DSP/Inc/arm_math.h ****   float32_t * pSrc);
2057:DSP/Inc/arm_math.h **** 
2058:DSP/Inc/arm_math.h ****   /**
2059:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2060:DSP/Inc/arm_math.h ****    */
2061:DSP/Inc/arm_math.h ****   typedef struct
2062:DSP/Inc/arm_math.h ****   {
2063:DSP/Inc/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2064:DSP/Inc/arm_math.h ****     uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse (ifft
2065:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables (bitRe
2066:DSP/Inc/arm_math.h ****     float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
2067:DSP/Inc/arm_math.h ****     uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
2068:DSP/Inc/arm_math.h ****     uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports different si
2069:DSP/Inc/arm_math.h ****     uint16_t bitRevFactor;             /**< bit reversal modifier that supports different size FFTs
2070:DSP/Inc/arm_math.h ****     float32_t onebyfftLen;             /**< value of 1/fftLen. */
2071:DSP/Inc/arm_math.h ****   } arm_cfft_radix4_instance_f32;
2072:DSP/Inc/arm_math.h **** 
2073:DSP/Inc/arm_math.h **** /* Deprecated */
2074:DSP/Inc/arm_math.h ****   arm_status arm_cfft_radix4_init_f32(
2075:DSP/Inc/arm_math.h ****   arm_cfft_radix4_instance_f32 * S,
2076:DSP/Inc/arm_math.h ****   uint16_t fftLen,
2077:DSP/Inc/arm_math.h ****   uint8_t ifftFlag,
2078:DSP/Inc/arm_math.h ****   uint8_t bitReverseFlag);
2079:DSP/Inc/arm_math.h **** 
2080:DSP/Inc/arm_math.h **** /* Deprecated */
2081:DSP/Inc/arm_math.h ****   void arm_cfft_radix4_f32(
2082:DSP/Inc/arm_math.h ****   const arm_cfft_radix4_instance_f32 * S,
2083:DSP/Inc/arm_math.h ****   float32_t * pSrc);
2084:DSP/Inc/arm_math.h **** 
2085:DSP/Inc/arm_math.h ****   /**
2086:DSP/Inc/arm_math.h ****    * @brief Instance structure for the fixed-point CFFT/CIFFT function.
2087:DSP/Inc/arm_math.h ****    */
2088:DSP/Inc/arm_math.h ****   typedef struct
2089:DSP/Inc/arm_math.h ****   {
2090:DSP/Inc/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2091:DSP/Inc/arm_math.h ****     const q15_t *pTwiddle;             /**< points to the Twiddle factor table. */
2092:DSP/Inc/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2093:DSP/Inc/arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2094:DSP/Inc/arm_math.h ****   } arm_cfft_instance_q15;
2095:DSP/Inc/arm_math.h **** 
2096:DSP/Inc/arm_math.h **** void arm_cfft_q15(
2097:DSP/Inc/arm_math.h ****     const arm_cfft_instance_q15 * S,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 58


2098:DSP/Inc/arm_math.h ****     q15_t * p1,
2099:DSP/Inc/arm_math.h ****     uint8_t ifftFlag,
2100:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlag);
2101:DSP/Inc/arm_math.h **** 
2102:DSP/Inc/arm_math.h ****   /**
2103:DSP/Inc/arm_math.h ****    * @brief Instance structure for the fixed-point CFFT/CIFFT function.
2104:DSP/Inc/arm_math.h ****    */
2105:DSP/Inc/arm_math.h ****   typedef struct
2106:DSP/Inc/arm_math.h ****   {
2107:DSP/Inc/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2108:DSP/Inc/arm_math.h ****     const q31_t *pTwiddle;             /**< points to the Twiddle factor table. */
2109:DSP/Inc/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2110:DSP/Inc/arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2111:DSP/Inc/arm_math.h ****   } arm_cfft_instance_q31;
2112:DSP/Inc/arm_math.h **** 
2113:DSP/Inc/arm_math.h **** void arm_cfft_q31(
2114:DSP/Inc/arm_math.h ****     const arm_cfft_instance_q31 * S,
2115:DSP/Inc/arm_math.h ****     q31_t * p1,
2116:DSP/Inc/arm_math.h ****     uint8_t ifftFlag,
2117:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlag);
2118:DSP/Inc/arm_math.h **** 
2119:DSP/Inc/arm_math.h ****   /**
2120:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2121:DSP/Inc/arm_math.h ****    */
2122:DSP/Inc/arm_math.h ****   typedef struct
2123:DSP/Inc/arm_math.h ****   {
2124:DSP/Inc/arm_math.h ****     uint16_t fftLen;                   /**< length of the FFT. */
2125:DSP/Inc/arm_math.h ****     const float32_t *pTwiddle;         /**< points to the Twiddle factor table. */
2126:DSP/Inc/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2127:DSP/Inc/arm_math.h ****     uint16_t bitRevLength;             /**< bit reversal table length. */
2128:DSP/Inc/arm_math.h ****   } arm_cfft_instance_f32;
2129:DSP/Inc/arm_math.h **** 
2130:DSP/Inc/arm_math.h ****   void arm_cfft_f32(
2131:DSP/Inc/arm_math.h ****   const arm_cfft_instance_f32 * S,
2132:DSP/Inc/arm_math.h ****   float32_t * p1,
2133:DSP/Inc/arm_math.h ****   uint8_t ifftFlag,
2134:DSP/Inc/arm_math.h ****   uint8_t bitReverseFlag);
2135:DSP/Inc/arm_math.h **** 
2136:DSP/Inc/arm_math.h ****   /**
2137:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 RFFT/RIFFT function.
2138:DSP/Inc/arm_math.h ****    */
2139:DSP/Inc/arm_math.h ****   typedef struct
2140:DSP/Inc/arm_math.h ****   {
2141:DSP/Inc/arm_math.h ****     uint32_t fftLenReal;                      /**< length of the real FFT. */
2142:DSP/Inc/arm_math.h ****     uint8_t ifftFlagR;                        /**< flag that selects forward (ifftFlagR=0) or inver
2143:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlagR;                  /**< flag that enables (bitReverseFlagR=1) or disable
2144:DSP/Inc/arm_math.h ****     uint32_t twidCoefRModifier;               /**< twiddle coefficient modifier that supports diffe
2145:DSP/Inc/arm_math.h ****     q15_t *pTwiddleAReal;                     /**< points to the real twiddle factor table. */
2146:DSP/Inc/arm_math.h ****     q15_t *pTwiddleBReal;                     /**< points to the imag twiddle factor table. */
2147:DSP/Inc/arm_math.h ****     const arm_cfft_instance_q15 *pCfft;       /**< points to the complex FFT instance. */
2148:DSP/Inc/arm_math.h ****   } arm_rfft_instance_q15;
2149:DSP/Inc/arm_math.h **** 
2150:DSP/Inc/arm_math.h ****   arm_status arm_rfft_init_q15(
2151:DSP/Inc/arm_math.h ****   arm_rfft_instance_q15 * S,
2152:DSP/Inc/arm_math.h ****   uint32_t fftLenReal,
2153:DSP/Inc/arm_math.h ****   uint32_t ifftFlagR,
2154:DSP/Inc/arm_math.h ****   uint32_t bitReverseFlag);
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 59


2155:DSP/Inc/arm_math.h **** 
2156:DSP/Inc/arm_math.h ****   void arm_rfft_q15(
2157:DSP/Inc/arm_math.h ****   const arm_rfft_instance_q15 * S,
2158:DSP/Inc/arm_math.h ****   q15_t * pSrc,
2159:DSP/Inc/arm_math.h ****   q15_t * pDst);
2160:DSP/Inc/arm_math.h **** 
2161:DSP/Inc/arm_math.h ****   /**
2162:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 RFFT/RIFFT function.
2163:DSP/Inc/arm_math.h ****    */
2164:DSP/Inc/arm_math.h ****   typedef struct
2165:DSP/Inc/arm_math.h ****   {
2166:DSP/Inc/arm_math.h ****     uint32_t fftLenReal;                        /**< length of the real FFT. */
2167:DSP/Inc/arm_math.h ****     uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) or inv
2168:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or disab
2169:DSP/Inc/arm_math.h ****     uint32_t twidCoefRModifier;                 /**< twiddle coefficient modifier that supports dif
2170:DSP/Inc/arm_math.h ****     q31_t *pTwiddleAReal;                       /**< points to the real twiddle factor table. */
2171:DSP/Inc/arm_math.h ****     q31_t *pTwiddleBReal;                       /**< points to the imag twiddle factor table. */
2172:DSP/Inc/arm_math.h ****     const arm_cfft_instance_q31 *pCfft;         /**< points to the complex FFT instance. */
2173:DSP/Inc/arm_math.h ****   } arm_rfft_instance_q31;
2174:DSP/Inc/arm_math.h **** 
2175:DSP/Inc/arm_math.h ****   arm_status arm_rfft_init_q31(
2176:DSP/Inc/arm_math.h ****   arm_rfft_instance_q31 * S,
2177:DSP/Inc/arm_math.h ****   uint32_t fftLenReal,
2178:DSP/Inc/arm_math.h ****   uint32_t ifftFlagR,
2179:DSP/Inc/arm_math.h ****   uint32_t bitReverseFlag);
2180:DSP/Inc/arm_math.h **** 
2181:DSP/Inc/arm_math.h ****   void arm_rfft_q31(
2182:DSP/Inc/arm_math.h ****   const arm_rfft_instance_q31 * S,
2183:DSP/Inc/arm_math.h ****   q31_t * pSrc,
2184:DSP/Inc/arm_math.h ****   q31_t * pDst);
2185:DSP/Inc/arm_math.h **** 
2186:DSP/Inc/arm_math.h ****   /**
2187:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point RFFT/RIFFT function.
2188:DSP/Inc/arm_math.h ****    */
2189:DSP/Inc/arm_math.h ****   typedef struct
2190:DSP/Inc/arm_math.h ****   {
2191:DSP/Inc/arm_math.h ****     uint32_t fftLenReal;                        /**< length of the real FFT. */
2192:DSP/Inc/arm_math.h ****     uint16_t fftLenBy2;                         /**< length of the complex FFT. */
2193:DSP/Inc/arm_math.h ****     uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) or inv
2194:DSP/Inc/arm_math.h ****     uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or disab
2195:DSP/Inc/arm_math.h ****     uint32_t twidCoefRModifier;                     /**< twiddle coefficient modifier that supports
2196:DSP/Inc/arm_math.h ****     float32_t *pTwiddleAReal;                   /**< points to the real twiddle factor table. */
2197:DSP/Inc/arm_math.h ****     float32_t *pTwiddleBReal;                   /**< points to the imag twiddle factor table. */
2198:DSP/Inc/arm_math.h ****     arm_cfft_radix4_instance_f32 *pCfft;        /**< points to the complex FFT instance. */
2199:DSP/Inc/arm_math.h ****   } arm_rfft_instance_f32;
2200:DSP/Inc/arm_math.h **** 
2201:DSP/Inc/arm_math.h ****   arm_status arm_rfft_init_f32(
2202:DSP/Inc/arm_math.h ****   arm_rfft_instance_f32 * S,
2203:DSP/Inc/arm_math.h ****   arm_cfft_radix4_instance_f32 * S_CFFT,
2204:DSP/Inc/arm_math.h ****   uint32_t fftLenReal,
2205:DSP/Inc/arm_math.h ****   uint32_t ifftFlagR,
2206:DSP/Inc/arm_math.h ****   uint32_t bitReverseFlag);
2207:DSP/Inc/arm_math.h **** 
2208:DSP/Inc/arm_math.h ****   void arm_rfft_f32(
2209:DSP/Inc/arm_math.h ****   const arm_rfft_instance_f32 * S,
2210:DSP/Inc/arm_math.h ****   float32_t * pSrc,
2211:DSP/Inc/arm_math.h ****   float32_t * pDst);
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 60


2212:DSP/Inc/arm_math.h **** 
2213:DSP/Inc/arm_math.h ****   /**
2214:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point RFFT/RIFFT function.
2215:DSP/Inc/arm_math.h ****    */
2216:DSP/Inc/arm_math.h **** typedef struct
2217:DSP/Inc/arm_math.h ****   {
2218:DSP/Inc/arm_math.h ****     arm_cfft_instance_f32 Sint;      /**< Internal CFFT structure. */
2219:DSP/Inc/arm_math.h ****     uint16_t fftLenRFFT;             /**< length of the real sequence */
2220:DSP/Inc/arm_math.h ****     float32_t * pTwiddleRFFT;        /**< Twiddle factors real stage  */
2221:DSP/Inc/arm_math.h ****   } arm_rfft_fast_instance_f32 ;
2222:DSP/Inc/arm_math.h **** 
2223:DSP/Inc/arm_math.h **** arm_status arm_rfft_fast_init_f32 (
2224:DSP/Inc/arm_math.h ****    arm_rfft_fast_instance_f32 * S,
2225:DSP/Inc/arm_math.h ****    uint16_t fftLen);
2226:DSP/Inc/arm_math.h **** 
2227:DSP/Inc/arm_math.h **** void arm_rfft_fast_f32(
2228:DSP/Inc/arm_math.h ****   arm_rfft_fast_instance_f32 * S,
2229:DSP/Inc/arm_math.h ****   float32_t * p, float32_t * pOut,
2230:DSP/Inc/arm_math.h ****   uint8_t ifftFlag);
2231:DSP/Inc/arm_math.h **** 
2232:DSP/Inc/arm_math.h ****   /**
2233:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point DCT4/IDCT4 function.
2234:DSP/Inc/arm_math.h ****    */
2235:DSP/Inc/arm_math.h ****   typedef struct
2236:DSP/Inc/arm_math.h ****   {
2237:DSP/Inc/arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2238:DSP/Inc/arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2239:DSP/Inc/arm_math.h ****     float32_t normalize;                 /**< normalizing factor. */
2240:DSP/Inc/arm_math.h ****     float32_t *pTwiddle;                 /**< points to the twiddle factor table. */
2241:DSP/Inc/arm_math.h ****     float32_t *pCosFactor;               /**< points to the cosFactor table. */
2242:DSP/Inc/arm_math.h ****     arm_rfft_instance_f32 *pRfft;        /**< points to the real FFT instance. */
2243:DSP/Inc/arm_math.h ****     arm_cfft_radix4_instance_f32 *pCfft; /**< points to the complex FFT instance. */
2244:DSP/Inc/arm_math.h ****   } arm_dct4_instance_f32;
2245:DSP/Inc/arm_math.h **** 
2246:DSP/Inc/arm_math.h **** 
2247:DSP/Inc/arm_math.h ****   /**
2248:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the floating-point DCT4/IDCT4.
2249:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of floating-point DCT4/IDCT4 structure.
2250:DSP/Inc/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of floating-point RFFT/RIFFT structure.
2251:DSP/Inc/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of floating-point CFFT/CIFFT structure.
2252:DSP/Inc/arm_math.h ****    * @param[in]     N          length of the DCT4.
2253:DSP/Inc/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2254:DSP/Inc/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2255:DSP/Inc/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2256:DSP/Inc/arm_math.h ****    */
2257:DSP/Inc/arm_math.h ****   arm_status arm_dct4_init_f32(
2258:DSP/Inc/arm_math.h ****   arm_dct4_instance_f32 * S,
2259:DSP/Inc/arm_math.h ****   arm_rfft_instance_f32 * S_RFFT,
2260:DSP/Inc/arm_math.h ****   arm_cfft_radix4_instance_f32 * S_CFFT,
2261:DSP/Inc/arm_math.h ****   uint16_t N,
2262:DSP/Inc/arm_math.h ****   uint16_t Nby2,
2263:DSP/Inc/arm_math.h ****   float32_t normalize);
2264:DSP/Inc/arm_math.h **** 
2265:DSP/Inc/arm_math.h **** 
2266:DSP/Inc/arm_math.h ****   /**
2267:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point DCT4/IDCT4.
2268:DSP/Inc/arm_math.h ****    * @param[in]     S              points to an instance of the floating-point DCT4/IDCT4 structure
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 61


2269:DSP/Inc/arm_math.h ****    * @param[in]     pState         points to state buffer.
2270:DSP/Inc/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2271:DSP/Inc/arm_math.h ****    */
2272:DSP/Inc/arm_math.h ****   void arm_dct4_f32(
2273:DSP/Inc/arm_math.h ****   const arm_dct4_instance_f32 * S,
2274:DSP/Inc/arm_math.h ****   float32_t * pState,
2275:DSP/Inc/arm_math.h ****   float32_t * pInlineBuffer);
2276:DSP/Inc/arm_math.h **** 
2277:DSP/Inc/arm_math.h **** 
2278:DSP/Inc/arm_math.h ****   /**
2279:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 DCT4/IDCT4 function.
2280:DSP/Inc/arm_math.h ****    */
2281:DSP/Inc/arm_math.h ****   typedef struct
2282:DSP/Inc/arm_math.h ****   {
2283:DSP/Inc/arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2284:DSP/Inc/arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2285:DSP/Inc/arm_math.h ****     q31_t normalize;                     /**< normalizing factor. */
2286:DSP/Inc/arm_math.h ****     q31_t *pTwiddle;                     /**< points to the twiddle factor table. */
2287:DSP/Inc/arm_math.h ****     q31_t *pCosFactor;                   /**< points to the cosFactor table. */
2288:DSP/Inc/arm_math.h ****     arm_rfft_instance_q31 *pRfft;        /**< points to the real FFT instance. */
2289:DSP/Inc/arm_math.h ****     arm_cfft_radix4_instance_q31 *pCfft; /**< points to the complex FFT instance. */
2290:DSP/Inc/arm_math.h ****   } arm_dct4_instance_q31;
2291:DSP/Inc/arm_math.h **** 
2292:DSP/Inc/arm_math.h **** 
2293:DSP/Inc/arm_math.h ****   /**
2294:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q31 DCT4/IDCT4.
2295:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of Q31 DCT4/IDCT4 structure.
2296:DSP/Inc/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of Q31 RFFT/RIFFT structure
2297:DSP/Inc/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of Q31 CFFT/CIFFT structure
2298:DSP/Inc/arm_math.h ****    * @param[in]     N          length of the DCT4.
2299:DSP/Inc/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2300:DSP/Inc/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2301:DSP/Inc/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2302:DSP/Inc/arm_math.h ****    */
2303:DSP/Inc/arm_math.h ****   arm_status arm_dct4_init_q31(
2304:DSP/Inc/arm_math.h ****   arm_dct4_instance_q31 * S,
2305:DSP/Inc/arm_math.h ****   arm_rfft_instance_q31 * S_RFFT,
2306:DSP/Inc/arm_math.h ****   arm_cfft_radix4_instance_q31 * S_CFFT,
2307:DSP/Inc/arm_math.h ****   uint16_t N,
2308:DSP/Inc/arm_math.h ****   uint16_t Nby2,
2309:DSP/Inc/arm_math.h ****   q31_t normalize);
2310:DSP/Inc/arm_math.h **** 
2311:DSP/Inc/arm_math.h **** 
2312:DSP/Inc/arm_math.h ****   /**
2313:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q31 DCT4/IDCT4.
2314:DSP/Inc/arm_math.h ****    * @param[in]     S              points to an instance of the Q31 DCT4 structure.
2315:DSP/Inc/arm_math.h ****    * @param[in]     pState         points to state buffer.
2316:DSP/Inc/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2317:DSP/Inc/arm_math.h ****    */
2318:DSP/Inc/arm_math.h ****   void arm_dct4_q31(
2319:DSP/Inc/arm_math.h ****   const arm_dct4_instance_q31 * S,
2320:DSP/Inc/arm_math.h ****   q31_t * pState,
2321:DSP/Inc/arm_math.h ****   q31_t * pInlineBuffer);
2322:DSP/Inc/arm_math.h **** 
2323:DSP/Inc/arm_math.h **** 
2324:DSP/Inc/arm_math.h ****   /**
2325:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 DCT4/IDCT4 function.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 62


2326:DSP/Inc/arm_math.h ****    */
2327:DSP/Inc/arm_math.h ****   typedef struct
2328:DSP/Inc/arm_math.h ****   {
2329:DSP/Inc/arm_math.h ****     uint16_t N;                          /**< length of the DCT4. */
2330:DSP/Inc/arm_math.h ****     uint16_t Nby2;                       /**< half of the length of the DCT4. */
2331:DSP/Inc/arm_math.h ****     q15_t normalize;                     /**< normalizing factor. */
2332:DSP/Inc/arm_math.h ****     q15_t *pTwiddle;                     /**< points to the twiddle factor table. */
2333:DSP/Inc/arm_math.h ****     q15_t *pCosFactor;                   /**< points to the cosFactor table. */
2334:DSP/Inc/arm_math.h ****     arm_rfft_instance_q15 *pRfft;        /**< points to the real FFT instance. */
2335:DSP/Inc/arm_math.h ****     arm_cfft_radix4_instance_q15 *pCfft; /**< points to the complex FFT instance. */
2336:DSP/Inc/arm_math.h ****   } arm_dct4_instance_q15;
2337:DSP/Inc/arm_math.h **** 
2338:DSP/Inc/arm_math.h **** 
2339:DSP/Inc/arm_math.h ****   /**
2340:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q15 DCT4/IDCT4.
2341:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of Q15 DCT4/IDCT4 structure.
2342:DSP/Inc/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of Q15 RFFT/RIFFT structure.
2343:DSP/Inc/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of Q15 CFFT/CIFFT structure.
2344:DSP/Inc/arm_math.h ****    * @param[in]     N          length of the DCT4.
2345:DSP/Inc/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2346:DSP/Inc/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2347:DSP/Inc/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2348:DSP/Inc/arm_math.h ****    */
2349:DSP/Inc/arm_math.h ****   arm_status arm_dct4_init_q15(
2350:DSP/Inc/arm_math.h ****   arm_dct4_instance_q15 * S,
2351:DSP/Inc/arm_math.h ****   arm_rfft_instance_q15 * S_RFFT,
2352:DSP/Inc/arm_math.h ****   arm_cfft_radix4_instance_q15 * S_CFFT,
2353:DSP/Inc/arm_math.h ****   uint16_t N,
2354:DSP/Inc/arm_math.h ****   uint16_t Nby2,
2355:DSP/Inc/arm_math.h ****   q15_t normalize);
2356:DSP/Inc/arm_math.h **** 
2357:DSP/Inc/arm_math.h **** 
2358:DSP/Inc/arm_math.h ****   /**
2359:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q15 DCT4/IDCT4.
2360:DSP/Inc/arm_math.h ****    * @param[in]     S              points to an instance of the Q15 DCT4 structure.
2361:DSP/Inc/arm_math.h ****    * @param[in]     pState         points to state buffer.
2362:DSP/Inc/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2363:DSP/Inc/arm_math.h ****    */
2364:DSP/Inc/arm_math.h ****   void arm_dct4_q15(
2365:DSP/Inc/arm_math.h ****   const arm_dct4_instance_q15 * S,
2366:DSP/Inc/arm_math.h ****   q15_t * pState,
2367:DSP/Inc/arm_math.h ****   q15_t * pInlineBuffer);
2368:DSP/Inc/arm_math.h **** 
2369:DSP/Inc/arm_math.h **** 
2370:DSP/Inc/arm_math.h ****   /**
2371:DSP/Inc/arm_math.h ****    * @brief Floating-point vector addition.
2372:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2373:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2374:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2375:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2376:DSP/Inc/arm_math.h ****    */
2377:DSP/Inc/arm_math.h ****   void arm_add_f32(
2378:DSP/Inc/arm_math.h ****   float32_t * pSrcA,
2379:DSP/Inc/arm_math.h ****   float32_t * pSrcB,
2380:DSP/Inc/arm_math.h ****   float32_t * pDst,
2381:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2382:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 63


2383:DSP/Inc/arm_math.h **** 
2384:DSP/Inc/arm_math.h ****   /**
2385:DSP/Inc/arm_math.h ****    * @brief Q7 vector addition.
2386:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2387:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2388:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2389:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2390:DSP/Inc/arm_math.h ****    */
2391:DSP/Inc/arm_math.h ****   void arm_add_q7(
2392:DSP/Inc/arm_math.h ****   q7_t * pSrcA,
2393:DSP/Inc/arm_math.h ****   q7_t * pSrcB,
2394:DSP/Inc/arm_math.h ****   q7_t * pDst,
2395:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2396:DSP/Inc/arm_math.h **** 
2397:DSP/Inc/arm_math.h **** 
2398:DSP/Inc/arm_math.h ****   /**
2399:DSP/Inc/arm_math.h ****    * @brief Q15 vector addition.
2400:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2401:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2402:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2403:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2404:DSP/Inc/arm_math.h ****    */
2405:DSP/Inc/arm_math.h ****   void arm_add_q15(
2406:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
2407:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
2408:DSP/Inc/arm_math.h ****   q15_t * pDst,
2409:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2410:DSP/Inc/arm_math.h **** 
2411:DSP/Inc/arm_math.h **** 
2412:DSP/Inc/arm_math.h ****   /**
2413:DSP/Inc/arm_math.h ****    * @brief Q31 vector addition.
2414:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2415:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2416:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2417:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2418:DSP/Inc/arm_math.h ****    */
2419:DSP/Inc/arm_math.h ****   void arm_add_q31(
2420:DSP/Inc/arm_math.h ****   q31_t * pSrcA,
2421:DSP/Inc/arm_math.h ****   q31_t * pSrcB,
2422:DSP/Inc/arm_math.h ****   q31_t * pDst,
2423:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2424:DSP/Inc/arm_math.h **** 
2425:DSP/Inc/arm_math.h **** 
2426:DSP/Inc/arm_math.h ****   /**
2427:DSP/Inc/arm_math.h ****    * @brief Floating-point vector subtraction.
2428:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2429:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2430:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2431:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2432:DSP/Inc/arm_math.h ****    */
2433:DSP/Inc/arm_math.h ****   void arm_sub_f32(
2434:DSP/Inc/arm_math.h ****   float32_t * pSrcA,
2435:DSP/Inc/arm_math.h ****   float32_t * pSrcB,
2436:DSP/Inc/arm_math.h ****   float32_t * pDst,
2437:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2438:DSP/Inc/arm_math.h **** 
2439:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 64


2440:DSP/Inc/arm_math.h ****   /**
2441:DSP/Inc/arm_math.h ****    * @brief Q7 vector subtraction.
2442:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2443:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2444:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2445:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2446:DSP/Inc/arm_math.h ****    */
2447:DSP/Inc/arm_math.h ****   void arm_sub_q7(
2448:DSP/Inc/arm_math.h ****   q7_t * pSrcA,
2449:DSP/Inc/arm_math.h ****   q7_t * pSrcB,
2450:DSP/Inc/arm_math.h ****   q7_t * pDst,
2451:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2452:DSP/Inc/arm_math.h **** 
2453:DSP/Inc/arm_math.h **** 
2454:DSP/Inc/arm_math.h ****   /**
2455:DSP/Inc/arm_math.h ****    * @brief Q15 vector subtraction.
2456:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2457:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2458:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2459:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2460:DSP/Inc/arm_math.h ****    */
2461:DSP/Inc/arm_math.h ****   void arm_sub_q15(
2462:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
2463:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
2464:DSP/Inc/arm_math.h ****   q15_t * pDst,
2465:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2466:DSP/Inc/arm_math.h **** 
2467:DSP/Inc/arm_math.h **** 
2468:DSP/Inc/arm_math.h ****   /**
2469:DSP/Inc/arm_math.h ****    * @brief Q31 vector subtraction.
2470:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2471:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2472:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2473:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2474:DSP/Inc/arm_math.h ****    */
2475:DSP/Inc/arm_math.h ****   void arm_sub_q31(
2476:DSP/Inc/arm_math.h ****   q31_t * pSrcA,
2477:DSP/Inc/arm_math.h ****   q31_t * pSrcB,
2478:DSP/Inc/arm_math.h ****   q31_t * pDst,
2479:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2480:DSP/Inc/arm_math.h **** 
2481:DSP/Inc/arm_math.h **** 
2482:DSP/Inc/arm_math.h ****   /**
2483:DSP/Inc/arm_math.h ****    * @brief Multiplies a floating-point vector by a scalar.
2484:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2485:DSP/Inc/arm_math.h ****    * @param[in]  scale      scale factor to be applied
2486:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2487:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2488:DSP/Inc/arm_math.h ****    */
2489:DSP/Inc/arm_math.h ****   void arm_scale_f32(
2490:DSP/Inc/arm_math.h ****   float32_t * pSrc,
2491:DSP/Inc/arm_math.h ****   float32_t scale,
2492:DSP/Inc/arm_math.h ****   float32_t * pDst,
2493:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2494:DSP/Inc/arm_math.h **** 
2495:DSP/Inc/arm_math.h **** 
2496:DSP/Inc/arm_math.h ****   /**
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 65


2497:DSP/Inc/arm_math.h ****    * @brief Multiplies a Q7 vector by a scalar.
2498:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2499:DSP/Inc/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2500:DSP/Inc/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2501:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the output vector
2502:DSP/Inc/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2503:DSP/Inc/arm_math.h ****    */
2504:DSP/Inc/arm_math.h ****   void arm_scale_q7(
2505:DSP/Inc/arm_math.h ****   q7_t * pSrc,
2506:DSP/Inc/arm_math.h ****   q7_t scaleFract,
2507:DSP/Inc/arm_math.h ****   int8_t shift,
2508:DSP/Inc/arm_math.h ****   q7_t * pDst,
2509:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2510:DSP/Inc/arm_math.h **** 
2511:DSP/Inc/arm_math.h **** 
2512:DSP/Inc/arm_math.h ****   /**
2513:DSP/Inc/arm_math.h ****    * @brief Multiplies a Q15 vector by a scalar.
2514:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2515:DSP/Inc/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2516:DSP/Inc/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2517:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the output vector
2518:DSP/Inc/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2519:DSP/Inc/arm_math.h ****    */
2520:DSP/Inc/arm_math.h ****   void arm_scale_q15(
2521:DSP/Inc/arm_math.h ****   q15_t * pSrc,
2522:DSP/Inc/arm_math.h ****   q15_t scaleFract,
2523:DSP/Inc/arm_math.h ****   int8_t shift,
2524:DSP/Inc/arm_math.h ****   q15_t * pDst,
2525:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2526:DSP/Inc/arm_math.h **** 
2527:DSP/Inc/arm_math.h **** 
2528:DSP/Inc/arm_math.h ****   /**
2529:DSP/Inc/arm_math.h ****    * @brief Multiplies a Q31 vector by a scalar.
2530:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2531:DSP/Inc/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2532:DSP/Inc/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2533:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the output vector
2534:DSP/Inc/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2535:DSP/Inc/arm_math.h ****    */
2536:DSP/Inc/arm_math.h ****   void arm_scale_q31(
2537:DSP/Inc/arm_math.h ****   q31_t * pSrc,
2538:DSP/Inc/arm_math.h ****   q31_t scaleFract,
2539:DSP/Inc/arm_math.h ****   int8_t shift,
2540:DSP/Inc/arm_math.h ****   q31_t * pDst,
2541:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2542:DSP/Inc/arm_math.h **** 
2543:DSP/Inc/arm_math.h **** 
2544:DSP/Inc/arm_math.h ****   /**
2545:DSP/Inc/arm_math.h ****    * @brief Q7 vector absolute value.
2546:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2547:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output buffer
2548:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2549:DSP/Inc/arm_math.h ****    */
2550:DSP/Inc/arm_math.h ****   void arm_abs_q7(
2551:DSP/Inc/arm_math.h ****   q7_t * pSrc,
2552:DSP/Inc/arm_math.h ****   q7_t * pDst,
2553:DSP/Inc/arm_math.h ****   uint32_t blockSize);
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 66


2554:DSP/Inc/arm_math.h **** 
2555:DSP/Inc/arm_math.h **** 
2556:DSP/Inc/arm_math.h ****   /**
2557:DSP/Inc/arm_math.h ****    * @brief Floating-point vector absolute value.
2558:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2559:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output buffer
2560:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2561:DSP/Inc/arm_math.h ****    */
2562:DSP/Inc/arm_math.h ****   void arm_abs_f32(
2563:DSP/Inc/arm_math.h ****   float32_t * pSrc,
2564:DSP/Inc/arm_math.h ****   float32_t * pDst,
2565:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2566:DSP/Inc/arm_math.h **** 
2567:DSP/Inc/arm_math.h **** 
2568:DSP/Inc/arm_math.h ****   /**
2569:DSP/Inc/arm_math.h ****    * @brief Q15 vector absolute value.
2570:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2571:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output buffer
2572:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2573:DSP/Inc/arm_math.h ****    */
2574:DSP/Inc/arm_math.h ****   void arm_abs_q15(
2575:DSP/Inc/arm_math.h ****   q15_t * pSrc,
2576:DSP/Inc/arm_math.h ****   q15_t * pDst,
2577:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2578:DSP/Inc/arm_math.h **** 
2579:DSP/Inc/arm_math.h **** 
2580:DSP/Inc/arm_math.h ****   /**
2581:DSP/Inc/arm_math.h ****    * @brief Q31 vector absolute value.
2582:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2583:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output buffer
2584:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2585:DSP/Inc/arm_math.h ****    */
2586:DSP/Inc/arm_math.h ****   void arm_abs_q31(
2587:DSP/Inc/arm_math.h ****   q31_t * pSrc,
2588:DSP/Inc/arm_math.h ****   q31_t * pDst,
2589:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2590:DSP/Inc/arm_math.h **** 
2591:DSP/Inc/arm_math.h **** 
2592:DSP/Inc/arm_math.h ****   /**
2593:DSP/Inc/arm_math.h ****    * @brief Dot product of floating-point vectors.
2594:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2595:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2596:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2597:DSP/Inc/arm_math.h ****    * @param[out] result     output result returned here
2598:DSP/Inc/arm_math.h ****    */
2599:DSP/Inc/arm_math.h ****   void arm_dot_prod_f32(
2600:DSP/Inc/arm_math.h ****   float32_t * pSrcA,
2601:DSP/Inc/arm_math.h ****   float32_t * pSrcB,
2602:DSP/Inc/arm_math.h ****   uint32_t blockSize,
2603:DSP/Inc/arm_math.h ****   float32_t * result);
2604:DSP/Inc/arm_math.h **** 
2605:DSP/Inc/arm_math.h **** 
2606:DSP/Inc/arm_math.h ****   /**
2607:DSP/Inc/arm_math.h ****    * @brief Dot product of Q7 vectors.
2608:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2609:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2610:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 67


2611:DSP/Inc/arm_math.h ****    * @param[out] result     output result returned here
2612:DSP/Inc/arm_math.h ****    */
2613:DSP/Inc/arm_math.h ****   void arm_dot_prod_q7(
2614:DSP/Inc/arm_math.h ****   q7_t * pSrcA,
2615:DSP/Inc/arm_math.h ****   q7_t * pSrcB,
2616:DSP/Inc/arm_math.h ****   uint32_t blockSize,
2617:DSP/Inc/arm_math.h ****   q31_t * result);
2618:DSP/Inc/arm_math.h **** 
2619:DSP/Inc/arm_math.h **** 
2620:DSP/Inc/arm_math.h ****   /**
2621:DSP/Inc/arm_math.h ****    * @brief Dot product of Q15 vectors.
2622:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2623:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2624:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2625:DSP/Inc/arm_math.h ****    * @param[out] result     output result returned here
2626:DSP/Inc/arm_math.h ****    */
2627:DSP/Inc/arm_math.h ****   void arm_dot_prod_q15(
2628:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
2629:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
2630:DSP/Inc/arm_math.h ****   uint32_t blockSize,
2631:DSP/Inc/arm_math.h ****   q63_t * result);
2632:DSP/Inc/arm_math.h **** 
2633:DSP/Inc/arm_math.h **** 
2634:DSP/Inc/arm_math.h ****   /**
2635:DSP/Inc/arm_math.h ****    * @brief Dot product of Q31 vectors.
2636:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2637:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2638:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2639:DSP/Inc/arm_math.h ****    * @param[out] result     output result returned here
2640:DSP/Inc/arm_math.h ****    */
2641:DSP/Inc/arm_math.h ****   void arm_dot_prod_q31(
2642:DSP/Inc/arm_math.h ****   q31_t * pSrcA,
2643:DSP/Inc/arm_math.h ****   q31_t * pSrcB,
2644:DSP/Inc/arm_math.h ****   uint32_t blockSize,
2645:DSP/Inc/arm_math.h ****   q63_t * result);
2646:DSP/Inc/arm_math.h **** 
2647:DSP/Inc/arm_math.h **** 
2648:DSP/Inc/arm_math.h ****   /**
2649:DSP/Inc/arm_math.h ****    * @brief  Shifts the elements of a Q7 vector a specified number of bits.
2650:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2651:DSP/Inc/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2652:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2653:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2654:DSP/Inc/arm_math.h ****    */
2655:DSP/Inc/arm_math.h ****   void arm_shift_q7(
2656:DSP/Inc/arm_math.h ****   q7_t * pSrc,
2657:DSP/Inc/arm_math.h ****   int8_t shiftBits,
2658:DSP/Inc/arm_math.h ****   q7_t * pDst,
2659:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2660:DSP/Inc/arm_math.h **** 
2661:DSP/Inc/arm_math.h **** 
2662:DSP/Inc/arm_math.h ****   /**
2663:DSP/Inc/arm_math.h ****    * @brief  Shifts the elements of a Q15 vector a specified number of bits.
2664:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2665:DSP/Inc/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2666:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2667:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 68


2668:DSP/Inc/arm_math.h ****    */
2669:DSP/Inc/arm_math.h ****   void arm_shift_q15(
2670:DSP/Inc/arm_math.h ****   q15_t * pSrc,
2671:DSP/Inc/arm_math.h ****   int8_t shiftBits,
2672:DSP/Inc/arm_math.h ****   q15_t * pDst,
2673:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2674:DSP/Inc/arm_math.h **** 
2675:DSP/Inc/arm_math.h **** 
2676:DSP/Inc/arm_math.h ****   /**
2677:DSP/Inc/arm_math.h ****    * @brief  Shifts the elements of a Q31 vector a specified number of bits.
2678:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2679:DSP/Inc/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2680:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2681:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2682:DSP/Inc/arm_math.h ****    */
2683:DSP/Inc/arm_math.h ****   void arm_shift_q31(
2684:DSP/Inc/arm_math.h ****   q31_t * pSrc,
2685:DSP/Inc/arm_math.h ****   int8_t shiftBits,
2686:DSP/Inc/arm_math.h ****   q31_t * pDst,
2687:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2688:DSP/Inc/arm_math.h **** 
2689:DSP/Inc/arm_math.h **** 
2690:DSP/Inc/arm_math.h ****   /**
2691:DSP/Inc/arm_math.h ****    * @brief  Adds a constant offset to a floating-point vector.
2692:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2693:DSP/Inc/arm_math.h ****    * @param[in]  offset     is the offset to be added
2694:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2695:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2696:DSP/Inc/arm_math.h ****    */
2697:DSP/Inc/arm_math.h ****   void arm_offset_f32(
2698:DSP/Inc/arm_math.h ****   float32_t * pSrc,
2699:DSP/Inc/arm_math.h ****   float32_t offset,
2700:DSP/Inc/arm_math.h ****   float32_t * pDst,
2701:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2702:DSP/Inc/arm_math.h **** 
2703:DSP/Inc/arm_math.h **** 
2704:DSP/Inc/arm_math.h ****   /**
2705:DSP/Inc/arm_math.h ****    * @brief  Adds a constant offset to a Q7 vector.
2706:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2707:DSP/Inc/arm_math.h ****    * @param[in]  offset     is the offset to be added
2708:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2709:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2710:DSP/Inc/arm_math.h ****    */
2711:DSP/Inc/arm_math.h ****   void arm_offset_q7(
2712:DSP/Inc/arm_math.h ****   q7_t * pSrc,
2713:DSP/Inc/arm_math.h ****   q7_t offset,
2714:DSP/Inc/arm_math.h ****   q7_t * pDst,
2715:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2716:DSP/Inc/arm_math.h **** 
2717:DSP/Inc/arm_math.h **** 
2718:DSP/Inc/arm_math.h ****   /**
2719:DSP/Inc/arm_math.h ****    * @brief  Adds a constant offset to a Q15 vector.
2720:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2721:DSP/Inc/arm_math.h ****    * @param[in]  offset     is the offset to be added
2722:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2723:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2724:DSP/Inc/arm_math.h ****    */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 69


2725:DSP/Inc/arm_math.h ****   void arm_offset_q15(
2726:DSP/Inc/arm_math.h ****   q15_t * pSrc,
2727:DSP/Inc/arm_math.h ****   q15_t offset,
2728:DSP/Inc/arm_math.h ****   q15_t * pDst,
2729:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2730:DSP/Inc/arm_math.h **** 
2731:DSP/Inc/arm_math.h **** 
2732:DSP/Inc/arm_math.h ****   /**
2733:DSP/Inc/arm_math.h ****    * @brief  Adds a constant offset to a Q31 vector.
2734:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2735:DSP/Inc/arm_math.h ****    * @param[in]  offset     is the offset to be added
2736:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2737:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2738:DSP/Inc/arm_math.h ****    */
2739:DSP/Inc/arm_math.h ****   void arm_offset_q31(
2740:DSP/Inc/arm_math.h ****   q31_t * pSrc,
2741:DSP/Inc/arm_math.h ****   q31_t offset,
2742:DSP/Inc/arm_math.h ****   q31_t * pDst,
2743:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2744:DSP/Inc/arm_math.h **** 
2745:DSP/Inc/arm_math.h **** 
2746:DSP/Inc/arm_math.h ****   /**
2747:DSP/Inc/arm_math.h ****    * @brief  Negates the elements of a floating-point vector.
2748:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2749:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2750:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2751:DSP/Inc/arm_math.h ****    */
2752:DSP/Inc/arm_math.h ****   void arm_negate_f32(
2753:DSP/Inc/arm_math.h ****   float32_t * pSrc,
2754:DSP/Inc/arm_math.h ****   float32_t * pDst,
2755:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2756:DSP/Inc/arm_math.h **** 
2757:DSP/Inc/arm_math.h **** 
2758:DSP/Inc/arm_math.h ****   /**
2759:DSP/Inc/arm_math.h ****    * @brief  Negates the elements of a Q7 vector.
2760:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2761:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2762:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2763:DSP/Inc/arm_math.h ****    */
2764:DSP/Inc/arm_math.h ****   void arm_negate_q7(
2765:DSP/Inc/arm_math.h ****   q7_t * pSrc,
2766:DSP/Inc/arm_math.h ****   q7_t * pDst,
2767:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2768:DSP/Inc/arm_math.h **** 
2769:DSP/Inc/arm_math.h **** 
2770:DSP/Inc/arm_math.h ****   /**
2771:DSP/Inc/arm_math.h ****    * @brief  Negates the elements of a Q15 vector.
2772:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2773:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2774:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2775:DSP/Inc/arm_math.h ****    */
2776:DSP/Inc/arm_math.h ****   void arm_negate_q15(
2777:DSP/Inc/arm_math.h ****   q15_t * pSrc,
2778:DSP/Inc/arm_math.h ****   q15_t * pDst,
2779:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2780:DSP/Inc/arm_math.h **** 
2781:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 70


2782:DSP/Inc/arm_math.h ****   /**
2783:DSP/Inc/arm_math.h ****    * @brief  Negates the elements of a Q31 vector.
2784:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2785:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the output vector
2786:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2787:DSP/Inc/arm_math.h ****    */
2788:DSP/Inc/arm_math.h ****   void arm_negate_q31(
2789:DSP/Inc/arm_math.h ****   q31_t * pSrc,
2790:DSP/Inc/arm_math.h ****   q31_t * pDst,
2791:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2792:DSP/Inc/arm_math.h **** 
2793:DSP/Inc/arm_math.h **** 
2794:DSP/Inc/arm_math.h ****   /**
2795:DSP/Inc/arm_math.h ****    * @brief  Copies the elements of a floating-point vector.
2796:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       input pointer
2797:DSP/Inc/arm_math.h ****    * @param[out] pDst       output pointer
2798:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2799:DSP/Inc/arm_math.h ****    */
2800:DSP/Inc/arm_math.h ****   void arm_copy_f32(
2801:DSP/Inc/arm_math.h ****   float32_t * pSrc,
2802:DSP/Inc/arm_math.h ****   float32_t * pDst,
2803:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2804:DSP/Inc/arm_math.h **** 
2805:DSP/Inc/arm_math.h **** 
2806:DSP/Inc/arm_math.h ****   /**
2807:DSP/Inc/arm_math.h ****    * @brief  Copies the elements of a Q7 vector.
2808:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       input pointer
2809:DSP/Inc/arm_math.h ****    * @param[out] pDst       output pointer
2810:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2811:DSP/Inc/arm_math.h ****    */
2812:DSP/Inc/arm_math.h ****   void arm_copy_q7(
2813:DSP/Inc/arm_math.h ****   q7_t * pSrc,
2814:DSP/Inc/arm_math.h ****   q7_t * pDst,
2815:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2816:DSP/Inc/arm_math.h **** 
2817:DSP/Inc/arm_math.h **** 
2818:DSP/Inc/arm_math.h ****   /**
2819:DSP/Inc/arm_math.h ****    * @brief  Copies the elements of a Q15 vector.
2820:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       input pointer
2821:DSP/Inc/arm_math.h ****    * @param[out] pDst       output pointer
2822:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2823:DSP/Inc/arm_math.h ****    */
2824:DSP/Inc/arm_math.h ****   void arm_copy_q15(
2825:DSP/Inc/arm_math.h ****   q15_t * pSrc,
2826:DSP/Inc/arm_math.h ****   q15_t * pDst,
2827:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2828:DSP/Inc/arm_math.h **** 
2829:DSP/Inc/arm_math.h **** 
2830:DSP/Inc/arm_math.h ****   /**
2831:DSP/Inc/arm_math.h ****    * @brief  Copies the elements of a Q31 vector.
2832:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       input pointer
2833:DSP/Inc/arm_math.h ****    * @param[out] pDst       output pointer
2834:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2835:DSP/Inc/arm_math.h ****    */
2836:DSP/Inc/arm_math.h ****   void arm_copy_q31(
2837:DSP/Inc/arm_math.h ****   q31_t * pSrc,
2838:DSP/Inc/arm_math.h ****   q31_t * pDst,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 71


2839:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2840:DSP/Inc/arm_math.h **** 
2841:DSP/Inc/arm_math.h **** 
2842:DSP/Inc/arm_math.h ****   /**
2843:DSP/Inc/arm_math.h ****    * @brief  Fills a constant value into a floating-point vector.
2844:DSP/Inc/arm_math.h ****    * @param[in]  value      input value to be filled
2845:DSP/Inc/arm_math.h ****    * @param[out] pDst       output pointer
2846:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2847:DSP/Inc/arm_math.h ****    */
2848:DSP/Inc/arm_math.h ****   void arm_fill_f32(
2849:DSP/Inc/arm_math.h ****   float32_t value,
2850:DSP/Inc/arm_math.h ****   float32_t * pDst,
2851:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2852:DSP/Inc/arm_math.h **** 
2853:DSP/Inc/arm_math.h **** 
2854:DSP/Inc/arm_math.h ****   /**
2855:DSP/Inc/arm_math.h ****    * @brief  Fills a constant value into a Q7 vector.
2856:DSP/Inc/arm_math.h ****    * @param[in]  value      input value to be filled
2857:DSP/Inc/arm_math.h ****    * @param[out] pDst       output pointer
2858:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2859:DSP/Inc/arm_math.h ****    */
2860:DSP/Inc/arm_math.h ****   void arm_fill_q7(
2861:DSP/Inc/arm_math.h ****   q7_t value,
2862:DSP/Inc/arm_math.h ****   q7_t * pDst,
2863:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2864:DSP/Inc/arm_math.h **** 
2865:DSP/Inc/arm_math.h **** 
2866:DSP/Inc/arm_math.h ****   /**
2867:DSP/Inc/arm_math.h ****    * @brief  Fills a constant value into a Q15 vector.
2868:DSP/Inc/arm_math.h ****    * @param[in]  value      input value to be filled
2869:DSP/Inc/arm_math.h ****    * @param[out] pDst       output pointer
2870:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2871:DSP/Inc/arm_math.h ****    */
2872:DSP/Inc/arm_math.h ****   void arm_fill_q15(
2873:DSP/Inc/arm_math.h ****   q15_t value,
2874:DSP/Inc/arm_math.h ****   q15_t * pDst,
2875:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2876:DSP/Inc/arm_math.h **** 
2877:DSP/Inc/arm_math.h **** 
2878:DSP/Inc/arm_math.h ****   /**
2879:DSP/Inc/arm_math.h ****    * @brief  Fills a constant value into a Q31 vector.
2880:DSP/Inc/arm_math.h ****    * @param[in]  value      input value to be filled
2881:DSP/Inc/arm_math.h ****    * @param[out] pDst       output pointer
2882:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2883:DSP/Inc/arm_math.h ****    */
2884:DSP/Inc/arm_math.h ****   void arm_fill_q31(
2885:DSP/Inc/arm_math.h ****   q31_t value,
2886:DSP/Inc/arm_math.h ****   q31_t * pDst,
2887:DSP/Inc/arm_math.h ****   uint32_t blockSize);
2888:DSP/Inc/arm_math.h **** 
2889:DSP/Inc/arm_math.h **** 
2890:DSP/Inc/arm_math.h **** /**
2891:DSP/Inc/arm_math.h ****  * @brief Convolution of floating-point sequences.
2892:DSP/Inc/arm_math.h ****  * @param[in]  pSrcA    points to the first input sequence.
2893:DSP/Inc/arm_math.h ****  * @param[in]  srcALen  length of the first input sequence.
2894:DSP/Inc/arm_math.h ****  * @param[in]  pSrcB    points to the second input sequence.
2895:DSP/Inc/arm_math.h ****  * @param[in]  srcBLen  length of the second input sequence.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 72


2896:DSP/Inc/arm_math.h ****  * @param[out] pDst     points to the location where the output result is written.  Length srcALen+
2897:DSP/Inc/arm_math.h ****  */
2898:DSP/Inc/arm_math.h ****   void arm_conv_f32(
2899:DSP/Inc/arm_math.h ****   float32_t * pSrcA,
2900:DSP/Inc/arm_math.h ****   uint32_t srcALen,
2901:DSP/Inc/arm_math.h ****   float32_t * pSrcB,
2902:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
2903:DSP/Inc/arm_math.h ****   float32_t * pDst);
2904:DSP/Inc/arm_math.h **** 
2905:DSP/Inc/arm_math.h **** 
2906:DSP/Inc/arm_math.h ****   /**
2907:DSP/Inc/arm_math.h ****    * @brief Convolution of Q15 sequences.
2908:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
2909:DSP/Inc/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
2910:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
2911:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
2912:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
2913:DSP/Inc/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen,
2914:DSP/Inc/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
2915:DSP/Inc/arm_math.h ****    */
2916:DSP/Inc/arm_math.h ****   void arm_conv_opt_q15(
2917:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
2918:DSP/Inc/arm_math.h ****   uint32_t srcALen,
2919:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
2920:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
2921:DSP/Inc/arm_math.h ****   q15_t * pDst,
2922:DSP/Inc/arm_math.h ****   q15_t * pScratch1,
2923:DSP/Inc/arm_math.h ****   q15_t * pScratch2);
2924:DSP/Inc/arm_math.h **** 
2925:DSP/Inc/arm_math.h **** 
2926:DSP/Inc/arm_math.h **** /**
2927:DSP/Inc/arm_math.h ****  * @brief Convolution of Q15 sequences.
2928:DSP/Inc/arm_math.h ****  * @param[in]  pSrcA    points to the first input sequence.
2929:DSP/Inc/arm_math.h ****  * @param[in]  srcALen  length of the first input sequence.
2930:DSP/Inc/arm_math.h ****  * @param[in]  pSrcB    points to the second input sequence.
2931:DSP/Inc/arm_math.h ****  * @param[in]  srcBLen  length of the second input sequence.
2932:DSP/Inc/arm_math.h ****  * @param[out] pDst     points to the location where the output result is written.  Length srcALen+
2933:DSP/Inc/arm_math.h ****  */
2934:DSP/Inc/arm_math.h ****   void arm_conv_q15(
2935:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
2936:DSP/Inc/arm_math.h ****   uint32_t srcALen,
2937:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
2938:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
2939:DSP/Inc/arm_math.h ****   q15_t * pDst);
2940:DSP/Inc/arm_math.h **** 
2941:DSP/Inc/arm_math.h **** 
2942:DSP/Inc/arm_math.h ****   /**
2943:DSP/Inc/arm_math.h ****    * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
2944:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
2945:DSP/Inc/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
2946:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
2947:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
2948:DSP/Inc/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
2949:DSP/Inc/arm_math.h ****    */
2950:DSP/Inc/arm_math.h ****   void arm_conv_fast_q15(
2951:DSP/Inc/arm_math.h ****           q15_t * pSrcA,
2952:DSP/Inc/arm_math.h ****           uint32_t srcALen,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 73


2953:DSP/Inc/arm_math.h ****           q15_t * pSrcB,
2954:DSP/Inc/arm_math.h ****           uint32_t srcBLen,
2955:DSP/Inc/arm_math.h ****           q15_t * pDst);
2956:DSP/Inc/arm_math.h **** 
2957:DSP/Inc/arm_math.h **** 
2958:DSP/Inc/arm_math.h ****   /**
2959:DSP/Inc/arm_math.h ****    * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
2960:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
2961:DSP/Inc/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
2962:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
2963:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
2964:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
2965:DSP/Inc/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen,
2966:DSP/Inc/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
2967:DSP/Inc/arm_math.h ****    */
2968:DSP/Inc/arm_math.h ****   void arm_conv_fast_opt_q15(
2969:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
2970:DSP/Inc/arm_math.h ****   uint32_t srcALen,
2971:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
2972:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
2973:DSP/Inc/arm_math.h ****   q15_t * pDst,
2974:DSP/Inc/arm_math.h ****   q15_t * pScratch1,
2975:DSP/Inc/arm_math.h ****   q15_t * pScratch2);
2976:DSP/Inc/arm_math.h **** 
2977:DSP/Inc/arm_math.h **** 
2978:DSP/Inc/arm_math.h ****   /**
2979:DSP/Inc/arm_math.h ****    * @brief Convolution of Q31 sequences.
2980:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
2981:DSP/Inc/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
2982:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
2983:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
2984:DSP/Inc/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
2985:DSP/Inc/arm_math.h ****    */
2986:DSP/Inc/arm_math.h ****   void arm_conv_q31(
2987:DSP/Inc/arm_math.h ****   q31_t * pSrcA,
2988:DSP/Inc/arm_math.h ****   uint32_t srcALen,
2989:DSP/Inc/arm_math.h ****   q31_t * pSrcB,
2990:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
2991:DSP/Inc/arm_math.h ****   q31_t * pDst);
2992:DSP/Inc/arm_math.h **** 
2993:DSP/Inc/arm_math.h **** 
2994:DSP/Inc/arm_math.h ****   /**
2995:DSP/Inc/arm_math.h ****    * @brief Convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
2996:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
2997:DSP/Inc/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
2998:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
2999:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3000:DSP/Inc/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3001:DSP/Inc/arm_math.h ****    */
3002:DSP/Inc/arm_math.h ****   void arm_conv_fast_q31(
3003:DSP/Inc/arm_math.h ****   q31_t * pSrcA,
3004:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3005:DSP/Inc/arm_math.h ****   q31_t * pSrcB,
3006:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3007:DSP/Inc/arm_math.h ****   q31_t * pDst);
3008:DSP/Inc/arm_math.h **** 
3009:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 74


3010:DSP/Inc/arm_math.h ****     /**
3011:DSP/Inc/arm_math.h ****    * @brief Convolution of Q7 sequences.
3012:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
3013:DSP/Inc/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
3014:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
3015:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
3016:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
3017:DSP/Inc/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
3018:DSP/Inc/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
3019:DSP/Inc/arm_math.h ****    */
3020:DSP/Inc/arm_math.h ****   void arm_conv_opt_q7(
3021:DSP/Inc/arm_math.h ****   q7_t * pSrcA,
3022:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3023:DSP/Inc/arm_math.h ****   q7_t * pSrcB,
3024:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3025:DSP/Inc/arm_math.h ****   q7_t * pDst,
3026:DSP/Inc/arm_math.h ****   q15_t * pScratch1,
3027:DSP/Inc/arm_math.h ****   q15_t * pScratch2);
3028:DSP/Inc/arm_math.h **** 
3029:DSP/Inc/arm_math.h **** 
3030:DSP/Inc/arm_math.h ****   /**
3031:DSP/Inc/arm_math.h ****    * @brief Convolution of Q7 sequences.
3032:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3033:DSP/Inc/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3034:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3035:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3036:DSP/Inc/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3037:DSP/Inc/arm_math.h ****    */
3038:DSP/Inc/arm_math.h ****   void arm_conv_q7(
3039:DSP/Inc/arm_math.h ****   q7_t * pSrcA,
3040:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3041:DSP/Inc/arm_math.h ****   q7_t * pSrcB,
3042:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3043:DSP/Inc/arm_math.h ****   q7_t * pDst);
3044:DSP/Inc/arm_math.h **** 
3045:DSP/Inc/arm_math.h **** 
3046:DSP/Inc/arm_math.h ****   /**
3047:DSP/Inc/arm_math.h ****    * @brief Partial convolution of floating-point sequences.
3048:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3049:DSP/Inc/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3050:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3051:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3052:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
3053:DSP/Inc/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3054:DSP/Inc/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3055:DSP/Inc/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3056:DSP/Inc/arm_math.h ****    */
3057:DSP/Inc/arm_math.h ****   arm_status arm_conv_partial_f32(
3058:DSP/Inc/arm_math.h ****   float32_t * pSrcA,
3059:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3060:DSP/Inc/arm_math.h ****   float32_t * pSrcB,
3061:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3062:DSP/Inc/arm_math.h ****   float32_t * pDst,
3063:DSP/Inc/arm_math.h ****   uint32_t firstIndex,
3064:DSP/Inc/arm_math.h ****   uint32_t numPoints);
3065:DSP/Inc/arm_math.h **** 
3066:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 75


3067:DSP/Inc/arm_math.h ****   /**
3068:DSP/Inc/arm_math.h ****    * @brief Partial convolution of Q15 sequences.
3069:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3070:DSP/Inc/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3071:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3072:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3073:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
3074:DSP/Inc/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3075:DSP/Inc/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3076:DSP/Inc/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen
3077:DSP/Inc/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
3078:DSP/Inc/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3079:DSP/Inc/arm_math.h ****    */
3080:DSP/Inc/arm_math.h ****   arm_status arm_conv_partial_opt_q15(
3081:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
3082:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3083:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
3084:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3085:DSP/Inc/arm_math.h ****   q15_t * pDst,
3086:DSP/Inc/arm_math.h ****   uint32_t firstIndex,
3087:DSP/Inc/arm_math.h ****   uint32_t numPoints,
3088:DSP/Inc/arm_math.h ****   q15_t * pScratch1,
3089:DSP/Inc/arm_math.h ****   q15_t * pScratch2);
3090:DSP/Inc/arm_math.h **** 
3091:DSP/Inc/arm_math.h **** 
3092:DSP/Inc/arm_math.h ****   /**
3093:DSP/Inc/arm_math.h ****    * @brief Partial convolution of Q15 sequences.
3094:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3095:DSP/Inc/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3096:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3097:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3098:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
3099:DSP/Inc/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3100:DSP/Inc/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3101:DSP/Inc/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3102:DSP/Inc/arm_math.h ****    */
3103:DSP/Inc/arm_math.h ****   arm_status arm_conv_partial_q15(
3104:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
3105:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3106:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
3107:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3108:DSP/Inc/arm_math.h ****   q15_t * pDst,
3109:DSP/Inc/arm_math.h ****   uint32_t firstIndex,
3110:DSP/Inc/arm_math.h ****   uint32_t numPoints);
3111:DSP/Inc/arm_math.h **** 
3112:DSP/Inc/arm_math.h **** 
3113:DSP/Inc/arm_math.h ****   /**
3114:DSP/Inc/arm_math.h ****    * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3115:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3116:DSP/Inc/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3117:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3118:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3119:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
3120:DSP/Inc/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3121:DSP/Inc/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3122:DSP/Inc/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3123:DSP/Inc/arm_math.h ****    */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 76


3124:DSP/Inc/arm_math.h ****   arm_status arm_conv_partial_fast_q15(
3125:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
3126:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3127:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
3128:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3129:DSP/Inc/arm_math.h ****   q15_t * pDst,
3130:DSP/Inc/arm_math.h ****   uint32_t firstIndex,
3131:DSP/Inc/arm_math.h ****   uint32_t numPoints);
3132:DSP/Inc/arm_math.h **** 
3133:DSP/Inc/arm_math.h **** 
3134:DSP/Inc/arm_math.h ****   /**
3135:DSP/Inc/arm_math.h ****    * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3136:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3137:DSP/Inc/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3138:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3139:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3140:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
3141:DSP/Inc/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3142:DSP/Inc/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3143:DSP/Inc/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen
3144:DSP/Inc/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
3145:DSP/Inc/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3146:DSP/Inc/arm_math.h ****    */
3147:DSP/Inc/arm_math.h ****   arm_status arm_conv_partial_fast_opt_q15(
3148:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
3149:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3150:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
3151:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3152:DSP/Inc/arm_math.h ****   q15_t * pDst,
3153:DSP/Inc/arm_math.h ****   uint32_t firstIndex,
3154:DSP/Inc/arm_math.h ****   uint32_t numPoints,
3155:DSP/Inc/arm_math.h ****   q15_t * pScratch1,
3156:DSP/Inc/arm_math.h ****   q15_t * pScratch2);
3157:DSP/Inc/arm_math.h **** 
3158:DSP/Inc/arm_math.h **** 
3159:DSP/Inc/arm_math.h ****   /**
3160:DSP/Inc/arm_math.h ****    * @brief Partial convolution of Q31 sequences.
3161:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3162:DSP/Inc/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3163:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3164:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3165:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
3166:DSP/Inc/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3167:DSP/Inc/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3168:DSP/Inc/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3169:DSP/Inc/arm_math.h ****    */
3170:DSP/Inc/arm_math.h ****   arm_status arm_conv_partial_q31(
3171:DSP/Inc/arm_math.h ****   q31_t * pSrcA,
3172:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3173:DSP/Inc/arm_math.h ****   q31_t * pSrcB,
3174:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3175:DSP/Inc/arm_math.h ****   q31_t * pDst,
3176:DSP/Inc/arm_math.h ****   uint32_t firstIndex,
3177:DSP/Inc/arm_math.h ****   uint32_t numPoints);
3178:DSP/Inc/arm_math.h **** 
3179:DSP/Inc/arm_math.h **** 
3180:DSP/Inc/arm_math.h ****   /**
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 77


3181:DSP/Inc/arm_math.h ****    * @brief Partial convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
3182:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3183:DSP/Inc/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3184:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3185:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3186:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
3187:DSP/Inc/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3188:DSP/Inc/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3189:DSP/Inc/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3190:DSP/Inc/arm_math.h ****    */
3191:DSP/Inc/arm_math.h ****   arm_status arm_conv_partial_fast_q31(
3192:DSP/Inc/arm_math.h ****   q31_t * pSrcA,
3193:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3194:DSP/Inc/arm_math.h ****   q31_t * pSrcB,
3195:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3196:DSP/Inc/arm_math.h ****   q31_t * pDst,
3197:DSP/Inc/arm_math.h ****   uint32_t firstIndex,
3198:DSP/Inc/arm_math.h ****   uint32_t numPoints);
3199:DSP/Inc/arm_math.h **** 
3200:DSP/Inc/arm_math.h **** 
3201:DSP/Inc/arm_math.h ****   /**
3202:DSP/Inc/arm_math.h ****    * @brief Partial convolution of Q7 sequences
3203:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3204:DSP/Inc/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3205:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3206:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3207:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
3208:DSP/Inc/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3209:DSP/Inc/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3210:DSP/Inc/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) 
3211:DSP/Inc/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen)
3212:DSP/Inc/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3213:DSP/Inc/arm_math.h ****    */
3214:DSP/Inc/arm_math.h ****   arm_status arm_conv_partial_opt_q7(
3215:DSP/Inc/arm_math.h ****   q7_t * pSrcA,
3216:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3217:DSP/Inc/arm_math.h ****   q7_t * pSrcB,
3218:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3219:DSP/Inc/arm_math.h ****   q7_t * pDst,
3220:DSP/Inc/arm_math.h ****   uint32_t firstIndex,
3221:DSP/Inc/arm_math.h ****   uint32_t numPoints,
3222:DSP/Inc/arm_math.h ****   q15_t * pScratch1,
3223:DSP/Inc/arm_math.h ****   q15_t * pScratch2);
3224:DSP/Inc/arm_math.h **** 
3225:DSP/Inc/arm_math.h **** 
3226:DSP/Inc/arm_math.h **** /**
3227:DSP/Inc/arm_math.h ****    * @brief Partial convolution of Q7 sequences.
3228:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3229:DSP/Inc/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3230:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3231:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3232:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
3233:DSP/Inc/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3234:DSP/Inc/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3235:DSP/Inc/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3236:DSP/Inc/arm_math.h ****    */
3237:DSP/Inc/arm_math.h ****   arm_status arm_conv_partial_q7(
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 78


3238:DSP/Inc/arm_math.h ****   q7_t * pSrcA,
3239:DSP/Inc/arm_math.h ****   uint32_t srcALen,
3240:DSP/Inc/arm_math.h ****   q7_t * pSrcB,
3241:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
3242:DSP/Inc/arm_math.h ****   q7_t * pDst,
3243:DSP/Inc/arm_math.h ****   uint32_t firstIndex,
3244:DSP/Inc/arm_math.h ****   uint32_t numPoints);
3245:DSP/Inc/arm_math.h **** 
3246:DSP/Inc/arm_math.h **** 
3247:DSP/Inc/arm_math.h ****   /**
3248:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 FIR decimator.
3249:DSP/Inc/arm_math.h ****    */
3250:DSP/Inc/arm_math.h ****   typedef struct
3251:DSP/Inc/arm_math.h ****   {
3252:DSP/Inc/arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3253:DSP/Inc/arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3254:DSP/Inc/arm_math.h ****     q15_t *pCoeffs;             /**< points to the coefficient array. The array is of length numTap
3255:DSP/Inc/arm_math.h ****     q15_t *pState;              /**< points to the state variable array. The array is of length num
3256:DSP/Inc/arm_math.h ****   } arm_fir_decimate_instance_q15;
3257:DSP/Inc/arm_math.h **** 
3258:DSP/Inc/arm_math.h ****   /**
3259:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 FIR decimator.
3260:DSP/Inc/arm_math.h ****    */
3261:DSP/Inc/arm_math.h ****   typedef struct
3262:DSP/Inc/arm_math.h ****   {
3263:DSP/Inc/arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3264:DSP/Inc/arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3265:DSP/Inc/arm_math.h ****     q31_t *pCoeffs;             /**< points to the coefficient array. The array is of length numTap
3266:DSP/Inc/arm_math.h ****     q31_t *pState;              /**< points to the state variable array. The array is of length num
3267:DSP/Inc/arm_math.h ****   } arm_fir_decimate_instance_q31;
3268:DSP/Inc/arm_math.h **** 
3269:DSP/Inc/arm_math.h ****   /**
3270:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point FIR decimator.
3271:DSP/Inc/arm_math.h ****    */
3272:DSP/Inc/arm_math.h ****   typedef struct
3273:DSP/Inc/arm_math.h ****   {
3274:DSP/Inc/arm_math.h ****     uint8_t M;                  /**< decimation factor. */
3275:DSP/Inc/arm_math.h ****     uint16_t numTaps;           /**< number of coefficients in the filter. */
3276:DSP/Inc/arm_math.h ****     float32_t *pCoeffs;         /**< points to the coefficient array. The array is of length numTap
3277:DSP/Inc/arm_math.h ****     float32_t *pState;          /**< points to the state variable array. The array is of length num
3278:DSP/Inc/arm_math.h ****   } arm_fir_decimate_instance_f32;
3279:DSP/Inc/arm_math.h **** 
3280:DSP/Inc/arm_math.h **** 
3281:DSP/Inc/arm_math.h ****   /**
3282:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point FIR decimator.
3283:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR decimator structure.
3284:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3285:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data
3286:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3287:DSP/Inc/arm_math.h ****    */
3288:DSP/Inc/arm_math.h ****   void arm_fir_decimate_f32(
3289:DSP/Inc/arm_math.h ****   const arm_fir_decimate_instance_f32 * S,
3290:DSP/Inc/arm_math.h ****   float32_t * pSrc,
3291:DSP/Inc/arm_math.h ****   float32_t * pDst,
3292:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3293:DSP/Inc/arm_math.h **** 
3294:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 79


3295:DSP/Inc/arm_math.h ****   /**
3296:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the floating-point FIR decimator.
3297:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR decimator structure.
3298:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3299:DSP/Inc/arm_math.h ****    * @param[in]     M          decimation factor.
3300:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3301:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3302:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3303:DSP/Inc/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3304:DSP/Inc/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3305:DSP/Inc/arm_math.h ****    */
3306:DSP/Inc/arm_math.h ****   arm_status arm_fir_decimate_init_f32(
3307:DSP/Inc/arm_math.h ****   arm_fir_decimate_instance_f32 * S,
3308:DSP/Inc/arm_math.h ****   uint16_t numTaps,
3309:DSP/Inc/arm_math.h ****   uint8_t M,
3310:DSP/Inc/arm_math.h ****   float32_t * pCoeffs,
3311:DSP/Inc/arm_math.h ****   float32_t * pState,
3312:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3313:DSP/Inc/arm_math.h **** 
3314:DSP/Inc/arm_math.h **** 
3315:DSP/Inc/arm_math.h ****   /**
3316:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q15 FIR decimator.
3317:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
3318:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3319:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data
3320:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3321:DSP/Inc/arm_math.h ****    */
3322:DSP/Inc/arm_math.h ****   void arm_fir_decimate_q15(
3323:DSP/Inc/arm_math.h ****   const arm_fir_decimate_instance_q15 * S,
3324:DSP/Inc/arm_math.h ****   q15_t * pSrc,
3325:DSP/Inc/arm_math.h ****   q15_t * pDst,
3326:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3327:DSP/Inc/arm_math.h **** 
3328:DSP/Inc/arm_math.h **** 
3329:DSP/Inc/arm_math.h ****   /**
3330:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q15 FIR decimator (fast variant) for Cortex-M3 and Cortex-M
3331:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
3332:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3333:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data
3334:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3335:DSP/Inc/arm_math.h ****    */
3336:DSP/Inc/arm_math.h ****   void arm_fir_decimate_fast_q15(
3337:DSP/Inc/arm_math.h ****   const arm_fir_decimate_instance_q15 * S,
3338:DSP/Inc/arm_math.h ****   q15_t * pSrc,
3339:DSP/Inc/arm_math.h ****   q15_t * pDst,
3340:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3341:DSP/Inc/arm_math.h **** 
3342:DSP/Inc/arm_math.h **** 
3343:DSP/Inc/arm_math.h ****   /**
3344:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q15 FIR decimator.
3345:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR decimator structure.
3346:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3347:DSP/Inc/arm_math.h ****    * @param[in]     M          decimation factor.
3348:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3349:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3350:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3351:DSP/Inc/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 80


3352:DSP/Inc/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3353:DSP/Inc/arm_math.h ****    */
3354:DSP/Inc/arm_math.h ****   arm_status arm_fir_decimate_init_q15(
3355:DSP/Inc/arm_math.h ****   arm_fir_decimate_instance_q15 * S,
3356:DSP/Inc/arm_math.h ****   uint16_t numTaps,
3357:DSP/Inc/arm_math.h ****   uint8_t M,
3358:DSP/Inc/arm_math.h ****   q15_t * pCoeffs,
3359:DSP/Inc/arm_math.h ****   q15_t * pState,
3360:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3361:DSP/Inc/arm_math.h **** 
3362:DSP/Inc/arm_math.h **** 
3363:DSP/Inc/arm_math.h ****   /**
3364:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q31 FIR decimator.
3365:DSP/Inc/arm_math.h ****    * @param[in]  S     points to an instance of the Q31 FIR decimator structure.
3366:DSP/Inc/arm_math.h ****    * @param[in]  pSrc  points to the block of input data.
3367:DSP/Inc/arm_math.h ****    * @param[out] pDst  points to the block of output data
3368:DSP/Inc/arm_math.h ****    * @param[in] blockSize number of input samples to process per call.
3369:DSP/Inc/arm_math.h ****    */
3370:DSP/Inc/arm_math.h ****   void arm_fir_decimate_q31(
3371:DSP/Inc/arm_math.h ****   const arm_fir_decimate_instance_q31 * S,
3372:DSP/Inc/arm_math.h ****   q31_t * pSrc,
3373:DSP/Inc/arm_math.h ****   q31_t * pDst,
3374:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3375:DSP/Inc/arm_math.h **** 
3376:DSP/Inc/arm_math.h ****   /**
3377:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q31 FIR decimator (fast variant) for Cortex-M3 and Cortex-M
3378:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR decimator structure.
3379:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3380:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data
3381:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3382:DSP/Inc/arm_math.h ****    */
3383:DSP/Inc/arm_math.h ****   void arm_fir_decimate_fast_q31(
3384:DSP/Inc/arm_math.h ****   arm_fir_decimate_instance_q31 * S,
3385:DSP/Inc/arm_math.h ****   q31_t * pSrc,
3386:DSP/Inc/arm_math.h ****   q31_t * pDst,
3387:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3388:DSP/Inc/arm_math.h **** 
3389:DSP/Inc/arm_math.h **** 
3390:DSP/Inc/arm_math.h ****   /**
3391:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q31 FIR decimator.
3392:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR decimator structure.
3393:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3394:DSP/Inc/arm_math.h ****    * @param[in]     M          decimation factor.
3395:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3396:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3397:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3398:DSP/Inc/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3399:DSP/Inc/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3400:DSP/Inc/arm_math.h ****    */
3401:DSP/Inc/arm_math.h ****   arm_status arm_fir_decimate_init_q31(
3402:DSP/Inc/arm_math.h ****   arm_fir_decimate_instance_q31 * S,
3403:DSP/Inc/arm_math.h ****   uint16_t numTaps,
3404:DSP/Inc/arm_math.h ****   uint8_t M,
3405:DSP/Inc/arm_math.h ****   q31_t * pCoeffs,
3406:DSP/Inc/arm_math.h ****   q31_t * pState,
3407:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3408:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 81


3409:DSP/Inc/arm_math.h **** 
3410:DSP/Inc/arm_math.h ****   /**
3411:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 FIR interpolator.
3412:DSP/Inc/arm_math.h ****    */
3413:DSP/Inc/arm_math.h ****   typedef struct
3414:DSP/Inc/arm_math.h ****   {
3415:DSP/Inc/arm_math.h ****     uint8_t L;                      /**< upsample factor. */
3416:DSP/Inc/arm_math.h ****     uint16_t phaseLength;           /**< length of each polyphase filter component. */
3417:DSP/Inc/arm_math.h ****     q15_t *pCoeffs;                 /**< points to the coefficient array. The array is of length L*
3418:DSP/Inc/arm_math.h ****     q15_t *pState;                  /**< points to the state variable array. The array is of length
3419:DSP/Inc/arm_math.h ****   } arm_fir_interpolate_instance_q15;
3420:DSP/Inc/arm_math.h **** 
3421:DSP/Inc/arm_math.h ****   /**
3422:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 FIR interpolator.
3423:DSP/Inc/arm_math.h ****    */
3424:DSP/Inc/arm_math.h ****   typedef struct
3425:DSP/Inc/arm_math.h ****   {
3426:DSP/Inc/arm_math.h ****     uint8_t L;                      /**< upsample factor. */
3427:DSP/Inc/arm_math.h ****     uint16_t phaseLength;           /**< length of each polyphase filter component. */
3428:DSP/Inc/arm_math.h ****     q31_t *pCoeffs;                 /**< points to the coefficient array. The array is of length L*
3429:DSP/Inc/arm_math.h ****     q31_t *pState;                  /**< points to the state variable array. The array is of length
3430:DSP/Inc/arm_math.h ****   } arm_fir_interpolate_instance_q31;
3431:DSP/Inc/arm_math.h **** 
3432:DSP/Inc/arm_math.h ****   /**
3433:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point FIR interpolator.
3434:DSP/Inc/arm_math.h ****    */
3435:DSP/Inc/arm_math.h ****   typedef struct
3436:DSP/Inc/arm_math.h ****   {
3437:DSP/Inc/arm_math.h ****     uint8_t L;                     /**< upsample factor. */
3438:DSP/Inc/arm_math.h ****     uint16_t phaseLength;          /**< length of each polyphase filter component. */
3439:DSP/Inc/arm_math.h ****     float32_t *pCoeffs;            /**< points to the coefficient array. The array is of length L*p
3440:DSP/Inc/arm_math.h ****     float32_t *pState;             /**< points to the state variable array. The array is of length 
3441:DSP/Inc/arm_math.h ****   } arm_fir_interpolate_instance_f32;
3442:DSP/Inc/arm_math.h **** 
3443:DSP/Inc/arm_math.h **** 
3444:DSP/Inc/arm_math.h ****   /**
3445:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q15 FIR interpolator.
3446:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
3447:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3448:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3449:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3450:DSP/Inc/arm_math.h ****    */
3451:DSP/Inc/arm_math.h ****   void arm_fir_interpolate_q15(
3452:DSP/Inc/arm_math.h ****   const arm_fir_interpolate_instance_q15 * S,
3453:DSP/Inc/arm_math.h ****   q15_t * pSrc,
3454:DSP/Inc/arm_math.h ****   q15_t * pDst,
3455:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3456:DSP/Inc/arm_math.h **** 
3457:DSP/Inc/arm_math.h **** 
3458:DSP/Inc/arm_math.h ****   /**
3459:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q15 FIR interpolator.
3460:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR interpolator structure.
3461:DSP/Inc/arm_math.h ****    * @param[in]     L          upsample factor.
3462:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3463:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3464:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3465:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 82


3466:DSP/Inc/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3467:DSP/Inc/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3468:DSP/Inc/arm_math.h ****    */
3469:DSP/Inc/arm_math.h ****   arm_status arm_fir_interpolate_init_q15(
3470:DSP/Inc/arm_math.h ****   arm_fir_interpolate_instance_q15 * S,
3471:DSP/Inc/arm_math.h ****   uint8_t L,
3472:DSP/Inc/arm_math.h ****   uint16_t numTaps,
3473:DSP/Inc/arm_math.h ****   q15_t * pCoeffs,
3474:DSP/Inc/arm_math.h ****   q15_t * pState,
3475:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3476:DSP/Inc/arm_math.h **** 
3477:DSP/Inc/arm_math.h **** 
3478:DSP/Inc/arm_math.h ****   /**
3479:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q31 FIR interpolator.
3480:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
3481:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3482:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3483:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3484:DSP/Inc/arm_math.h ****    */
3485:DSP/Inc/arm_math.h ****   void arm_fir_interpolate_q31(
3486:DSP/Inc/arm_math.h ****   const arm_fir_interpolate_instance_q31 * S,
3487:DSP/Inc/arm_math.h ****   q31_t * pSrc,
3488:DSP/Inc/arm_math.h ****   q31_t * pDst,
3489:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3490:DSP/Inc/arm_math.h **** 
3491:DSP/Inc/arm_math.h **** 
3492:DSP/Inc/arm_math.h ****   /**
3493:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q31 FIR interpolator.
3494:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR interpolator structure.
3495:DSP/Inc/arm_math.h ****    * @param[in]     L          upsample factor.
3496:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3497:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3498:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3499:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3500:DSP/Inc/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3501:DSP/Inc/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3502:DSP/Inc/arm_math.h ****    */
3503:DSP/Inc/arm_math.h ****   arm_status arm_fir_interpolate_init_q31(
3504:DSP/Inc/arm_math.h ****   arm_fir_interpolate_instance_q31 * S,
3505:DSP/Inc/arm_math.h ****   uint8_t L,
3506:DSP/Inc/arm_math.h ****   uint16_t numTaps,
3507:DSP/Inc/arm_math.h ****   q31_t * pCoeffs,
3508:DSP/Inc/arm_math.h ****   q31_t * pState,
3509:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3510:DSP/Inc/arm_math.h **** 
3511:DSP/Inc/arm_math.h **** 
3512:DSP/Inc/arm_math.h ****   /**
3513:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point FIR interpolator.
3514:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR interpolator structure.
3515:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3516:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3517:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3518:DSP/Inc/arm_math.h ****    */
3519:DSP/Inc/arm_math.h ****   void arm_fir_interpolate_f32(
3520:DSP/Inc/arm_math.h ****   const arm_fir_interpolate_instance_f32 * S,
3521:DSP/Inc/arm_math.h ****   float32_t * pSrc,
3522:DSP/Inc/arm_math.h ****   float32_t * pDst,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 83


3523:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3524:DSP/Inc/arm_math.h **** 
3525:DSP/Inc/arm_math.h **** 
3526:DSP/Inc/arm_math.h ****   /**
3527:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the floating-point FIR interpolator.
3528:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR interpolator structu
3529:DSP/Inc/arm_math.h ****    * @param[in]     L          upsample factor.
3530:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3531:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3532:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3533:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3534:DSP/Inc/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3535:DSP/Inc/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3536:DSP/Inc/arm_math.h ****    */
3537:DSP/Inc/arm_math.h ****   arm_status arm_fir_interpolate_init_f32(
3538:DSP/Inc/arm_math.h ****   arm_fir_interpolate_instance_f32 * S,
3539:DSP/Inc/arm_math.h ****   uint8_t L,
3540:DSP/Inc/arm_math.h ****   uint16_t numTaps,
3541:DSP/Inc/arm_math.h ****   float32_t * pCoeffs,
3542:DSP/Inc/arm_math.h ****   float32_t * pState,
3543:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3544:DSP/Inc/arm_math.h **** 
3545:DSP/Inc/arm_math.h **** 
3546:DSP/Inc/arm_math.h ****   /**
3547:DSP/Inc/arm_math.h ****    * @brief Instance structure for the high precision Q31 Biquad cascade filter.
3548:DSP/Inc/arm_math.h ****    */
3549:DSP/Inc/arm_math.h ****   typedef struct
3550:DSP/Inc/arm_math.h ****   {
3551:DSP/Inc/arm_math.h ****     uint8_t numStages;       /**< number of 2nd order stages in the filter.  Overall order is 2*num
3552:DSP/Inc/arm_math.h ****     q63_t *pState;           /**< points to the array of state coefficients.  The array is of lengt
3553:DSP/Inc/arm_math.h ****     q31_t *pCoeffs;          /**< points to the array of coefficients.  The array is of length 5*nu
3554:DSP/Inc/arm_math.h ****     uint8_t postShift;       /**< additional shift, in bits, applied to each output sample. */
3555:DSP/Inc/arm_math.h ****   } arm_biquad_cas_df1_32x64_ins_q31;
3556:DSP/Inc/arm_math.h **** 
3557:DSP/Inc/arm_math.h **** 
3558:DSP/Inc/arm_math.h ****   /**
3559:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the high precision Q31 Biquad cascade filter s
3560:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3561:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data
3562:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3563:DSP/Inc/arm_math.h ****    */
3564:DSP/Inc/arm_math.h ****   void arm_biquad_cas_df1_32x64_q31(
3565:DSP/Inc/arm_math.h ****   const arm_biquad_cas_df1_32x64_ins_q31 * S,
3566:DSP/Inc/arm_math.h ****   q31_t * pSrc,
3567:DSP/Inc/arm_math.h ****   q31_t * pDst,
3568:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3569:DSP/Inc/arm_math.h **** 
3570:DSP/Inc/arm_math.h **** 
3571:DSP/Inc/arm_math.h ****   /**
3572:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the high precision Q31 Biquad cascade filte
3573:DSP/Inc/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3574:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3575:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3576:DSP/Inc/arm_math.h ****    * @param[in]     postShift  shift to be applied to the output. Varies according to the coefficie
3577:DSP/Inc/arm_math.h ****    */
3578:DSP/Inc/arm_math.h ****   void arm_biquad_cas_df1_32x64_init_q31(
3579:DSP/Inc/arm_math.h ****   arm_biquad_cas_df1_32x64_ins_q31 * S,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 84


3580:DSP/Inc/arm_math.h ****   uint8_t numStages,
3581:DSP/Inc/arm_math.h ****   q31_t * pCoeffs,
3582:DSP/Inc/arm_math.h ****   q63_t * pState,
3583:DSP/Inc/arm_math.h ****   uint8_t postShift);
3584:DSP/Inc/arm_math.h **** 
3585:DSP/Inc/arm_math.h **** 
3586:DSP/Inc/arm_math.h ****   /**
3587:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3588:DSP/Inc/arm_math.h ****    */
3589:DSP/Inc/arm_math.h ****   typedef struct
3590:DSP/Inc/arm_math.h ****   {
3591:DSP/Inc/arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3592:DSP/Inc/arm_math.h ****     float32_t *pState;         /**< points to the array of state coefficients.  The array is of len
3593:DSP/Inc/arm_math.h ****     float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3594:DSP/Inc/arm_math.h ****   } arm_biquad_cascade_df2T_instance_f32;
3595:DSP/Inc/arm_math.h **** 
3596:DSP/Inc/arm_math.h ****   /**
3597:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3598:DSP/Inc/arm_math.h ****    */
3599:DSP/Inc/arm_math.h ****   typedef struct
3600:DSP/Inc/arm_math.h ****   {
3601:DSP/Inc/arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3602:DSP/Inc/arm_math.h ****     float32_t *pState;         /**< points to the array of state coefficients.  The array is of len
3603:DSP/Inc/arm_math.h ****     float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3604:DSP/Inc/arm_math.h ****   } arm_biquad_cascade_stereo_df2T_instance_f32;
3605:DSP/Inc/arm_math.h **** 
3606:DSP/Inc/arm_math.h ****   /**
3607:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3608:DSP/Inc/arm_math.h ****    */
3609:DSP/Inc/arm_math.h ****   typedef struct
3610:DSP/Inc/arm_math.h ****   {
3611:DSP/Inc/arm_math.h ****     uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order is 2*n
3612:DSP/Inc/arm_math.h ****     float64_t *pState;         /**< points to the array of state coefficients.  The array is of len
3613:DSP/Inc/arm_math.h ****     float64_t *pCoeffs;        /**< points to the array of coefficients.  The array is of length 5*
3614:DSP/Inc/arm_math.h ****   } arm_biquad_cascade_df2T_instance_f64;
3615:DSP/Inc/arm_math.h **** 
3616:DSP/Inc/arm_math.h **** 
3617:DSP/Inc/arm_math.h ****   /**
3618:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3619:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3620:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3621:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data
3622:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3623:DSP/Inc/arm_math.h ****    */
3624:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df2T_f32(
3625:DSP/Inc/arm_math.h ****   const arm_biquad_cascade_df2T_instance_f32 * S,
3626:DSP/Inc/arm_math.h ****   float32_t * pSrc,
3627:DSP/Inc/arm_math.h ****   float32_t * pDst,
3628:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3629:DSP/Inc/arm_math.h **** 
3630:DSP/Inc/arm_math.h **** 
3631:DSP/Inc/arm_math.h ****   /**
3632:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3633:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3634:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3635:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data
3636:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 85


3637:DSP/Inc/arm_math.h ****    */
3638:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_stereo_df2T_f32(
3639:DSP/Inc/arm_math.h ****   const arm_biquad_cascade_stereo_df2T_instance_f32 * S,
3640:DSP/Inc/arm_math.h ****   float32_t * pSrc,
3641:DSP/Inc/arm_math.h ****   float32_t * pDst,
3642:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3643:DSP/Inc/arm_math.h **** 
3644:DSP/Inc/arm_math.h **** 
3645:DSP/Inc/arm_math.h ****   /**
3646:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3647:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3648:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3649:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data
3650:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3651:DSP/Inc/arm_math.h ****    */
3652:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df2T_f64(
3653:DSP/Inc/arm_math.h ****   const arm_biquad_cascade_df2T_instance_f64 * S,
3654:DSP/Inc/arm_math.h ****   float64_t * pSrc,
3655:DSP/Inc/arm_math.h ****   float64_t * pDst,
3656:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3657:DSP/Inc/arm_math.h **** 
3658:DSP/Inc/arm_math.h **** 
3659:DSP/Inc/arm_math.h ****   /**
3660:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3661:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3662:DSP/Inc/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3663:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3664:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3665:DSP/Inc/arm_math.h ****    */
3666:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df2T_init_f32(
3667:DSP/Inc/arm_math.h ****   arm_biquad_cascade_df2T_instance_f32 * S,
3668:DSP/Inc/arm_math.h ****   uint8_t numStages,
3669:DSP/Inc/arm_math.h ****   float32_t * pCoeffs,
3670:DSP/Inc/arm_math.h ****   float32_t * pState);
3671:DSP/Inc/arm_math.h **** 
3672:DSP/Inc/arm_math.h **** 
3673:DSP/Inc/arm_math.h ****   /**
3674:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3675:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3676:DSP/Inc/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3677:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3678:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3679:DSP/Inc/arm_math.h ****    */
3680:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_stereo_df2T_init_f32(
3681:DSP/Inc/arm_math.h ****   arm_biquad_cascade_stereo_df2T_instance_f32 * S,
3682:DSP/Inc/arm_math.h ****   uint8_t numStages,
3683:DSP/Inc/arm_math.h ****   float32_t * pCoeffs,
3684:DSP/Inc/arm_math.h ****   float32_t * pState);
3685:DSP/Inc/arm_math.h **** 
3686:DSP/Inc/arm_math.h **** 
3687:DSP/Inc/arm_math.h ****   /**
3688:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3689:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3690:DSP/Inc/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3691:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3692:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3693:DSP/Inc/arm_math.h ****    */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 86


3694:DSP/Inc/arm_math.h ****   void arm_biquad_cascade_df2T_init_f64(
3695:DSP/Inc/arm_math.h ****   arm_biquad_cascade_df2T_instance_f64 * S,
3696:DSP/Inc/arm_math.h ****   uint8_t numStages,
3697:DSP/Inc/arm_math.h ****   float64_t * pCoeffs,
3698:DSP/Inc/arm_math.h ****   float64_t * pState);
3699:DSP/Inc/arm_math.h **** 
3700:DSP/Inc/arm_math.h **** 
3701:DSP/Inc/arm_math.h ****   /**
3702:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 FIR lattice filter.
3703:DSP/Inc/arm_math.h ****    */
3704:DSP/Inc/arm_math.h ****   typedef struct
3705:DSP/Inc/arm_math.h ****   {
3706:DSP/Inc/arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3707:DSP/Inc/arm_math.h ****     q15_t *pState;                       /**< points to the state variable array. The array is of l
3708:DSP/Inc/arm_math.h ****     q15_t *pCoeffs;                      /**< points to the coefficient array. The array is of leng
3709:DSP/Inc/arm_math.h ****   } arm_fir_lattice_instance_q15;
3710:DSP/Inc/arm_math.h **** 
3711:DSP/Inc/arm_math.h ****   /**
3712:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 FIR lattice filter.
3713:DSP/Inc/arm_math.h ****    */
3714:DSP/Inc/arm_math.h ****   typedef struct
3715:DSP/Inc/arm_math.h ****   {
3716:DSP/Inc/arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3717:DSP/Inc/arm_math.h ****     q31_t *pState;                       /**< points to the state variable array. The array is of l
3718:DSP/Inc/arm_math.h ****     q31_t *pCoeffs;                      /**< points to the coefficient array. The array is of leng
3719:DSP/Inc/arm_math.h ****   } arm_fir_lattice_instance_q31;
3720:DSP/Inc/arm_math.h **** 
3721:DSP/Inc/arm_math.h ****   /**
3722:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point FIR lattice filter.
3723:DSP/Inc/arm_math.h ****    */
3724:DSP/Inc/arm_math.h ****   typedef struct
3725:DSP/Inc/arm_math.h ****   {
3726:DSP/Inc/arm_math.h ****     uint16_t numStages;                  /**< number of filter stages. */
3727:DSP/Inc/arm_math.h ****     float32_t *pState;                   /**< points to the state variable array. The array is of l
3728:DSP/Inc/arm_math.h ****     float32_t *pCoeffs;                  /**< points to the coefficient array. The array is of leng
3729:DSP/Inc/arm_math.h ****   } arm_fir_lattice_instance_f32;
3730:DSP/Inc/arm_math.h **** 
3731:DSP/Inc/arm_math.h **** 
3732:DSP/Inc/arm_math.h ****   /**
3733:DSP/Inc/arm_math.h ****    * @brief Initialization function for the Q15 FIR lattice filter.
3734:DSP/Inc/arm_math.h ****    * @param[in] S          points to an instance of the Q15 FIR lattice structure.
3735:DSP/Inc/arm_math.h ****    * @param[in] numStages  number of filter stages.
3736:DSP/Inc/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3737:DSP/Inc/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages.
3738:DSP/Inc/arm_math.h ****    */
3739:DSP/Inc/arm_math.h ****   void arm_fir_lattice_init_q15(
3740:DSP/Inc/arm_math.h ****   arm_fir_lattice_instance_q15 * S,
3741:DSP/Inc/arm_math.h ****   uint16_t numStages,
3742:DSP/Inc/arm_math.h ****   q15_t * pCoeffs,
3743:DSP/Inc/arm_math.h ****   q15_t * pState);
3744:DSP/Inc/arm_math.h **** 
3745:DSP/Inc/arm_math.h **** 
3746:DSP/Inc/arm_math.h ****   /**
3747:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q15 FIR lattice filter.
3748:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR lattice structure.
3749:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3750:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 87


3751:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3752:DSP/Inc/arm_math.h ****    */
3753:DSP/Inc/arm_math.h ****   void arm_fir_lattice_q15(
3754:DSP/Inc/arm_math.h ****   const arm_fir_lattice_instance_q15 * S,
3755:DSP/Inc/arm_math.h ****   q15_t * pSrc,
3756:DSP/Inc/arm_math.h ****   q15_t * pDst,
3757:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3758:DSP/Inc/arm_math.h **** 
3759:DSP/Inc/arm_math.h **** 
3760:DSP/Inc/arm_math.h ****   /**
3761:DSP/Inc/arm_math.h ****    * @brief Initialization function for the Q31 FIR lattice filter.
3762:DSP/Inc/arm_math.h ****    * @param[in] S          points to an instance of the Q31 FIR lattice structure.
3763:DSP/Inc/arm_math.h ****    * @param[in] numStages  number of filter stages.
3764:DSP/Inc/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3765:DSP/Inc/arm_math.h ****    * @param[in] pState     points to the state buffer.   The array is of length numStages.
3766:DSP/Inc/arm_math.h ****    */
3767:DSP/Inc/arm_math.h ****   void arm_fir_lattice_init_q31(
3768:DSP/Inc/arm_math.h ****   arm_fir_lattice_instance_q31 * S,
3769:DSP/Inc/arm_math.h ****   uint16_t numStages,
3770:DSP/Inc/arm_math.h ****   q31_t * pCoeffs,
3771:DSP/Inc/arm_math.h ****   q31_t * pState);
3772:DSP/Inc/arm_math.h **** 
3773:DSP/Inc/arm_math.h **** 
3774:DSP/Inc/arm_math.h ****   /**
3775:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q31 FIR lattice filter.
3776:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR lattice structure.
3777:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3778:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data
3779:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3780:DSP/Inc/arm_math.h ****    */
3781:DSP/Inc/arm_math.h ****   void arm_fir_lattice_q31(
3782:DSP/Inc/arm_math.h ****   const arm_fir_lattice_instance_q31 * S,
3783:DSP/Inc/arm_math.h ****   q31_t * pSrc,
3784:DSP/Inc/arm_math.h ****   q31_t * pDst,
3785:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3786:DSP/Inc/arm_math.h **** 
3787:DSP/Inc/arm_math.h **** 
3788:DSP/Inc/arm_math.h **** /**
3789:DSP/Inc/arm_math.h ****  * @brief Initialization function for the floating-point FIR lattice filter.
3790:DSP/Inc/arm_math.h ****  * @param[in] S          points to an instance of the floating-point FIR lattice structure.
3791:DSP/Inc/arm_math.h ****  * @param[in] numStages  number of filter stages.
3792:DSP/Inc/arm_math.h ****  * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3793:DSP/Inc/arm_math.h ****  * @param[in] pState     points to the state buffer.  The array is of length numStages.
3794:DSP/Inc/arm_math.h ****  */
3795:DSP/Inc/arm_math.h ****   void arm_fir_lattice_init_f32(
3796:DSP/Inc/arm_math.h ****   arm_fir_lattice_instance_f32 * S,
3797:DSP/Inc/arm_math.h ****   uint16_t numStages,
3798:DSP/Inc/arm_math.h ****   float32_t * pCoeffs,
3799:DSP/Inc/arm_math.h ****   float32_t * pState);
3800:DSP/Inc/arm_math.h **** 
3801:DSP/Inc/arm_math.h **** 
3802:DSP/Inc/arm_math.h ****   /**
3803:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point FIR lattice filter.
3804:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR lattice structure.
3805:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3806:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data
3807:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 88


3808:DSP/Inc/arm_math.h ****    */
3809:DSP/Inc/arm_math.h ****   void arm_fir_lattice_f32(
3810:DSP/Inc/arm_math.h ****   const arm_fir_lattice_instance_f32 * S,
3811:DSP/Inc/arm_math.h ****   float32_t * pSrc,
3812:DSP/Inc/arm_math.h ****   float32_t * pDst,
3813:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3814:DSP/Inc/arm_math.h **** 
3815:DSP/Inc/arm_math.h **** 
3816:DSP/Inc/arm_math.h ****   /**
3817:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 IIR lattice filter.
3818:DSP/Inc/arm_math.h ****    */
3819:DSP/Inc/arm_math.h ****   typedef struct
3820:DSP/Inc/arm_math.h ****   {
3821:DSP/Inc/arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3822:DSP/Inc/arm_math.h ****     q15_t *pState;                       /**< points to the state variable array. The array is of l
3823:DSP/Inc/arm_math.h ****     q15_t *pkCoeffs;                     /**< points to the reflection coefficient array. The array
3824:DSP/Inc/arm_math.h ****     q15_t *pvCoeffs;                     /**< points to the ladder coefficient array. The array is 
3825:DSP/Inc/arm_math.h ****   } arm_iir_lattice_instance_q15;
3826:DSP/Inc/arm_math.h **** 
3827:DSP/Inc/arm_math.h ****   /**
3828:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 IIR lattice filter.
3829:DSP/Inc/arm_math.h ****    */
3830:DSP/Inc/arm_math.h ****   typedef struct
3831:DSP/Inc/arm_math.h ****   {
3832:DSP/Inc/arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3833:DSP/Inc/arm_math.h ****     q31_t *pState;                       /**< points to the state variable array. The array is of l
3834:DSP/Inc/arm_math.h ****     q31_t *pkCoeffs;                     /**< points to the reflection coefficient array. The array
3835:DSP/Inc/arm_math.h ****     q31_t *pvCoeffs;                     /**< points to the ladder coefficient array. The array is 
3836:DSP/Inc/arm_math.h ****   } arm_iir_lattice_instance_q31;
3837:DSP/Inc/arm_math.h **** 
3838:DSP/Inc/arm_math.h ****   /**
3839:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point IIR lattice filter.
3840:DSP/Inc/arm_math.h ****    */
3841:DSP/Inc/arm_math.h ****   typedef struct
3842:DSP/Inc/arm_math.h ****   {
3843:DSP/Inc/arm_math.h ****     uint16_t numStages;                  /**< number of stages in the filter. */
3844:DSP/Inc/arm_math.h ****     float32_t *pState;                   /**< points to the state variable array. The array is of l
3845:DSP/Inc/arm_math.h ****     float32_t *pkCoeffs;                 /**< points to the reflection coefficient array. The array
3846:DSP/Inc/arm_math.h ****     float32_t *pvCoeffs;                 /**< points to the ladder coefficient array. The array is 
3847:DSP/Inc/arm_math.h ****   } arm_iir_lattice_instance_f32;
3848:DSP/Inc/arm_math.h **** 
3849:DSP/Inc/arm_math.h **** 
3850:DSP/Inc/arm_math.h ****   /**
3851:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point IIR lattice filter.
3852:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point IIR lattice structure.
3853:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3854:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3855:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3856:DSP/Inc/arm_math.h ****    */
3857:DSP/Inc/arm_math.h ****   void arm_iir_lattice_f32(
3858:DSP/Inc/arm_math.h ****   const arm_iir_lattice_instance_f32 * S,
3859:DSP/Inc/arm_math.h ****   float32_t * pSrc,
3860:DSP/Inc/arm_math.h ****   float32_t * pDst,
3861:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3862:DSP/Inc/arm_math.h **** 
3863:DSP/Inc/arm_math.h **** 
3864:DSP/Inc/arm_math.h ****   /**
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 89


3865:DSP/Inc/arm_math.h ****    * @brief Initialization function for the floating-point IIR lattice filter.
3866:DSP/Inc/arm_math.h ****    * @param[in] S          points to an instance of the floating-point IIR lattice structure.
3867:DSP/Inc/arm_math.h ****    * @param[in] numStages  number of stages in the filter.
3868:DSP/Inc/arm_math.h ****    * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length num
3869:DSP/Inc/arm_math.h ****    * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStag
3870:DSP/Inc/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize-
3871:DSP/Inc/arm_math.h ****    * @param[in] blockSize  number of samples to process.
3872:DSP/Inc/arm_math.h ****    */
3873:DSP/Inc/arm_math.h ****   void arm_iir_lattice_init_f32(
3874:DSP/Inc/arm_math.h ****   arm_iir_lattice_instance_f32 * S,
3875:DSP/Inc/arm_math.h ****   uint16_t numStages,
3876:DSP/Inc/arm_math.h ****   float32_t * pkCoeffs,
3877:DSP/Inc/arm_math.h ****   float32_t * pvCoeffs,
3878:DSP/Inc/arm_math.h ****   float32_t * pState,
3879:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3880:DSP/Inc/arm_math.h **** 
3881:DSP/Inc/arm_math.h **** 
3882:DSP/Inc/arm_math.h ****   /**
3883:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q31 IIR lattice filter.
3884:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 IIR lattice structure.
3885:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3886:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3887:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3888:DSP/Inc/arm_math.h ****    */
3889:DSP/Inc/arm_math.h ****   void arm_iir_lattice_q31(
3890:DSP/Inc/arm_math.h ****   const arm_iir_lattice_instance_q31 * S,
3891:DSP/Inc/arm_math.h ****   q31_t * pSrc,
3892:DSP/Inc/arm_math.h ****   q31_t * pDst,
3893:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3894:DSP/Inc/arm_math.h **** 
3895:DSP/Inc/arm_math.h **** 
3896:DSP/Inc/arm_math.h ****   /**
3897:DSP/Inc/arm_math.h ****    * @brief Initialization function for the Q31 IIR lattice filter.
3898:DSP/Inc/arm_math.h ****    * @param[in] S          points to an instance of the Q31 IIR lattice structure.
3899:DSP/Inc/arm_math.h ****    * @param[in] numStages  number of stages in the filter.
3900:DSP/Inc/arm_math.h ****    * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length num
3901:DSP/Inc/arm_math.h ****    * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStag
3902:DSP/Inc/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize.
3903:DSP/Inc/arm_math.h ****    * @param[in] blockSize  number of samples to process.
3904:DSP/Inc/arm_math.h ****    */
3905:DSP/Inc/arm_math.h ****   void arm_iir_lattice_init_q31(
3906:DSP/Inc/arm_math.h ****   arm_iir_lattice_instance_q31 * S,
3907:DSP/Inc/arm_math.h ****   uint16_t numStages,
3908:DSP/Inc/arm_math.h ****   q31_t * pkCoeffs,
3909:DSP/Inc/arm_math.h ****   q31_t * pvCoeffs,
3910:DSP/Inc/arm_math.h ****   q31_t * pState,
3911:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3912:DSP/Inc/arm_math.h **** 
3913:DSP/Inc/arm_math.h **** 
3914:DSP/Inc/arm_math.h ****   /**
3915:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q15 IIR lattice filter.
3916:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 IIR lattice structure.
3917:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3918:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3919:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3920:DSP/Inc/arm_math.h ****    */
3921:DSP/Inc/arm_math.h ****   void arm_iir_lattice_q15(
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 90


3922:DSP/Inc/arm_math.h ****   const arm_iir_lattice_instance_q15 * S,
3923:DSP/Inc/arm_math.h ****   q15_t * pSrc,
3924:DSP/Inc/arm_math.h ****   q15_t * pDst,
3925:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3926:DSP/Inc/arm_math.h **** 
3927:DSP/Inc/arm_math.h **** 
3928:DSP/Inc/arm_math.h **** /**
3929:DSP/Inc/arm_math.h ****  * @brief Initialization function for the Q15 IIR lattice filter.
3930:DSP/Inc/arm_math.h ****  * @param[in] S          points to an instance of the fixed-point Q15 IIR lattice structure.
3931:DSP/Inc/arm_math.h ****  * @param[in] numStages  number of stages in the filter.
3932:DSP/Inc/arm_math.h ****  * @param[in] pkCoeffs   points to reflection coefficient buffer.  The array is of length numStages
3933:DSP/Inc/arm_math.h ****  * @param[in] pvCoeffs   points to ladder coefficient buffer.  The array is of length numStages+1.
3934:DSP/Inc/arm_math.h ****  * @param[in] pState     points to state buffer.  The array is of length numStages+blockSize.
3935:DSP/Inc/arm_math.h ****  * @param[in] blockSize  number of samples to process per call.
3936:DSP/Inc/arm_math.h ****  */
3937:DSP/Inc/arm_math.h ****   void arm_iir_lattice_init_q15(
3938:DSP/Inc/arm_math.h ****   arm_iir_lattice_instance_q15 * S,
3939:DSP/Inc/arm_math.h ****   uint16_t numStages,
3940:DSP/Inc/arm_math.h ****   q15_t * pkCoeffs,
3941:DSP/Inc/arm_math.h ****   q15_t * pvCoeffs,
3942:DSP/Inc/arm_math.h ****   q15_t * pState,
3943:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3944:DSP/Inc/arm_math.h **** 
3945:DSP/Inc/arm_math.h **** 
3946:DSP/Inc/arm_math.h ****   /**
3947:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point LMS filter.
3948:DSP/Inc/arm_math.h ****    */
3949:DSP/Inc/arm_math.h ****   typedef struct
3950:DSP/Inc/arm_math.h ****   {
3951:DSP/Inc/arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
3952:DSP/Inc/arm_math.h ****     float32_t *pState;   /**< points to the state variable array. The array is of length numTaps+bl
3953:DSP/Inc/arm_math.h ****     float32_t *pCoeffs;  /**< points to the coefficient array. The array is of length numTaps. */
3954:DSP/Inc/arm_math.h ****     float32_t mu;        /**< step size that controls filter coefficient updates. */
3955:DSP/Inc/arm_math.h ****   } arm_lms_instance_f32;
3956:DSP/Inc/arm_math.h **** 
3957:DSP/Inc/arm_math.h **** 
3958:DSP/Inc/arm_math.h ****   /**
3959:DSP/Inc/arm_math.h ****    * @brief Processing function for floating-point LMS filter.
3960:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point LMS filter structure.
3961:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3962:DSP/Inc/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
3963:DSP/Inc/arm_math.h ****    * @param[out] pOut       points to the block of output data.
3964:DSP/Inc/arm_math.h ****    * @param[out] pErr       points to the block of error data.
3965:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3966:DSP/Inc/arm_math.h ****    */
3967:DSP/Inc/arm_math.h ****   void arm_lms_f32(
3968:DSP/Inc/arm_math.h ****   const arm_lms_instance_f32 * S,
3969:DSP/Inc/arm_math.h ****   float32_t * pSrc,
3970:DSP/Inc/arm_math.h ****   float32_t * pRef,
3971:DSP/Inc/arm_math.h ****   float32_t * pOut,
3972:DSP/Inc/arm_math.h ****   float32_t * pErr,
3973:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3974:DSP/Inc/arm_math.h **** 
3975:DSP/Inc/arm_math.h **** 
3976:DSP/Inc/arm_math.h ****   /**
3977:DSP/Inc/arm_math.h ****    * @brief Initialization function for floating-point LMS filter.
3978:DSP/Inc/arm_math.h ****    * @param[in] S          points to an instance of the floating-point LMS filter structure.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 91


3979:DSP/Inc/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
3980:DSP/Inc/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.
3981:DSP/Inc/arm_math.h ****    * @param[in] pState     points to state buffer.
3982:DSP/Inc/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
3983:DSP/Inc/arm_math.h ****    * @param[in] blockSize  number of samples to process.
3984:DSP/Inc/arm_math.h ****    */
3985:DSP/Inc/arm_math.h ****   void arm_lms_init_f32(
3986:DSP/Inc/arm_math.h ****   arm_lms_instance_f32 * S,
3987:DSP/Inc/arm_math.h ****   uint16_t numTaps,
3988:DSP/Inc/arm_math.h ****   float32_t * pCoeffs,
3989:DSP/Inc/arm_math.h ****   float32_t * pState,
3990:DSP/Inc/arm_math.h ****   float32_t mu,
3991:DSP/Inc/arm_math.h ****   uint32_t blockSize);
3992:DSP/Inc/arm_math.h **** 
3993:DSP/Inc/arm_math.h **** 
3994:DSP/Inc/arm_math.h ****   /**
3995:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 LMS filter.
3996:DSP/Inc/arm_math.h ****    */
3997:DSP/Inc/arm_math.h ****   typedef struct
3998:DSP/Inc/arm_math.h ****   {
3999:DSP/Inc/arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
4000:DSP/Inc/arm_math.h ****     q15_t *pState;       /**< points to the state variable array. The array is of length numTaps+bl
4001:DSP/Inc/arm_math.h ****     q15_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps. */
4002:DSP/Inc/arm_math.h ****     q15_t mu;            /**< step size that controls filter coefficient updates. */
4003:DSP/Inc/arm_math.h ****     uint32_t postShift;  /**< bit shift applied to coefficients. */
4004:DSP/Inc/arm_math.h ****   } arm_lms_instance_q15;
4005:DSP/Inc/arm_math.h **** 
4006:DSP/Inc/arm_math.h **** 
4007:DSP/Inc/arm_math.h ****   /**
4008:DSP/Inc/arm_math.h ****    * @brief Initialization function for the Q15 LMS filter.
4009:DSP/Inc/arm_math.h ****    * @param[in] S          points to an instance of the Q15 LMS filter structure.
4010:DSP/Inc/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4011:DSP/Inc/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.
4012:DSP/Inc/arm_math.h ****    * @param[in] pState     points to the state buffer.
4013:DSP/Inc/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4014:DSP/Inc/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4015:DSP/Inc/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4016:DSP/Inc/arm_math.h ****    */
4017:DSP/Inc/arm_math.h ****   void arm_lms_init_q15(
4018:DSP/Inc/arm_math.h ****   arm_lms_instance_q15 * S,
4019:DSP/Inc/arm_math.h ****   uint16_t numTaps,
4020:DSP/Inc/arm_math.h ****   q15_t * pCoeffs,
4021:DSP/Inc/arm_math.h ****   q15_t * pState,
4022:DSP/Inc/arm_math.h ****   q15_t mu,
4023:DSP/Inc/arm_math.h ****   uint32_t blockSize,
4024:DSP/Inc/arm_math.h ****   uint32_t postShift);
4025:DSP/Inc/arm_math.h **** 
4026:DSP/Inc/arm_math.h **** 
4027:DSP/Inc/arm_math.h ****   /**
4028:DSP/Inc/arm_math.h ****    * @brief Processing function for Q15 LMS filter.
4029:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 LMS filter structure.
4030:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4031:DSP/Inc/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4032:DSP/Inc/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4033:DSP/Inc/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4034:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4035:DSP/Inc/arm_math.h ****    */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 92


4036:DSP/Inc/arm_math.h ****   void arm_lms_q15(
4037:DSP/Inc/arm_math.h ****   const arm_lms_instance_q15 * S,
4038:DSP/Inc/arm_math.h ****   q15_t * pSrc,
4039:DSP/Inc/arm_math.h ****   q15_t * pRef,
4040:DSP/Inc/arm_math.h ****   q15_t * pOut,
4041:DSP/Inc/arm_math.h ****   q15_t * pErr,
4042:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4043:DSP/Inc/arm_math.h **** 
4044:DSP/Inc/arm_math.h **** 
4045:DSP/Inc/arm_math.h ****   /**
4046:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 LMS filter.
4047:DSP/Inc/arm_math.h ****    */
4048:DSP/Inc/arm_math.h ****   typedef struct
4049:DSP/Inc/arm_math.h ****   {
4050:DSP/Inc/arm_math.h ****     uint16_t numTaps;    /**< number of coefficients in the filter. */
4051:DSP/Inc/arm_math.h ****     q31_t *pState;       /**< points to the state variable array. The array is of length numTaps+bl
4052:DSP/Inc/arm_math.h ****     q31_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps. */
4053:DSP/Inc/arm_math.h ****     q31_t mu;            /**< step size that controls filter coefficient updates. */
4054:DSP/Inc/arm_math.h ****     uint32_t postShift;  /**< bit shift applied to coefficients. */
4055:DSP/Inc/arm_math.h ****   } arm_lms_instance_q31;
4056:DSP/Inc/arm_math.h **** 
4057:DSP/Inc/arm_math.h **** 
4058:DSP/Inc/arm_math.h ****   /**
4059:DSP/Inc/arm_math.h ****    * @brief Processing function for Q31 LMS filter.
4060:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 LMS filter structure.
4061:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4062:DSP/Inc/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4063:DSP/Inc/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4064:DSP/Inc/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4065:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4066:DSP/Inc/arm_math.h ****    */
4067:DSP/Inc/arm_math.h ****   void arm_lms_q31(
4068:DSP/Inc/arm_math.h ****   const arm_lms_instance_q31 * S,
4069:DSP/Inc/arm_math.h ****   q31_t * pSrc,
4070:DSP/Inc/arm_math.h ****   q31_t * pRef,
4071:DSP/Inc/arm_math.h ****   q31_t * pOut,
4072:DSP/Inc/arm_math.h ****   q31_t * pErr,
4073:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4074:DSP/Inc/arm_math.h **** 
4075:DSP/Inc/arm_math.h **** 
4076:DSP/Inc/arm_math.h ****   /**
4077:DSP/Inc/arm_math.h ****    * @brief Initialization function for Q31 LMS filter.
4078:DSP/Inc/arm_math.h ****    * @param[in] S          points to an instance of the Q31 LMS filter structure.
4079:DSP/Inc/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4080:DSP/Inc/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4081:DSP/Inc/arm_math.h ****    * @param[in] pState     points to state buffer.
4082:DSP/Inc/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4083:DSP/Inc/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4084:DSP/Inc/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4085:DSP/Inc/arm_math.h ****    */
4086:DSP/Inc/arm_math.h ****   void arm_lms_init_q31(
4087:DSP/Inc/arm_math.h ****   arm_lms_instance_q31 * S,
4088:DSP/Inc/arm_math.h ****   uint16_t numTaps,
4089:DSP/Inc/arm_math.h ****   q31_t * pCoeffs,
4090:DSP/Inc/arm_math.h ****   q31_t * pState,
4091:DSP/Inc/arm_math.h ****   q31_t mu,
4092:DSP/Inc/arm_math.h ****   uint32_t blockSize,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 93


4093:DSP/Inc/arm_math.h ****   uint32_t postShift);
4094:DSP/Inc/arm_math.h **** 
4095:DSP/Inc/arm_math.h **** 
4096:DSP/Inc/arm_math.h ****   /**
4097:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point normalized LMS filter.
4098:DSP/Inc/arm_math.h ****    */
4099:DSP/Inc/arm_math.h ****   typedef struct
4100:DSP/Inc/arm_math.h ****   {
4101:DSP/Inc/arm_math.h ****     uint16_t numTaps;     /**< number of coefficients in the filter. */
4102:DSP/Inc/arm_math.h ****     float32_t *pState;    /**< points to the state variable array. The array is of length numTaps+b
4103:DSP/Inc/arm_math.h ****     float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTaps. */
4104:DSP/Inc/arm_math.h ****     float32_t mu;         /**< step size that control filter coefficient updates. */
4105:DSP/Inc/arm_math.h ****     float32_t energy;     /**< saves previous frame energy. */
4106:DSP/Inc/arm_math.h ****     float32_t x0;         /**< saves previous input sample. */
4107:DSP/Inc/arm_math.h ****   } arm_lms_norm_instance_f32;
4108:DSP/Inc/arm_math.h **** 
4109:DSP/Inc/arm_math.h **** 
4110:DSP/Inc/arm_math.h ****   /**
4111:DSP/Inc/arm_math.h ****    * @brief Processing function for floating-point normalized LMS filter.
4112:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point normalized LMS filter struc
4113:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4114:DSP/Inc/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4115:DSP/Inc/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4116:DSP/Inc/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4117:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4118:DSP/Inc/arm_math.h ****    */
4119:DSP/Inc/arm_math.h ****   void arm_lms_norm_f32(
4120:DSP/Inc/arm_math.h ****   arm_lms_norm_instance_f32 * S,
4121:DSP/Inc/arm_math.h ****   float32_t * pSrc,
4122:DSP/Inc/arm_math.h ****   float32_t * pRef,
4123:DSP/Inc/arm_math.h ****   float32_t * pOut,
4124:DSP/Inc/arm_math.h ****   float32_t * pErr,
4125:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4126:DSP/Inc/arm_math.h **** 
4127:DSP/Inc/arm_math.h **** 
4128:DSP/Inc/arm_math.h ****   /**
4129:DSP/Inc/arm_math.h ****    * @brief Initialization function for floating-point normalized LMS filter.
4130:DSP/Inc/arm_math.h ****    * @param[in] S          points to an instance of the floating-point LMS filter structure.
4131:DSP/Inc/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4132:DSP/Inc/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4133:DSP/Inc/arm_math.h ****    * @param[in] pState     points to state buffer.
4134:DSP/Inc/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4135:DSP/Inc/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4136:DSP/Inc/arm_math.h ****    */
4137:DSP/Inc/arm_math.h ****   void arm_lms_norm_init_f32(
4138:DSP/Inc/arm_math.h ****   arm_lms_norm_instance_f32 * S,
4139:DSP/Inc/arm_math.h ****   uint16_t numTaps,
4140:DSP/Inc/arm_math.h ****   float32_t * pCoeffs,
4141:DSP/Inc/arm_math.h ****   float32_t * pState,
4142:DSP/Inc/arm_math.h ****   float32_t mu,
4143:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4144:DSP/Inc/arm_math.h **** 
4145:DSP/Inc/arm_math.h **** 
4146:DSP/Inc/arm_math.h ****   /**
4147:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 normalized LMS filter.
4148:DSP/Inc/arm_math.h ****    */
4149:DSP/Inc/arm_math.h ****   typedef struct
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 94


4150:DSP/Inc/arm_math.h ****   {
4151:DSP/Inc/arm_math.h ****     uint16_t numTaps;     /**< number of coefficients in the filter. */
4152:DSP/Inc/arm_math.h ****     q31_t *pState;        /**< points to the state variable array. The array is of length numTaps+b
4153:DSP/Inc/arm_math.h ****     q31_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTaps. */
4154:DSP/Inc/arm_math.h ****     q31_t mu;             /**< step size that controls filter coefficient updates. */
4155:DSP/Inc/arm_math.h ****     uint8_t postShift;    /**< bit shift applied to coefficients. */
4156:DSP/Inc/arm_math.h ****     q31_t *recipTable;    /**< points to the reciprocal initial value table. */
4157:DSP/Inc/arm_math.h ****     q31_t energy;         /**< saves previous frame energy. */
4158:DSP/Inc/arm_math.h ****     q31_t x0;             /**< saves previous input sample. */
4159:DSP/Inc/arm_math.h ****   } arm_lms_norm_instance_q31;
4160:DSP/Inc/arm_math.h **** 
4161:DSP/Inc/arm_math.h **** 
4162:DSP/Inc/arm_math.h ****   /**
4163:DSP/Inc/arm_math.h ****    * @brief Processing function for Q31 normalized LMS filter.
4164:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 normalized LMS filter structure.
4165:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4166:DSP/Inc/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4167:DSP/Inc/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4168:DSP/Inc/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4169:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4170:DSP/Inc/arm_math.h ****    */
4171:DSP/Inc/arm_math.h ****   void arm_lms_norm_q31(
4172:DSP/Inc/arm_math.h ****   arm_lms_norm_instance_q31 * S,
4173:DSP/Inc/arm_math.h ****   q31_t * pSrc,
4174:DSP/Inc/arm_math.h ****   q31_t * pRef,
4175:DSP/Inc/arm_math.h ****   q31_t * pOut,
4176:DSP/Inc/arm_math.h ****   q31_t * pErr,
4177:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4178:DSP/Inc/arm_math.h **** 
4179:DSP/Inc/arm_math.h **** 
4180:DSP/Inc/arm_math.h ****   /**
4181:DSP/Inc/arm_math.h ****    * @brief Initialization function for Q31 normalized LMS filter.
4182:DSP/Inc/arm_math.h ****    * @param[in] S          points to an instance of the Q31 normalized LMS filter structure.
4183:DSP/Inc/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4184:DSP/Inc/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4185:DSP/Inc/arm_math.h ****    * @param[in] pState     points to state buffer.
4186:DSP/Inc/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4187:DSP/Inc/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4188:DSP/Inc/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4189:DSP/Inc/arm_math.h ****    */
4190:DSP/Inc/arm_math.h ****   void arm_lms_norm_init_q31(
4191:DSP/Inc/arm_math.h ****   arm_lms_norm_instance_q31 * S,
4192:DSP/Inc/arm_math.h ****   uint16_t numTaps,
4193:DSP/Inc/arm_math.h ****   q31_t * pCoeffs,
4194:DSP/Inc/arm_math.h ****   q31_t * pState,
4195:DSP/Inc/arm_math.h ****   q31_t mu,
4196:DSP/Inc/arm_math.h ****   uint32_t blockSize,
4197:DSP/Inc/arm_math.h ****   uint8_t postShift);
4198:DSP/Inc/arm_math.h **** 
4199:DSP/Inc/arm_math.h **** 
4200:DSP/Inc/arm_math.h ****   /**
4201:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 normalized LMS filter.
4202:DSP/Inc/arm_math.h ****    */
4203:DSP/Inc/arm_math.h ****   typedef struct
4204:DSP/Inc/arm_math.h ****   {
4205:DSP/Inc/arm_math.h ****     uint16_t numTaps;     /**< Number of coefficients in the filter. */
4206:DSP/Inc/arm_math.h ****     q15_t *pState;        /**< points to the state variable array. The array is of length numTaps+b
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 95


4207:DSP/Inc/arm_math.h ****     q15_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTaps. */
4208:DSP/Inc/arm_math.h ****     q15_t mu;             /**< step size that controls filter coefficient updates. */
4209:DSP/Inc/arm_math.h ****     uint8_t postShift;    /**< bit shift applied to coefficients. */
4210:DSP/Inc/arm_math.h ****     q15_t *recipTable;    /**< Points to the reciprocal initial value table. */
4211:DSP/Inc/arm_math.h ****     q15_t energy;         /**< saves previous frame energy. */
4212:DSP/Inc/arm_math.h ****     q15_t x0;             /**< saves previous input sample. */
4213:DSP/Inc/arm_math.h ****   } arm_lms_norm_instance_q15;
4214:DSP/Inc/arm_math.h **** 
4215:DSP/Inc/arm_math.h **** 
4216:DSP/Inc/arm_math.h ****   /**
4217:DSP/Inc/arm_math.h ****    * @brief Processing function for Q15 normalized LMS filter.
4218:DSP/Inc/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 normalized LMS filter structure.
4219:DSP/Inc/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4220:DSP/Inc/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4221:DSP/Inc/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4222:DSP/Inc/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4223:DSP/Inc/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4224:DSP/Inc/arm_math.h ****    */
4225:DSP/Inc/arm_math.h ****   void arm_lms_norm_q15(
4226:DSP/Inc/arm_math.h ****   arm_lms_norm_instance_q15 * S,
4227:DSP/Inc/arm_math.h ****   q15_t * pSrc,
4228:DSP/Inc/arm_math.h ****   q15_t * pRef,
4229:DSP/Inc/arm_math.h ****   q15_t * pOut,
4230:DSP/Inc/arm_math.h ****   q15_t * pErr,
4231:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4232:DSP/Inc/arm_math.h **** 
4233:DSP/Inc/arm_math.h **** 
4234:DSP/Inc/arm_math.h ****   /**
4235:DSP/Inc/arm_math.h ****    * @brief Initialization function for Q15 normalized LMS filter.
4236:DSP/Inc/arm_math.h ****    * @param[in] S          points to an instance of the Q15 normalized LMS filter structure.
4237:DSP/Inc/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4238:DSP/Inc/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4239:DSP/Inc/arm_math.h ****    * @param[in] pState     points to state buffer.
4240:DSP/Inc/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4241:DSP/Inc/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4242:DSP/Inc/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4243:DSP/Inc/arm_math.h ****    */
4244:DSP/Inc/arm_math.h ****   void arm_lms_norm_init_q15(
4245:DSP/Inc/arm_math.h ****   arm_lms_norm_instance_q15 * S,
4246:DSP/Inc/arm_math.h ****   uint16_t numTaps,
4247:DSP/Inc/arm_math.h ****   q15_t * pCoeffs,
4248:DSP/Inc/arm_math.h ****   q15_t * pState,
4249:DSP/Inc/arm_math.h ****   q15_t mu,
4250:DSP/Inc/arm_math.h ****   uint32_t blockSize,
4251:DSP/Inc/arm_math.h ****   uint8_t postShift);
4252:DSP/Inc/arm_math.h **** 
4253:DSP/Inc/arm_math.h **** 
4254:DSP/Inc/arm_math.h ****   /**
4255:DSP/Inc/arm_math.h ****    * @brief Correlation of floating-point sequences.
4256:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4257:DSP/Inc/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4258:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4259:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4260:DSP/Inc/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4261:DSP/Inc/arm_math.h ****    */
4262:DSP/Inc/arm_math.h ****   void arm_correlate_f32(
4263:DSP/Inc/arm_math.h ****   float32_t * pSrcA,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 96


4264:DSP/Inc/arm_math.h ****   uint32_t srcALen,
4265:DSP/Inc/arm_math.h ****   float32_t * pSrcB,
4266:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
4267:DSP/Inc/arm_math.h ****   float32_t * pDst);
4268:DSP/Inc/arm_math.h **** 
4269:DSP/Inc/arm_math.h **** 
4270:DSP/Inc/arm_math.h ****    /**
4271:DSP/Inc/arm_math.h ****    * @brief Correlation of Q15 sequences
4272:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA     points to the first input sequence.
4273:DSP/Inc/arm_math.h ****    * @param[in]  srcALen   length of the first input sequence.
4274:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB     points to the second input sequence.
4275:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen   length of the second input sequence.
4276:DSP/Inc/arm_math.h ****    * @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1
4277:DSP/Inc/arm_math.h ****    * @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, 
4278:DSP/Inc/arm_math.h ****    */
4279:DSP/Inc/arm_math.h ****   void arm_correlate_opt_q15(
4280:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
4281:DSP/Inc/arm_math.h ****   uint32_t srcALen,
4282:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
4283:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
4284:DSP/Inc/arm_math.h ****   q15_t * pDst,
4285:DSP/Inc/arm_math.h ****   q15_t * pScratch);
4286:DSP/Inc/arm_math.h **** 
4287:DSP/Inc/arm_math.h **** 
4288:DSP/Inc/arm_math.h ****   /**
4289:DSP/Inc/arm_math.h ****    * @brief Correlation of Q15 sequences.
4290:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4291:DSP/Inc/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4292:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4293:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4294:DSP/Inc/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4295:DSP/Inc/arm_math.h ****    */
4296:DSP/Inc/arm_math.h **** 
4297:DSP/Inc/arm_math.h ****   void arm_correlate_q15(
4298:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
4299:DSP/Inc/arm_math.h ****   uint32_t srcALen,
4300:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
4301:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
4302:DSP/Inc/arm_math.h ****   q15_t * pDst);
4303:DSP/Inc/arm_math.h **** 
4304:DSP/Inc/arm_math.h **** 
4305:DSP/Inc/arm_math.h ****   /**
4306:DSP/Inc/arm_math.h ****    * @brief Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
4307:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4308:DSP/Inc/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4309:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4310:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4311:DSP/Inc/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4312:DSP/Inc/arm_math.h ****    */
4313:DSP/Inc/arm_math.h **** 
4314:DSP/Inc/arm_math.h ****   void arm_correlate_fast_q15(
4315:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
4316:DSP/Inc/arm_math.h ****   uint32_t srcALen,
4317:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
4318:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
4319:DSP/Inc/arm_math.h ****   q15_t * pDst);
4320:DSP/Inc/arm_math.h **** 
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 97


4321:DSP/Inc/arm_math.h **** 
4322:DSP/Inc/arm_math.h ****   /**
4323:DSP/Inc/arm_math.h ****    * @brief Correlation of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4.
4324:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA     points to the first input sequence.
4325:DSP/Inc/arm_math.h ****    * @param[in]  srcALen   length of the first input sequence.
4326:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB     points to the second input sequence.
4327:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen   length of the second input sequence.
4328:DSP/Inc/arm_math.h ****    * @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1
4329:DSP/Inc/arm_math.h ****    * @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, 
4330:DSP/Inc/arm_math.h ****    */
4331:DSP/Inc/arm_math.h ****   void arm_correlate_fast_opt_q15(
4332:DSP/Inc/arm_math.h ****   q15_t * pSrcA,
4333:DSP/Inc/arm_math.h ****   uint32_t srcALen,
4334:DSP/Inc/arm_math.h ****   q15_t * pSrcB,
4335:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
4336:DSP/Inc/arm_math.h ****   q15_t * pDst,
4337:DSP/Inc/arm_math.h ****   q15_t * pScratch);
4338:DSP/Inc/arm_math.h **** 
4339:DSP/Inc/arm_math.h **** 
4340:DSP/Inc/arm_math.h ****   /**
4341:DSP/Inc/arm_math.h ****    * @brief Correlation of Q31 sequences.
4342:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4343:DSP/Inc/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4344:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4345:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4346:DSP/Inc/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4347:DSP/Inc/arm_math.h ****    */
4348:DSP/Inc/arm_math.h ****   void arm_correlate_q31(
4349:DSP/Inc/arm_math.h ****   q31_t * pSrcA,
4350:DSP/Inc/arm_math.h ****   uint32_t srcALen,
4351:DSP/Inc/arm_math.h ****   q31_t * pSrcB,
4352:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
4353:DSP/Inc/arm_math.h ****   q31_t * pDst);
4354:DSP/Inc/arm_math.h **** 
4355:DSP/Inc/arm_math.h **** 
4356:DSP/Inc/arm_math.h ****   /**
4357:DSP/Inc/arm_math.h ****    * @brief Correlation of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
4358:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4359:DSP/Inc/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4360:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4361:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4362:DSP/Inc/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4363:DSP/Inc/arm_math.h ****    */
4364:DSP/Inc/arm_math.h ****   void arm_correlate_fast_q31(
4365:DSP/Inc/arm_math.h ****   q31_t * pSrcA,
4366:DSP/Inc/arm_math.h ****   uint32_t srcALen,
4367:DSP/Inc/arm_math.h ****   q31_t * pSrcB,
4368:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
4369:DSP/Inc/arm_math.h ****   q31_t * pDst);
4370:DSP/Inc/arm_math.h **** 
4371:DSP/Inc/arm_math.h **** 
4372:DSP/Inc/arm_math.h ****  /**
4373:DSP/Inc/arm_math.h ****    * @brief Correlation of Q7 sequences.
4374:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
4375:DSP/Inc/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
4376:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
4377:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 98


4378:DSP/Inc/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length 2 * max(srcALen, srcBLen) - 
4379:DSP/Inc/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
4380:DSP/Inc/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
4381:DSP/Inc/arm_math.h ****    */
4382:DSP/Inc/arm_math.h ****   void arm_correlate_opt_q7(
4383:DSP/Inc/arm_math.h ****   q7_t * pSrcA,
4384:DSP/Inc/arm_math.h ****   uint32_t srcALen,
4385:DSP/Inc/arm_math.h ****   q7_t * pSrcB,
4386:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
4387:DSP/Inc/arm_math.h ****   q7_t * pDst,
4388:DSP/Inc/arm_math.h ****   q15_t * pScratch1,
4389:DSP/Inc/arm_math.h ****   q15_t * pScratch2);
4390:DSP/Inc/arm_math.h **** 
4391:DSP/Inc/arm_math.h **** 
4392:DSP/Inc/arm_math.h ****   /**
4393:DSP/Inc/arm_math.h ****    * @brief Correlation of Q7 sequences.
4394:DSP/Inc/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4395:DSP/Inc/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4396:DSP/Inc/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4397:DSP/Inc/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4398:DSP/Inc/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4399:DSP/Inc/arm_math.h ****    */
4400:DSP/Inc/arm_math.h ****   void arm_correlate_q7(
4401:DSP/Inc/arm_math.h ****   q7_t * pSrcA,
4402:DSP/Inc/arm_math.h ****   uint32_t srcALen,
4403:DSP/Inc/arm_math.h ****   q7_t * pSrcB,
4404:DSP/Inc/arm_math.h ****   uint32_t srcBLen,
4405:DSP/Inc/arm_math.h ****   q7_t * pDst);
4406:DSP/Inc/arm_math.h **** 
4407:DSP/Inc/arm_math.h **** 
4408:DSP/Inc/arm_math.h ****   /**
4409:DSP/Inc/arm_math.h ****    * @brief Instance structure for the floating-point sparse FIR filter.
4410:DSP/Inc/arm_math.h ****    */
4411:DSP/Inc/arm_math.h ****   typedef struct
4412:DSP/Inc/arm_math.h ****   {
4413:DSP/Inc/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4414:DSP/Inc/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4415:DSP/Inc/arm_math.h ****     float32_t *pState;            /**< points to the state buffer array. The array is of length max
4416:DSP/Inc/arm_math.h ****     float32_t *pCoeffs;           /**< points to the coefficient array. The array is of length numT
4417:DSP/Inc/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4418:DSP/Inc/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4419:DSP/Inc/arm_math.h ****   } arm_fir_sparse_instance_f32;
4420:DSP/Inc/arm_math.h **** 
4421:DSP/Inc/arm_math.h ****   /**
4422:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q31 sparse FIR filter.
4423:DSP/Inc/arm_math.h ****    */
4424:DSP/Inc/arm_math.h ****   typedef struct
4425:DSP/Inc/arm_math.h ****   {
4426:DSP/Inc/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4427:DSP/Inc/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4428:DSP/Inc/arm_math.h ****     q31_t *pState;                /**< points to the state buffer array. The array is of length max
4429:DSP/Inc/arm_math.h ****     q31_t *pCoeffs;               /**< points to the coefficient array. The array is of length numT
4430:DSP/Inc/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4431:DSP/Inc/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4432:DSP/Inc/arm_math.h ****   } arm_fir_sparse_instance_q31;
4433:DSP/Inc/arm_math.h **** 
4434:DSP/Inc/arm_math.h ****   /**
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 99


4435:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q15 sparse FIR filter.
4436:DSP/Inc/arm_math.h ****    */
4437:DSP/Inc/arm_math.h ****   typedef struct
4438:DSP/Inc/arm_math.h ****   {
4439:DSP/Inc/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4440:DSP/Inc/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4441:DSP/Inc/arm_math.h ****     q15_t *pState;                /**< points to the state buffer array. The array is of length max
4442:DSP/Inc/arm_math.h ****     q15_t *pCoeffs;               /**< points to the coefficient array. The array is of length numT
4443:DSP/Inc/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4444:DSP/Inc/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4445:DSP/Inc/arm_math.h ****   } arm_fir_sparse_instance_q15;
4446:DSP/Inc/arm_math.h **** 
4447:DSP/Inc/arm_math.h ****   /**
4448:DSP/Inc/arm_math.h ****    * @brief Instance structure for the Q7 sparse FIR filter.
4449:DSP/Inc/arm_math.h ****    */
4450:DSP/Inc/arm_math.h ****   typedef struct
4451:DSP/Inc/arm_math.h ****   {
4452:DSP/Inc/arm_math.h ****     uint16_t numTaps;             /**< number of coefficients in the filter. */
4453:DSP/Inc/arm_math.h ****     uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in the stat
4454:DSP/Inc/arm_math.h ****     q7_t *pState;                 /**< points to the state buffer array. The array is of length max
4455:DSP/Inc/arm_math.h ****     q7_t *pCoeffs;                /**< points to the coefficient array. The array is of length numT
4456:DSP/Inc/arm_math.h ****     uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4457:DSP/Inc/arm_math.h ****     int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of length
4458:DSP/Inc/arm_math.h ****   } arm_fir_sparse_instance_q7;
4459:DSP/Inc/arm_math.h **** 
4460:DSP/Inc/arm_math.h **** 
4461:DSP/Inc/arm_math.h ****   /**
4462:DSP/Inc/arm_math.h ****    * @brief Processing function for the floating-point sparse FIR filter.
4463:DSP/Inc/arm_math.h ****    * @param[in]  S           points to an instance of the floating-point sparse FIR structure.
4464:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the block of input data.
4465:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
4466:DSP/Inc/arm_math.h ****    * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
4467:DSP/Inc/arm_math.h ****    * @param[in]  blockSize   number of input samples to process per call.
4468:DSP/Inc/arm_math.h ****    */
4469:DSP/Inc/arm_math.h ****   void arm_fir_sparse_f32(
4470:DSP/Inc/arm_math.h ****   arm_fir_sparse_instance_f32 * S,
4471:DSP/Inc/arm_math.h ****   float32_t * pSrc,
4472:DSP/Inc/arm_math.h ****   float32_t * pDst,
4473:DSP/Inc/arm_math.h ****   float32_t * pScratchIn,
4474:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4475:DSP/Inc/arm_math.h **** 
4476:DSP/Inc/arm_math.h **** 
4477:DSP/Inc/arm_math.h ****   /**
4478:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the floating-point sparse FIR filter.
4479:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point sparse FIR structure.
4480:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4481:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4482:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4483:DSP/Inc/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4484:DSP/Inc/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4485:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4486:DSP/Inc/arm_math.h ****    */
4487:DSP/Inc/arm_math.h ****   void arm_fir_sparse_init_f32(
4488:DSP/Inc/arm_math.h ****   arm_fir_sparse_instance_f32 * S,
4489:DSP/Inc/arm_math.h ****   uint16_t numTaps,
4490:DSP/Inc/arm_math.h ****   float32_t * pCoeffs,
4491:DSP/Inc/arm_math.h ****   float32_t * pState,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 100


4492:DSP/Inc/arm_math.h ****   int32_t * pTapDelay,
4493:DSP/Inc/arm_math.h ****   uint16_t maxDelay,
4494:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4495:DSP/Inc/arm_math.h **** 
4496:DSP/Inc/arm_math.h **** 
4497:DSP/Inc/arm_math.h ****   /**
4498:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q31 sparse FIR filter.
4499:DSP/Inc/arm_math.h ****    * @param[in]  S           points to an instance of the Q31 sparse FIR structure.
4500:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the block of input data.
4501:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the block of output data
4502:DSP/Inc/arm_math.h ****    * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
4503:DSP/Inc/arm_math.h ****    * @param[in]  blockSize   number of input samples to process per call.
4504:DSP/Inc/arm_math.h ****    */
4505:DSP/Inc/arm_math.h ****   void arm_fir_sparse_q31(
4506:DSP/Inc/arm_math.h ****   arm_fir_sparse_instance_q31 * S,
4507:DSP/Inc/arm_math.h ****   q31_t * pSrc,
4508:DSP/Inc/arm_math.h ****   q31_t * pDst,
4509:DSP/Inc/arm_math.h ****   q31_t * pScratchIn,
4510:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4511:DSP/Inc/arm_math.h **** 
4512:DSP/Inc/arm_math.h **** 
4513:DSP/Inc/arm_math.h ****   /**
4514:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q31 sparse FIR filter.
4515:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 sparse FIR structure.
4516:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4517:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4518:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4519:DSP/Inc/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4520:DSP/Inc/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4521:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4522:DSP/Inc/arm_math.h ****    */
4523:DSP/Inc/arm_math.h ****   void arm_fir_sparse_init_q31(
4524:DSP/Inc/arm_math.h ****   arm_fir_sparse_instance_q31 * S,
4525:DSP/Inc/arm_math.h ****   uint16_t numTaps,
4526:DSP/Inc/arm_math.h ****   q31_t * pCoeffs,
4527:DSP/Inc/arm_math.h ****   q31_t * pState,
4528:DSP/Inc/arm_math.h ****   int32_t * pTapDelay,
4529:DSP/Inc/arm_math.h ****   uint16_t maxDelay,
4530:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4531:DSP/Inc/arm_math.h **** 
4532:DSP/Inc/arm_math.h **** 
4533:DSP/Inc/arm_math.h ****   /**
4534:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q15 sparse FIR filter.
4535:DSP/Inc/arm_math.h ****    * @param[in]  S            points to an instance of the Q15 sparse FIR structure.
4536:DSP/Inc/arm_math.h ****    * @param[in]  pSrc         points to the block of input data.
4537:DSP/Inc/arm_math.h ****    * @param[out] pDst         points to the block of output data
4538:DSP/Inc/arm_math.h ****    * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
4539:DSP/Inc/arm_math.h ****    * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
4540:DSP/Inc/arm_math.h ****    * @param[in]  blockSize    number of input samples to process per call.
4541:DSP/Inc/arm_math.h ****    */
4542:DSP/Inc/arm_math.h ****   void arm_fir_sparse_q15(
4543:DSP/Inc/arm_math.h ****   arm_fir_sparse_instance_q15 * S,
4544:DSP/Inc/arm_math.h ****   q15_t * pSrc,
4545:DSP/Inc/arm_math.h ****   q15_t * pDst,
4546:DSP/Inc/arm_math.h ****   q15_t * pScratchIn,
4547:DSP/Inc/arm_math.h ****   q31_t * pScratchOut,
4548:DSP/Inc/arm_math.h ****   uint32_t blockSize);
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 101


4549:DSP/Inc/arm_math.h **** 
4550:DSP/Inc/arm_math.h **** 
4551:DSP/Inc/arm_math.h ****   /**
4552:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q15 sparse FIR filter.
4553:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 sparse FIR structure.
4554:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4555:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4556:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4557:DSP/Inc/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4558:DSP/Inc/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4559:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4560:DSP/Inc/arm_math.h ****    */
4561:DSP/Inc/arm_math.h ****   void arm_fir_sparse_init_q15(
4562:DSP/Inc/arm_math.h ****   arm_fir_sparse_instance_q15 * S,
4563:DSP/Inc/arm_math.h ****   uint16_t numTaps,
4564:DSP/Inc/arm_math.h ****   q15_t * pCoeffs,
4565:DSP/Inc/arm_math.h ****   q15_t * pState,
4566:DSP/Inc/arm_math.h ****   int32_t * pTapDelay,
4567:DSP/Inc/arm_math.h ****   uint16_t maxDelay,
4568:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4569:DSP/Inc/arm_math.h **** 
4570:DSP/Inc/arm_math.h **** 
4571:DSP/Inc/arm_math.h ****   /**
4572:DSP/Inc/arm_math.h ****    * @brief Processing function for the Q7 sparse FIR filter.
4573:DSP/Inc/arm_math.h ****    * @param[in]  S            points to an instance of the Q7 sparse FIR structure.
4574:DSP/Inc/arm_math.h ****    * @param[in]  pSrc         points to the block of input data.
4575:DSP/Inc/arm_math.h ****    * @param[out] pDst         points to the block of output data
4576:DSP/Inc/arm_math.h ****    * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
4577:DSP/Inc/arm_math.h ****    * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
4578:DSP/Inc/arm_math.h ****    * @param[in]  blockSize    number of input samples to process per call.
4579:DSP/Inc/arm_math.h ****    */
4580:DSP/Inc/arm_math.h ****   void arm_fir_sparse_q7(
4581:DSP/Inc/arm_math.h ****   arm_fir_sparse_instance_q7 * S,
4582:DSP/Inc/arm_math.h ****   q7_t * pSrc,
4583:DSP/Inc/arm_math.h ****   q7_t * pDst,
4584:DSP/Inc/arm_math.h ****   q7_t * pScratchIn,
4585:DSP/Inc/arm_math.h ****   q31_t * pScratchOut,
4586:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4587:DSP/Inc/arm_math.h **** 
4588:DSP/Inc/arm_math.h **** 
4589:DSP/Inc/arm_math.h ****   /**
4590:DSP/Inc/arm_math.h ****    * @brief  Initialization function for the Q7 sparse FIR filter.
4591:DSP/Inc/arm_math.h ****    * @param[in,out] S          points to an instance of the Q7 sparse FIR structure.
4592:DSP/Inc/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4593:DSP/Inc/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4594:DSP/Inc/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4595:DSP/Inc/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4596:DSP/Inc/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4597:DSP/Inc/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4598:DSP/Inc/arm_math.h ****    */
4599:DSP/Inc/arm_math.h ****   void arm_fir_sparse_init_q7(
4600:DSP/Inc/arm_math.h ****   arm_fir_sparse_instance_q7 * S,
4601:DSP/Inc/arm_math.h ****   uint16_t numTaps,
4602:DSP/Inc/arm_math.h ****   q7_t * pCoeffs,
4603:DSP/Inc/arm_math.h ****   q7_t * pState,
4604:DSP/Inc/arm_math.h ****   int32_t * pTapDelay,
4605:DSP/Inc/arm_math.h ****   uint16_t maxDelay,
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 102


4606:DSP/Inc/arm_math.h ****   uint32_t blockSize);
4607:DSP/Inc/arm_math.h **** 
4608:DSP/Inc/arm_math.h **** 
4609:DSP/Inc/arm_math.h ****   /**
4610:DSP/Inc/arm_math.h ****    * @brief  Floating-point sin_cos function.
4611:DSP/Inc/arm_math.h ****    * @param[in]  theta   input value in degrees
4612:DSP/Inc/arm_math.h ****    * @param[out] pSinVal  points to the processed sine output.
4613:DSP/Inc/arm_math.h ****    * @param[out] pCosVal  points to the processed cos output.
4614:DSP/Inc/arm_math.h ****    */
4615:DSP/Inc/arm_math.h ****   void arm_sin_cos_f32(
4616:DSP/Inc/arm_math.h ****   float32_t theta,
4617:DSP/Inc/arm_math.h ****   float32_t * pSinVal,
4618:DSP/Inc/arm_math.h ****   float32_t * pCosVal);
4619:DSP/Inc/arm_math.h **** 
4620:DSP/Inc/arm_math.h **** 
4621:DSP/Inc/arm_math.h ****   /**
4622:DSP/Inc/arm_math.h ****    * @brief  Q31 sin_cos function.
4623:DSP/Inc/arm_math.h ****    * @param[in]  theta    scaled input value in degrees
4624:DSP/Inc/arm_math.h ****    * @param[out] pSinVal  points to the processed sine output.
4625:DSP/Inc/arm_math.h ****    * @param[out] pCosVal  points to the processed cosine output.
4626:DSP/Inc/arm_math.h ****    */
4627:DSP/Inc/arm_math.h ****   void arm_sin_cos_q31(
4628:DSP/Inc/arm_math.h ****   q31_t theta,
4629:DSP/Inc/arm_math.h ****   q31_t * pSinVal,
4630:DSP/Inc/arm_math.h ****   q31_t * pCosVal);
4631:DSP/Inc/arm_math.h **** 
4632:DSP/Inc/arm_math.h **** 
4633:DSP/Inc/arm_math.h ****   /**
4634:DSP/Inc/arm_math.h ****    * @brief  Floating-point complex conjugate.
4635:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4636:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the output vector
4637:DSP/Inc/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4638:DSP/Inc/arm_math.h ****    */
4639:DSP/Inc/arm_math.h ****   void arm_cmplx_conj_f32(
4640:DSP/Inc/arm_math.h ****   float32_t * pSrc,
4641:DSP/Inc/arm_math.h ****   float32_t * pDst,
4642:DSP/Inc/arm_math.h ****   uint32_t numSamples);
4643:DSP/Inc/arm_math.h **** 
4644:DSP/Inc/arm_math.h ****   /**
4645:DSP/Inc/arm_math.h ****    * @brief  Q31 complex conjugate.
4646:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4647:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the output vector
4648:DSP/Inc/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4649:DSP/Inc/arm_math.h ****    */
4650:DSP/Inc/arm_math.h ****   void arm_cmplx_conj_q31(
4651:DSP/Inc/arm_math.h ****   q31_t * pSrc,
4652:DSP/Inc/arm_math.h ****   q31_t * pDst,
4653:DSP/Inc/arm_math.h ****   uint32_t numSamples);
4654:DSP/Inc/arm_math.h **** 
4655:DSP/Inc/arm_math.h **** 
4656:DSP/Inc/arm_math.h ****   /**
4657:DSP/Inc/arm_math.h ****    * @brief  Q15 complex conjugate.
4658:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4659:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the output vector
4660:DSP/Inc/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4661:DSP/Inc/arm_math.h ****    */
4662:DSP/Inc/arm_math.h ****   void arm_cmplx_conj_q15(
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 103


4663:DSP/Inc/arm_math.h ****   q15_t * pSrc,
4664:DSP/Inc/arm_math.h ****   q15_t * pDst,
4665:DSP/Inc/arm_math.h ****   uint32_t numSamples);
4666:DSP/Inc/arm_math.h **** 
4667:DSP/Inc/arm_math.h **** 
4668:DSP/Inc/arm_math.h ****   /**
4669:DSP/Inc/arm_math.h ****    * @brief  Floating-point complex magnitude squared
4670:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4671:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the real output vector
4672:DSP/Inc/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4673:DSP/Inc/arm_math.h ****    */
4674:DSP/Inc/arm_math.h ****   void arm_cmplx_mag_squared_f32(
4675:DSP/Inc/arm_math.h ****   float32_t * pSrc,
4676:DSP/Inc/arm_math.h ****   float32_t * pDst,
4677:DSP/Inc/arm_math.h ****   uint32_t numSamples);
4678:DSP/Inc/arm_math.h **** 
4679:DSP/Inc/arm_math.h **** 
4680:DSP/Inc/arm_math.h ****   /**
4681:DSP/Inc/arm_math.h ****    * @brief  Q31 complex magnitude squared
4682:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4683:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the real output vector
4684:DSP/Inc/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4685:DSP/Inc/arm_math.h ****    */
4686:DSP/Inc/arm_math.h ****   void arm_cmplx_mag_squared_q31(
4687:DSP/Inc/arm_math.h ****   q31_t * pSrc,
4688:DSP/Inc/arm_math.h ****   q31_t * pDst,
4689:DSP/Inc/arm_math.h ****   uint32_t numSamples);
4690:DSP/Inc/arm_math.h **** 
4691:DSP/Inc/arm_math.h **** 
4692:DSP/Inc/arm_math.h ****   /**
4693:DSP/Inc/arm_math.h ****    * @brief  Q15 complex magnitude squared
4694:DSP/Inc/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4695:DSP/Inc/arm_math.h ****    * @param[out] pDst        points to the real output vector
4696:DSP/Inc/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4697:DSP/Inc/arm_math.h ****    */
4698:DSP/Inc/arm_math.h ****   void arm_cmplx_mag_squared_q15(
4699:DSP/Inc/arm_math.h ****   q15_t * pSrc,
4700:DSP/Inc/arm_math.h ****   q15_t * pDst,
4701:DSP/Inc/arm_math.h ****   uint32_t numSamples);
4702:DSP/Inc/arm_math.h **** 
4703:DSP/Inc/arm_math.h **** 
4704:DSP/Inc/arm_math.h ****  /**
4705:DSP/Inc/arm_math.h ****    * @ingroup groupController
4706:DSP/Inc/arm_math.h ****    */
4707:DSP/Inc/arm_math.h **** 
4708:DSP/Inc/arm_math.h ****   /**
4709:DSP/Inc/arm_math.h ****    * @defgroup PID PID Motor Control
4710:DSP/Inc/arm_math.h ****    *
4711:DSP/Inc/arm_math.h ****    * A Proportional Integral Derivative (PID) controller is a generic feedback control
4712:DSP/Inc/arm_math.h ****    * loop mechanism widely used in industrial control systems.
4713:DSP/Inc/arm_math.h ****    * A PID controller is the most commonly used type of feedback controller.
4714:DSP/Inc/arm_math.h ****    *
4715:DSP/Inc/arm_math.h ****    * This set of functions implements (PID) controllers
4716:DSP/Inc/arm_math.h ****    * for Q15, Q31, and floating-point data types.  The functions operate on a single sample
4717:DSP/Inc/arm_math.h ****    * of data and each call to the function returns a single processed value.
4718:DSP/Inc/arm_math.h ****    * <code>S</code> points to an instance of the PID control data structure.  <code>in</code>
4719:DSP/Inc/arm_math.h ****    * is the input sample value. The functions return the output value.
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 104


4720:DSP/Inc/arm_math.h ****    *
4721:DSP/Inc/arm_math.h ****    * \par Algorithm:
4722:DSP/Inc/arm_math.h ****    * <pre>
4723:DSP/Inc/arm_math.h ****    *    y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]
4724:DSP/Inc/arm_math.h ****    *    A0 = Kp + Ki + Kd
4725:DSP/Inc/arm_math.h ****    *    A1 = (-Kp ) - (2 * Kd )
4726:DSP/Inc/arm_math.h ****    *    A2 = Kd  </pre>
4727:DSP/Inc/arm_math.h ****    *
4728:DSP/Inc/arm_math.h ****    * \par
4729:DSP/Inc/arm_math.h ****    * where \c Kp is proportional constant, \c Ki is Integral constant and \c Kd is Derivative const
4730:DSP/Inc/arm_math.h ****    *
4731:DSP/Inc/arm_math.h ****    * \par
4732:DSP/Inc/arm_math.h ****    * \image html PID.gif "Proportional Integral Derivative Controller"
4733:DSP/Inc/arm_math.h ****    *
4734:DSP/Inc/arm_math.h ****    * \par
4735:DSP/Inc/arm_math.h ****    * The PID controller calculates an "error" value as the difference between
4736:DSP/Inc/arm_math.h ****    * the measured output and the reference input.
4737:DSP/Inc/arm_math.h ****    * The controller attempts to minimize the error by adjusting the process control inputs.
4738:DSP/Inc/arm_math.h ****    * The proportional value determines the reaction to the current error,
4739:DSP/Inc/arm_math.h ****    * the integral value determines the reaction based on the sum of recent errors,
4740:DSP/Inc/arm_math.h ****    * and the derivative value determines the reaction based on the rate at which the error has been
4741:DSP/Inc/arm_math.h ****    *
4742:DSP/Inc/arm_math.h ****    * \par Instance Structure
4743:DSP/Inc/arm_math.h ****    * The Gains A0, A1, A2 and state variables for a PID controller are stored together in an instan
4744:DSP/Inc/arm_math.h ****    * A separate instance structure must be defined for each PID Controller.
4745:DSP/Inc/arm_math.h ****    * There are separate instance structure declarations for each of the 3 supported data types.
4746:DSP/Inc/arm_math.h ****    *
4747:DSP/Inc/arm_math.h ****    * \par Reset Functions
4748:DSP/Inc/arm_math.h ****    * There is also an associated reset function for each data type which clears the state array.
4749:DSP/Inc/arm_math.h ****    *
4750:DSP/Inc/arm_math.h ****    * \par Initialization Functions
4751:DSP/Inc/arm_math.h ****    * There is also an associated initialization function for each data type.
4752:DSP/Inc/arm_math.h ****    * The initialization function performs the following operations:
4753:DSP/Inc/arm_math.h ****    * - Initializes the Gains A0, A1, A2 from Kp,Ki, Kd gains.
4754:DSP/Inc/arm_math.h ****    * - Zeros out the values in the state buffer.
4755:DSP/Inc/arm_math.h ****    *
4756:DSP/Inc/arm_math.h ****    * \par
4757:DSP/Inc/arm_math.h ****    * Instance structure cannot be placed into a const data section and it is recommended to use the
4758:DSP/Inc/arm_math.h ****    *
4759:DSP/Inc/arm_math.h ****    * \par Fixed-Point Behavior
4760:DSP/Inc/arm_math.h ****    * Care must be taken when using the fixed-point versions of the PID Controller functions.
4761:DSP/Inc/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used in each function m
4762:DSP/Inc/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
4763:DSP/Inc/arm_math.h ****    */
4764:DSP/Inc/arm_math.h **** 
4765:DSP/Inc/arm_math.h ****   /**
4766:DSP/Inc/arm_math.h ****    * @addtogroup PID
4767:DSP/Inc/arm_math.h ****    * @{
4768:DSP/Inc/arm_math.h ****    */
4769:DSP/Inc/arm_math.h **** 
4770:DSP/Inc/arm_math.h ****   /**
4771:DSP/Inc/arm_math.h ****    * @brief  Process function for the floating-point PID Control.
4772:DSP/Inc/arm_math.h ****    * @param[in,out] S   is an instance of the floating-point PID Control structure
4773:DSP/Inc/arm_math.h ****    * @param[in]     in  input sample to process
4774:DSP/Inc/arm_math.h ****    * @return out processed output sample.
4775:DSP/Inc/arm_math.h ****    */
4776:DSP/Inc/arm_math.h ****   CMSIS_INLINE __STATIC_INLINE float32_t arm_pid_f32(
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 105


 969              		.loc 2 4776 42 view .LVU198
 970              	.LBB7:
4777:DSP/Inc/arm_math.h ****   arm_pid_instance_f32 * S,
4778:DSP/Inc/arm_math.h ****   float32_t in)
4779:DSP/Inc/arm_math.h ****   {
4780:DSP/Inc/arm_math.h ****     float32_t out;
 971              		.loc 2 4780 5 view .LVU199
4781:DSP/Inc/arm_math.h **** 
4782:DSP/Inc/arm_math.h ****     /* y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]  */
4783:DSP/Inc/arm_math.h ****     out = (S->A0 * in) +
 972              		.loc 2 4783 5 view .LVU200
 973              		.loc 2 4783 13 is_stmt 0 view .LVU201
 974 0114 414B     		ldr	r3, .L39+84
 975 0116 D3ED007A 		vldr.32	s15, [r3]
 976              		.loc 2 4783 18 view .LVU202
 977 011a 67EE277A 		vmul.f32	s15, s14, s15
4784:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 978              		.loc 2 4784 9 view .LVU203
 979 011e D3ED016A 		vldr.32	s13, [r3, #4]
 980              		.loc 2 4784 24 view .LVU204
 981 0122 93ED036A 		vldr.32	s12, [r3, #12]
 982              		.loc 2 4784 14 view .LVU205
 983 0126 66EE866A 		vmul.f32	s13, s13, s12
4783:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 984              		.loc 2 4783 24 view .LVU206
 985 012a 77EEA67A 		vadd.f32	s15, s15, s13
 986              		.loc 2 4784 33 view .LVU207
 987 012e D3ED026A 		vldr.32	s13, [r3, #8]
 988              		.loc 2 4784 48 view .LVU208
 989 0132 D3ED045A 		vldr.32	s11, [r3, #16]
 990              		.loc 2 4784 38 view .LVU209
 991 0136 66EEA56A 		vmul.f32	s13, s13, s11
 992              		.loc 2 4784 29 view .LVU210
 993 013a 77EEA67A 		vadd.f32	s15, s15, s13
 994              		.loc 2 4784 64 view .LVU211
 995 013e D3ED056A 		vldr.32	s13, [r3, #20]
4783:DSP/Inc/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
 996              		.loc 2 4783 9 view .LVU212
 997 0142 77EEA67A 		vadd.f32	s15, s15, s13
 998              	.LVL75:
4785:DSP/Inc/arm_math.h **** 
4786:DSP/Inc/arm_math.h ****     /* Update state */
4787:DSP/Inc/arm_math.h ****     S->state[1] = S->state[0];
 999              		.loc 2 4787 5 is_stmt 1 view .LVU213
 1000              		.loc 2 4787 17 is_stmt 0 view .LVU214
 1001 0146 83ED046A 		vstr.32	s12, [r3, #16]
4788:DSP/Inc/arm_math.h ****     S->state[0] = in;
 1002              		.loc 2 4788 5 is_stmt 1 view .LVU215
 1003              		.loc 2 4788 17 is_stmt 0 view .LVU216
 1004 014a D860     		str	r0, [r3, #12]	@ float
4789:DSP/Inc/arm_math.h ****     S->state[2] = out;
 1005              		.loc 2 4789 5 is_stmt 1 view .LVU217
 1006              		.loc 2 4789 17 is_stmt 0 view .LVU218
 1007 014c C3ED057A 		vstr.32	s15, [r3, #20]
4790:DSP/Inc/arm_math.h **** 
4791:DSP/Inc/arm_math.h ****     /* return to application */
4792:DSP/Inc/arm_math.h ****     return (out);
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 106


 1008              		.loc 2 4792 5 is_stmt 1 view .LVU219
 1009              	.LVL76:
 1010              		.loc 2 4792 5 is_stmt 0 view .LVU220
 1011              	.LBE7:
 1012              	.LBE6:
 151:CONTROL/Src/votage.c ****         PID_output = arm_pid_f32(&S_4, V_error);
 1013              		.loc 1 151 20 discriminator 1 view .LVU221
 1014 0150 2C4D     		ldr	r5, .L39+60
 1015 0152 C5ED007A 		vstr.32	s15, [r5]
 152:CONTROL/Src/votage.c ****         PID_output*=0.001;
 1016              		.loc 1 152 9 is_stmt 1 view .LVU222
 152:CONTROL/Src/votage.c ****         PID_output*=0.001;
 1017              		.loc 1 152 19 is_stmt 0 view .LVU223
 1018 0156 17EE900A 		vmov	r0, s15
 1019 015a FFF7FEFF 		bl	__aeabi_f2d
 1020              	.LVL77:
 1021 015e 20A3     		adr	r3, .L39+24
 1022 0160 D3E90023 		ldrd	r2, [r3]
 1023 0164 FFF7FEFF 		bl	__aeabi_dmul
 1024              	.LVL78:
 1025 0168 FFF7FEFF 		bl	__aeabi_d2f
 1026              	.LVL79:
 1027 016c 07EE900A 		vmov	s15, r0
 1028 0170 2860     		str	r0, [r5]	@ float
 155:CONTROL/Src/votage.c ****         temp_rato = PID_output*100;
 1029              		.loc 1 155 9 is_stmt 1 view .LVU224
 155:CONTROL/Src/votage.c ****         temp_rato = PID_output*100;
 1030              		.loc 1 155 31 is_stmt 0 view .LVU225
 1031 0172 9FED2B7A 		vldr.32	s14, .L39+88
 1032 0176 67EE877A 		vmul.f32	s15, s15, s14
 155:CONTROL/Src/votage.c ****         temp_rato = PID_output*100;
 1033              		.loc 1 155 19 view .LVU226
 1034 017a 2A4B     		ldr	r3, .L39+92
 1035 017c C3ED007A 		vstr.32	s15, [r3]
 158:CONTROL/Src/votage.c ****         debug_rate = PID_output*100;
 1036              		.loc 1 158 9 is_stmt 1 view .LVU227
 158:CONTROL/Src/votage.c ****         debug_rate = PID_output*100;
 1037              		.loc 1 158 20 is_stmt 0 view .LVU228
 1038 0180 294B     		ldr	r3, .L39+96
 1039 0182 C3ED007A 		vstr.32	s15, [r3]
 162:CONTROL/Src/votage.c ****         if(PID_output>=0.99) PID_output = 0.99;
 1040              		.loc 1 162 9 is_stmt 1 view .LVU229
 162:CONTROL/Src/votage.c ****         if(PID_output>=0.99) PID_output = 0.99;
 1041              		.loc 1 162 22 is_stmt 0 view .LVU230
 1042 0186 FFF7FEFF 		bl	__aeabi_f2d
 1043              	.LVL80:
 1044 018a 0646     		mov	r6, r0
 1045 018c 0F46     		mov	r7, r1
 162:CONTROL/Src/votage.c ****         if(PID_output>=0.99) PID_output = 0.99;
 1046              		.loc 1 162 11 view .LVU231
 1047 018e 16A3     		adr	r3, .L39+32
 1048 0190 D3E90023 		ldrd	r2, [r3]
 1049 0194 FFF7FEFF 		bl	__aeabi_dcmpge
 1050              	.LVL81:
 1051 0198 28B1     		cbz	r0, .L36
 162:CONTROL/Src/votage.c ****         if(PID_output>=0.99) PID_output = 0.99;
 1052              		.loc 1 162 30 is_stmt 1 discriminator 1 view .LVU232
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 107


 162:CONTROL/Src/votage.c ****         if(PID_output>=0.99) PID_output = 0.99;
 1053              		.loc 1 162 41 is_stmt 0 discriminator 1 view .LVU233
 1054 019a 244A     		ldr	r2, .L39+100
 1055 019c 2A60     		str	r2, [r5]	@ float
 1056              	.L30:
 165:CONTROL/Src/votage.c ****         square_buffer = 0;
 1057              		.loc 1 165 9 is_stmt 1 view .LVU234
 165:CONTROL/Src/votage.c ****         square_buffer = 0;
 1058              		.loc 1 165 23 is_stmt 0 view .LVU235
 1059 019e 184B     		ldr	r3, .L39+56
 1060 01a0 0022     		movs	r2, #0
 1061 01a2 1A60     		str	r2, [r3]	@ float
 1062 01a4 40E7     		b	.L27
 1063              	.L36:
 163:CONTROL/Src/votage.c ****         else if(PID_output<=0.01) PID_output = 0.01;
 1064              		.loc 1 163 14 is_stmt 1 view .LVU236
 163:CONTROL/Src/votage.c ****         else if(PID_output<=0.01) PID_output = 0.01;
 1065              		.loc 1 163 16 is_stmt 0 view .LVU237
 1066 01a6 12A3     		adr	r3, .L39+40
 1067 01a8 D3E90023 		ldrd	r2, [r3]
 1068 01ac 3046     		mov	r0, r6
 1069 01ae 3946     		mov	r1, r7
 1070 01b0 FFF7FEFF 		bl	__aeabi_dcmple
 1071              	.LVL82:
 1072 01b4 0028     		cmp	r0, #0
 1073 01b6 F2D0     		beq	.L30
 163:CONTROL/Src/votage.c ****         else if(PID_output<=0.01) PID_output = 0.01;
 1074              		.loc 1 163 35 is_stmt 1 discriminator 1 view .LVU238
 163:CONTROL/Src/votage.c ****         else if(PID_output<=0.01) PID_output = 0.01;
 1075              		.loc 1 163 46 is_stmt 0 discriminator 1 view .LVU239
 1076 01b8 124B     		ldr	r3, .L39+60
 1077 01ba 1D4A     		ldr	r2, .L39+104
 1078 01bc 1A60     		str	r2, [r3]	@ float
 1079 01be EEE7     		b	.L30
 1080              	.L38:
 173:CONTROL/Src/votage.c ****     if(count_3==399) count_3 = 0;
 1081              		.loc 1 173 22 is_stmt 1 discriminator 1 view .LVU240
 173:CONTROL/Src/votage.c ****     if(count_3==399) count_3 = 0;
 1082              		.loc 1 173 30 is_stmt 0 discriminator 1 view .LVU241
 1083 01c0 0D4B     		ldr	r3, .L39+48
 1084 01c2 0022     		movs	r2, #0
 1085 01c4 1A60     		str	r2, [r3]
 1086 01c6 73E7     		b	.L25
 1087              	.L40:
 1088              		.align	3
 1089              	.L39:
 1090 01c8 4BDA7D5C 		.word	1551751755
 1091 01cc 5555C53F 		.word	1069897045
 1092 01d0 3AE1042A 		.word	704962874
 1093 01d4 707E7B40 		.word	1081835120
 1094 01d8 9A999999 		.word	-1717986918
 1095 01dc 9999A93F 		.word	1068079513
 1096 01e0 FCA9F1D2 		.word	-755914244
 1097 01e4 4D62503F 		.word	1062232653
 1098 01e8 AE47E17A 		.word	2061584302
 1099 01ec 14AEEF3F 		.word	1072672276
 1100 01f0 7B14AE47 		.word	1202590843
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 108


 1101 01f4 E17A843F 		.word	1065646817
 1102 01f8 00000000 		.word	count_3
 1103 01fc 00000000 		.word	ADC1_Buf_f32
 1104 0200 00000000 		.word	square_buffer
 1105 0204 00000000 		.word	PID_output
 1106 0208 00E08540 		.word	1082515456
 1107 020c 00000140 		.word	1073807360
 1108 0210 0000C843 		.word	1137180672
 1109 0214 00000000 		.word	debug_votage
 1110 0218 00000000 		.word	V_error
 1111 021c 00000000 		.word	S_4
 1112 0220 0000C842 		.word	1120403456
 1113 0224 00000000 		.word	temp_rato
 1114 0228 00000000 		.word	debug_rate
 1115 022c A4707D3F 		.word	1065185444
 1116 0230 0AD7233C 		.word	1008981770
 1117 0234 00000000 		.word	spwm_group
 1118              		.cfi_endproc
 1119              	.LFE277:
 1121              		.global	clip_result
 1122              		.section	.bss.clip_result,"aw",%nobits
 1123              		.align	2
 1126              	clip_result:
 1127 0000 00000000 		.space	4
 1128              		.global	votage_rms
 1129              		.section	.bss.votage_rms,"aw",%nobits
 1130              		.align	2
 1133              	votage_rms:
 1134 0000 00000000 		.space	4
 1135              		.global	square_buffer
 1136              		.section	.bss.square_buffer,"aw",%nobits
 1137              		.align	2
 1140              	square_buffer:
 1141 0000 00000000 		.space	4
 1142              		.global	spwm_group
 1143              		.section	.data.spwm_group,"aw"
 1144              		.align	2
 1147              	spwm_group:
 1148 0000 21000000 		.word	33
 1149 0004 63000000 		.word	99
 1150 0008 A5000000 		.word	165
 1151 000c E7000000 		.word	231
 1152 0010 29010000 		.word	297
 1153 0014 6A010000 		.word	362
 1154 0018 AC010000 		.word	428
 1155 001c EE010000 		.word	494
 1156 0020 2F020000 		.word	559
 1157 0024 70020000 		.word	624
 1158 0028 B2020000 		.word	690
 1159 002c F3020000 		.word	755
 1160 0030 33030000 		.word	819
 1161 0034 74030000 		.word	884
 1162 0038 B4030000 		.word	948
 1163 003c F5030000 		.word	1013
 1164 0040 34040000 		.word	1076
 1165 0044 74040000 		.word	1140
 1166 0048 B3040000 		.word	1203
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 109


 1167 004c F2040000 		.word	1266
 1168 0050 31050000 		.word	1329
 1169 0054 70050000 		.word	1392
 1170 0058 AE050000 		.word	1454
 1171 005c EB050000 		.word	1515
 1172 0060 29060000 		.word	1577
 1173 0064 66060000 		.word	1638
 1174 0068 A2060000 		.word	1698
 1175 006c DE060000 		.word	1758
 1176 0070 1A070000 		.word	1818
 1177 0074 55070000 		.word	1877
 1178 0078 90070000 		.word	1936
 1179 007c CA070000 		.word	1994
 1180 0080 04080000 		.word	2052
 1181 0084 3E080000 		.word	2110
 1182 0088 76080000 		.word	2166
 1183 008c AF080000 		.word	2223
 1184 0090 E6080000 		.word	2278
 1185 0094 1D090000 		.word	2333
 1186 0098 54090000 		.word	2388
 1187 009c 8A090000 		.word	2442
 1188 00a0 BF090000 		.word	2495
 1189 00a4 F4090000 		.word	2548
 1190 00a8 280A0000 		.word	2600
 1191 00ac 5C0A0000 		.word	2652
 1192 00b0 8F0A0000 		.word	2703
 1193 00b4 C10A0000 		.word	2753
 1194 00b8 F20A0000 		.word	2802
 1195 00bc 230B0000 		.word	2851
 1196 00c0 530B0000 		.word	2899
 1197 00c4 820B0000 		.word	2946
 1198 00c8 B10B0000 		.word	2993
 1199 00cc DF0B0000 		.word	3039
 1200 00d0 0C0C0000 		.word	3084
 1201 00d4 390C0000 		.word	3129
 1202 00d8 640C0000 		.word	3172
 1203 00dc 8F0C0000 		.word	3215
 1204 00e0 B90C0000 		.word	3257
 1205 00e4 E20C0000 		.word	3298
 1206 00e8 0B0D0000 		.word	3339
 1207 00ec 320D0000 		.word	3378
 1208 00f0 590D0000 		.word	3417
 1209 00f4 7F0D0000 		.word	3455
 1210 00f8 A40D0000 		.word	3492
 1211 00fc C80D0000 		.word	3528
 1212 0100 EC0D0000 		.word	3564
 1213 0104 0E0E0000 		.word	3598
 1214 0108 300E0000 		.word	3632
 1215 010c 500E0000 		.word	3664
 1216 0110 700E0000 		.word	3696
 1217 0114 8F0E0000 		.word	3727
 1218 0118 AD0E0000 		.word	3757
 1219 011c CA0E0000 		.word	3786
 1220 0120 E60E0000 		.word	3814
 1221 0124 010F0000 		.word	3841
 1222 0128 1C0F0000 		.word	3868
 1223 012c 350F0000 		.word	3893
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 110


 1224 0130 4D0F0000 		.word	3917
 1225 0134 640F0000 		.word	3940
 1226 0138 7B0F0000 		.word	3963
 1227 013c 900F0000 		.word	3984
 1228 0140 A50F0000 		.word	4005
 1229 0144 B80F0000 		.word	4024
 1230 0148 CA0F0000 		.word	4042
 1231 014c DC0F0000 		.word	4060
 1232 0150 EC0F0000 		.word	4076
 1233 0154 FC0F0000 		.word	4092
 1234 0158 0A100000 		.word	4106
 1235 015c 17100000 		.word	4119
 1236 0160 24100000 		.word	4132
 1237 0164 2F100000 		.word	4143
 1238 0168 39100000 		.word	4153
 1239 016c 43100000 		.word	4163
 1240 0170 4B100000 		.word	4171
 1241 0174 52100000 		.word	4178
 1242 0178 58100000 		.word	4184
 1243 017c 5E100000 		.word	4190
 1244 0180 62100000 		.word	4194
 1245 0184 65100000 		.word	4197
 1246 0188 67100000 		.word	4199
 1247 018c 68100000 		.word	4200
 1248 0190 68100000 		.word	4200
 1249 0194 67100000 		.word	4199
 1250 0198 65100000 		.word	4197
 1251 019c 62100000 		.word	4194
 1252 01a0 5E100000 		.word	4190
 1253 01a4 58100000 		.word	4184
 1254 01a8 52100000 		.word	4178
 1255 01ac 4B100000 		.word	4171
 1256 01b0 43100000 		.word	4163
 1257 01b4 39100000 		.word	4153
 1258 01b8 2F100000 		.word	4143
 1259 01bc 24100000 		.word	4132
 1260 01c0 17100000 		.word	4119
 1261 01c4 0A100000 		.word	4106
 1262 01c8 FC0F0000 		.word	4092
 1263 01cc EC0F0000 		.word	4076
 1264 01d0 DC0F0000 		.word	4060
 1265 01d4 CA0F0000 		.word	4042
 1266 01d8 B80F0000 		.word	4024
 1267 01dc A50F0000 		.word	4005
 1268 01e0 900F0000 		.word	3984
 1269 01e4 7B0F0000 		.word	3963
 1270 01e8 640F0000 		.word	3940
 1271 01ec 4D0F0000 		.word	3917
 1272 01f0 350F0000 		.word	3893
 1273 01f4 1C0F0000 		.word	3868
 1274 01f8 010F0000 		.word	3841
 1275 01fc E60E0000 		.word	3814
 1276 0200 CA0E0000 		.word	3786
 1277 0204 AD0E0000 		.word	3757
 1278 0208 8F0E0000 		.word	3727
 1279 020c 700E0000 		.word	3696
 1280 0210 500E0000 		.word	3664
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 111


 1281 0214 300E0000 		.word	3632
 1282 0218 0E0E0000 		.word	3598
 1283 021c EC0D0000 		.word	3564
 1284 0220 C80D0000 		.word	3528
 1285 0224 A40D0000 		.word	3492
 1286 0228 7F0D0000 		.word	3455
 1287 022c 590D0000 		.word	3417
 1288 0230 320D0000 		.word	3378
 1289 0234 0B0D0000 		.word	3339
 1290 0238 E20C0000 		.word	3298
 1291 023c B90C0000 		.word	3257
 1292 0240 8F0C0000 		.word	3215
 1293 0244 640C0000 		.word	3172
 1294 0248 390C0000 		.word	3129
 1295 024c 0C0C0000 		.word	3084
 1296 0250 DF0B0000 		.word	3039
 1297 0254 B10B0000 		.word	2993
 1298 0258 820B0000 		.word	2946
 1299 025c 530B0000 		.word	2899
 1300 0260 230B0000 		.word	2851
 1301 0264 F20A0000 		.word	2802
 1302 0268 C10A0000 		.word	2753
 1303 026c 8F0A0000 		.word	2703
 1304 0270 5C0A0000 		.word	2652
 1305 0274 280A0000 		.word	2600
 1306 0278 F4090000 		.word	2548
 1307 027c BF090000 		.word	2495
 1308 0280 8A090000 		.word	2442
 1309 0284 54090000 		.word	2388
 1310 0288 1D090000 		.word	2333
 1311 028c E6080000 		.word	2278
 1312 0290 AF080000 		.word	2223
 1313 0294 76080000 		.word	2166
 1314 0298 3E080000 		.word	2110
 1315 029c 04080000 		.word	2052
 1316 02a0 CA070000 		.word	1994
 1317 02a4 90070000 		.word	1936
 1318 02a8 55070000 		.word	1877
 1319 02ac 1A070000 		.word	1818
 1320 02b0 DE060000 		.word	1758
 1321 02b4 A2060000 		.word	1698
 1322 02b8 66060000 		.word	1638
 1323 02bc 29060000 		.word	1577
 1324 02c0 EB050000 		.word	1515
 1325 02c4 AE050000 		.word	1454
 1326 02c8 70050000 		.word	1392
 1327 02cc 31050000 		.word	1329
 1328 02d0 F2040000 		.word	1266
 1329 02d4 B3040000 		.word	1203
 1330 02d8 74040000 		.word	1140
 1331 02dc 34040000 		.word	1076
 1332 02e0 F5030000 		.word	1013
 1333 02e4 B4030000 		.word	948
 1334 02e8 74030000 		.word	884
 1335 02ec 33030000 		.word	819
 1336 02f0 F3020000 		.word	755
 1337 02f4 B2020000 		.word	690
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 112


 1338 02f8 70020000 		.word	624
 1339 02fc 2F020000 		.word	559
 1340 0300 EE010000 		.word	494
 1341 0304 AC010000 		.word	428
 1342 0308 6A010000 		.word	362
 1343 030c 29010000 		.word	297
 1344 0310 E7000000 		.word	231
 1345 0314 A5000000 		.word	165
 1346 0318 63000000 		.word	99
 1347 031c 21000000 		.word	33
 1348 0320 DFFFFFFF 		.word	-33
 1349 0324 9DFFFFFF 		.word	-99
 1350 0328 5BFFFFFF 		.word	-165
 1351 032c 19FFFFFF 		.word	-231
 1352 0330 D7FEFFFF 		.word	-297
 1353 0334 96FEFFFF 		.word	-362
 1354 0338 54FEFFFF 		.word	-428
 1355 033c 12FEFFFF 		.word	-494
 1356 0340 D1FDFFFF 		.word	-559
 1357 0344 90FDFFFF 		.word	-624
 1358 0348 4EFDFFFF 		.word	-690
 1359 034c 0DFDFFFF 		.word	-755
 1360 0350 CDFCFFFF 		.word	-819
 1361 0354 8CFCFFFF 		.word	-884
 1362 0358 4CFCFFFF 		.word	-948
 1363 035c 0BFCFFFF 		.word	-1013
 1364 0360 CCFBFFFF 		.word	-1076
 1365 0364 8CFBFFFF 		.word	-1140
 1366 0368 4DFBFFFF 		.word	-1203
 1367 036c 0EFBFFFF 		.word	-1266
 1368 0370 CFFAFFFF 		.word	-1329
 1369 0374 90FAFFFF 		.word	-1392
 1370 0378 52FAFFFF 		.word	-1454
 1371 037c 15FAFFFF 		.word	-1515
 1372 0380 D7F9FFFF 		.word	-1577
 1373 0384 9AF9FFFF 		.word	-1638
 1374 0388 5EF9FFFF 		.word	-1698
 1375 038c 22F9FFFF 		.word	-1758
 1376 0390 E6F8FFFF 		.word	-1818
 1377 0394 ABF8FFFF 		.word	-1877
 1378 0398 70F8FFFF 		.word	-1936
 1379 039c 36F8FFFF 		.word	-1994
 1380 03a0 FCF7FFFF 		.word	-2052
 1381 03a4 C2F7FFFF 		.word	-2110
 1382 03a8 8AF7FFFF 		.word	-2166
 1383 03ac 51F7FFFF 		.word	-2223
 1384 03b0 1AF7FFFF 		.word	-2278
 1385 03b4 E3F6FFFF 		.word	-2333
 1386 03b8 ACF6FFFF 		.word	-2388
 1387 03bc 76F6FFFF 		.word	-2442
 1388 03c0 41F6FFFF 		.word	-2495
 1389 03c4 0CF6FFFF 		.word	-2548
 1390 03c8 D8F5FFFF 		.word	-2600
 1391 03cc A4F5FFFF 		.word	-2652
 1392 03d0 71F5FFFF 		.word	-2703
 1393 03d4 3FF5FFFF 		.word	-2753
 1394 03d8 0EF5FFFF 		.word	-2802
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 113


 1395 03dc DDF4FFFF 		.word	-2851
 1396 03e0 ADF4FFFF 		.word	-2899
 1397 03e4 7EF4FFFF 		.word	-2946
 1398 03e8 4FF4FFFF 		.word	-2993
 1399 03ec 21F4FFFF 		.word	-3039
 1400 03f0 F4F3FFFF 		.word	-3084
 1401 03f4 C7F3FFFF 		.word	-3129
 1402 03f8 9CF3FFFF 		.word	-3172
 1403 03fc 71F3FFFF 		.word	-3215
 1404 0400 47F3FFFF 		.word	-3257
 1405 0404 1EF3FFFF 		.word	-3298
 1406 0408 F5F2FFFF 		.word	-3339
 1407 040c CEF2FFFF 		.word	-3378
 1408 0410 A7F2FFFF 		.word	-3417
 1409 0414 81F2FFFF 		.word	-3455
 1410 0418 5CF2FFFF 		.word	-3492
 1411 041c 38F2FFFF 		.word	-3528
 1412 0420 14F2FFFF 		.word	-3564
 1413 0424 F2F1FFFF 		.word	-3598
 1414 0428 D0F1FFFF 		.word	-3632
 1415 042c B0F1FFFF 		.word	-3664
 1416 0430 90F1FFFF 		.word	-3696
 1417 0434 71F1FFFF 		.word	-3727
 1418 0438 53F1FFFF 		.word	-3757
 1419 043c 36F1FFFF 		.word	-3786
 1420 0440 1AF1FFFF 		.word	-3814
 1421 0444 FFF0FFFF 		.word	-3841
 1422 0448 E4F0FFFF 		.word	-3868
 1423 044c CBF0FFFF 		.word	-3893
 1424 0450 B3F0FFFF 		.word	-3917
 1425 0454 9CF0FFFF 		.word	-3940
 1426 0458 85F0FFFF 		.word	-3963
 1427 045c 70F0FFFF 		.word	-3984
 1428 0460 5BF0FFFF 		.word	-4005
 1429 0464 48F0FFFF 		.word	-4024
 1430 0468 36F0FFFF 		.word	-4042
 1431 046c 24F0FFFF 		.word	-4060
 1432 0470 14F0FFFF 		.word	-4076
 1433 0474 04F0FFFF 		.word	-4092
 1434 0478 F6EFFFFF 		.word	-4106
 1435 047c E9EFFFFF 		.word	-4119
 1436 0480 DCEFFFFF 		.word	-4132
 1437 0484 D1EFFFFF 		.word	-4143
 1438 0488 C7EFFFFF 		.word	-4153
 1439 048c BDEFFFFF 		.word	-4163
 1440 0490 B5EFFFFF 		.word	-4171
 1441 0494 AEEFFFFF 		.word	-4178
 1442 0498 A8EFFFFF 		.word	-4184
 1443 049c A2EFFFFF 		.word	-4190
 1444 04a0 9EEFFFFF 		.word	-4194
 1445 04a4 9BEFFFFF 		.word	-4197
 1446 04a8 99EFFFFF 		.word	-4199
 1447 04ac 98EFFFFF 		.word	-4200
 1448 04b0 98EFFFFF 		.word	-4200
 1449 04b4 99EFFFFF 		.word	-4199
 1450 04b8 9BEFFFFF 		.word	-4197
 1451 04bc 9EEFFFFF 		.word	-4194
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 114


 1452 04c0 A2EFFFFF 		.word	-4190
 1453 04c4 A8EFFFFF 		.word	-4184
 1454 04c8 AEEFFFFF 		.word	-4178
 1455 04cc B5EFFFFF 		.word	-4171
 1456 04d0 BDEFFFFF 		.word	-4163
 1457 04d4 C7EFFFFF 		.word	-4153
 1458 04d8 D1EFFFFF 		.word	-4143
 1459 04dc DCEFFFFF 		.word	-4132
 1460 04e0 E9EFFFFF 		.word	-4119
 1461 04e4 F6EFFFFF 		.word	-4106
 1462 04e8 04F0FFFF 		.word	-4092
 1463 04ec 14F0FFFF 		.word	-4076
 1464 04f0 24F0FFFF 		.word	-4060
 1465 04f4 36F0FFFF 		.word	-4042
 1466 04f8 48F0FFFF 		.word	-4024
 1467 04fc 5BF0FFFF 		.word	-4005
 1468 0500 70F0FFFF 		.word	-3984
 1469 0504 85F0FFFF 		.word	-3963
 1470 0508 9CF0FFFF 		.word	-3940
 1471 050c B3F0FFFF 		.word	-3917
 1472 0510 CBF0FFFF 		.word	-3893
 1473 0514 E4F0FFFF 		.word	-3868
 1474 0518 FFF0FFFF 		.word	-3841
 1475 051c 1AF1FFFF 		.word	-3814
 1476 0520 36F1FFFF 		.word	-3786
 1477 0524 53F1FFFF 		.word	-3757
 1478 0528 71F1FFFF 		.word	-3727
 1479 052c 90F1FFFF 		.word	-3696
 1480 0530 B0F1FFFF 		.word	-3664
 1481 0534 D0F1FFFF 		.word	-3632
 1482 0538 F2F1FFFF 		.word	-3598
 1483 053c 14F2FFFF 		.word	-3564
 1484 0540 38F2FFFF 		.word	-3528
 1485 0544 5CF2FFFF 		.word	-3492
 1486 0548 81F2FFFF 		.word	-3455
 1487 054c A7F2FFFF 		.word	-3417
 1488 0550 CEF2FFFF 		.word	-3378
 1489 0554 F5F2FFFF 		.word	-3339
 1490 0558 1EF3FFFF 		.word	-3298
 1491 055c 47F3FFFF 		.word	-3257
 1492 0560 71F3FFFF 		.word	-3215
 1493 0564 9CF3FFFF 		.word	-3172
 1494 0568 C7F3FFFF 		.word	-3129
 1495 056c F4F3FFFF 		.word	-3084
 1496 0570 21F4FFFF 		.word	-3039
 1497 0574 4FF4FFFF 		.word	-2993
 1498 0578 7EF4FFFF 		.word	-2946
 1499 057c ADF4FFFF 		.word	-2899
 1500 0580 DDF4FFFF 		.word	-2851
 1501 0584 0EF5FFFF 		.word	-2802
 1502 0588 3FF5FFFF 		.word	-2753
 1503 058c 71F5FFFF 		.word	-2703
 1504 0590 A4F5FFFF 		.word	-2652
 1505 0594 D8F5FFFF 		.word	-2600
 1506 0598 0CF6FFFF 		.word	-2548
 1507 059c 41F6FFFF 		.word	-2495
 1508 05a0 76F6FFFF 		.word	-2442
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 115


 1509 05a4 ACF6FFFF 		.word	-2388
 1510 05a8 E3F6FFFF 		.word	-2333
 1511 05ac 1AF7FFFF 		.word	-2278
 1512 05b0 51F7FFFF 		.word	-2223
 1513 05b4 8AF7FFFF 		.word	-2166
 1514 05b8 C2F7FFFF 		.word	-2110
 1515 05bc FCF7FFFF 		.word	-2052
 1516 05c0 36F8FFFF 		.word	-1994
 1517 05c4 70F8FFFF 		.word	-1936
 1518 05c8 ABF8FFFF 		.word	-1877
 1519 05cc E6F8FFFF 		.word	-1818
 1520 05d0 22F9FFFF 		.word	-1758
 1521 05d4 5EF9FFFF 		.word	-1698
 1522 05d8 9AF9FFFF 		.word	-1638
 1523 05dc D7F9FFFF 		.word	-1577
 1524 05e0 15FAFFFF 		.word	-1515
 1525 05e4 52FAFFFF 		.word	-1454
 1526 05e8 90FAFFFF 		.word	-1392
 1527 05ec CFFAFFFF 		.word	-1329
 1528 05f0 0EFBFFFF 		.word	-1266
 1529 05f4 4DFBFFFF 		.word	-1203
 1530 05f8 8CFBFFFF 		.word	-1140
 1531 05fc CCFBFFFF 		.word	-1076
 1532 0600 0BFCFFFF 		.word	-1013
 1533 0604 4CFCFFFF 		.word	-948
 1534 0608 8CFCFFFF 		.word	-884
 1535 060c CDFCFFFF 		.word	-819
 1536 0610 0DFDFFFF 		.word	-755
 1537 0614 4EFDFFFF 		.word	-690
 1538 0618 90FDFFFF 		.word	-624
 1539 061c D1FDFFFF 		.word	-559
 1540 0620 12FEFFFF 		.word	-494
 1541 0624 54FEFFFF 		.word	-428
 1542 0628 96FEFFFF 		.word	-362
 1543 062c D7FEFFFF 		.word	-297
 1544 0630 19FFFFFF 		.word	-231
 1545 0634 5BFFFFFF 		.word	-165
 1546 0638 9DFFFFFF 		.word	-99
 1547 063c DFFFFFFF 		.word	-33
 1548              		.global	temp_rato
 1549              		.section	.bss.temp_rato,"aw",%nobits
 1550              		.align	2
 1553              	temp_rato:
 1554 0000 00000000 		.space	4
 1555              		.global	debug_rate
 1556              		.section	.bss.debug_rate,"aw",%nobits
 1557              		.align	2
 1560              	debug_rate:
 1561 0000 00000000 		.space	4
 1562              		.global	debug_votage
 1563              		.section	.bss.debug_votage,"aw",%nobits
 1564              		.align	2
 1567              	debug_votage:
 1568 0000 00000000 		.space	4
 1569              		.global	PID_output
 1570              		.section	.bss.PID_output,"aw",%nobits
 1571              		.align	2
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 116


 1574              	PID_output:
 1575 0000 00000000 		.space	4
 1576              		.global	V_error
 1577              		.section	.bss.V_error,"aw",%nobits
 1578              		.align	2
 1581              	V_error:
 1582 0000 00000000 		.space	4
 1583              		.global	V_ref_3
 1584              		.section	.bss.V_ref_3,"aw",%nobits
 1585              		.align	2
 1588              	V_ref_3:
 1589 0000 00000000 		.space	4
 1590              		.global	angle_3
 1591              		.section	.bss.angle_3,"aw",%nobits
 1592              		.align	2
 1595              	angle_3:
 1596 0000 00000000 		.space	4
 1597              		.global	count_3
 1598              		.section	.bss.count_3,"aw",%nobits
 1599              		.align	2
 1602              	count_3:
 1603 0000 00000000 		.space	4
 1604              		.global	S_4
 1605              		.section	.bss.S_4,"aw",%nobits
 1606              		.align	2
 1609              	S_4:
 1610 0000 00000000 		.space	36
 1610      00000000 
 1610      00000000 
 1610      00000000 
 1610      00000000 
 1611              		.text
 1612              	.Letext0:
 1613              		.file 3 "/Users/luban/.local/xPacks/arm-none-eabi-gcc/xpack-arm-none-eabi-gcc-13.2.1-1.1/arm-none-
 1614              		.file 4 "/Users/luban/.local/xPacks/arm-none-eabi-gcc/xpack-arm-none-eabi-gcc-13.2.1-1.1/arm-none-
 1615              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 117


DEFINED SYMBOLS
                            *ABS*:00000000 votage.c
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:21     .text.VOTAGE_PID_INIT:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:27     .text.VOTAGE_PID_INIT:00000000 VOTAGE_PID_INIT
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:60     .text.VOTAGE_PID_INIT:00000018 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1609   .bss.S_4:00000000 S_4
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:67     .text.UPDATE_RATO_NUM:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:73     .text.UPDATE_RATO_NUM:00000000 UPDATE_RATO_NUM
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:197    .text.UPDATE_RATO_NUM:000000a4 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:206    .text.UPDATE_VOTAGE_NUM:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:212    .text.UPDATE_VOTAGE_NUM:00000000 UPDATE_VOTAGE_NUM
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:338    .text.UPDATE_VOTAGE_NUM:000000ac $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:352    .text.UPDATE_VOTAGE_PID:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:358    .text.UPDATE_VOTAGE_PID:00000000 UPDATE_VOTAGE_PID
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:640    .text.UPDATE_VOTAGE_PID:00000218 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:655    .text.UPDATE_RATO_PID:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:661    .text.UPDATE_RATO_PID:00000000 UPDATE_RATO_PID
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:779    .text.UPDATE_RATO_PID:000000c8 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1553   .bss.temp_rato:00000000 temp_rato
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:797    .text.COUNT_VOTAGE_PID:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:803    .text.COUNT_VOTAGE_PID:00000000 COUNT_VOTAGE_PID
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1090   .text.COUNT_VOTAGE_PID:000001c8 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1602   .bss.count_3:00000000 count_3
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1140   .bss.square_buffer:00000000 square_buffer
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1574   .bss.PID_output:00000000 PID_output
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1567   .bss.debug_votage:00000000 debug_votage
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1581   .bss.V_error:00000000 V_error
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1560   .bss.debug_rate:00000000 debug_rate
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1147   .data.spwm_group:00000000 spwm_group
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1126   .bss.clip_result:00000000 clip_result
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1123   .bss.clip_result:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1133   .bss.votage_rms:00000000 votage_rms
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1130   .bss.votage_rms:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1137   .bss.square_buffer:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1144   .data.spwm_group:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1550   .bss.temp_rato:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1557   .bss.debug_rate:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1564   .bss.debug_votage:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1571   .bss.PID_output:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1578   .bss.V_error:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1588   .bss.V_ref_3:00000000 V_ref_3
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1585   .bss.V_ref_3:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1595   .bss.angle_3:00000000 angle_3
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1592   .bss.angle_3:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1599   .bss.count_3:00000000 $d
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s:1606   .bss.S_4:00000000 $d

UNDEFINED SYMBOLS
arm_pid_init_f32
pid_6
pid_4
__aeabi_f2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
__aeabi_ui2d
__aeabi_dsub
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccJCfV57.s 			page 118


__aeabi_dcmpge
__aeabi_dcmple
__aeabi_d2uiz
ADC1_Buf_f32
