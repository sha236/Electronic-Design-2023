ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccvBo9Fe.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"arm_cmplx_mag_squared_q31.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c"
  20              		.section	.text.arm_cmplx_mag_squared_q31,"ax",%progbits
  21              		.align	1
  22              		.global	arm_cmplx_mag_squared_q31
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	arm_cmplx_mag_squared_q31:
  28              	.LVL0:
  29              	.LFB139:
   1:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** /* ----------------------------------------------------------------------
   2:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * Project:      CMSIS DSP Library
   3:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * Title:        arm_cmplx_mag_squared_q31.c
   4:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * Description:  Q31 complex magnitude squared
   5:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  *
   6:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * $Date:        27. January 2017
   7:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * $Revision:    V.1.5.1
   8:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  *
   9:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * Target Processor: Cortex-M cores
  10:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * -------------------------------------------------------------------- */
  11:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** /*
  12:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  *
  14:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  *
  16:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * not use this file except in compliance with the License.
  18:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * You may obtain a copy of the License at
  19:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  *
  20:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  *
  22:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * See the License for the specific language governing permissions and
  26:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * limitations under the License.
  27:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  */
  28:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  29:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** #include "arm_math.h"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccvBo9Fe.s 			page 2


  30:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  31:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** /**
  32:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * @ingroup groupCmplxMath
  33:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  */
  34:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  35:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** /**
  36:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * @addtogroup cmplx_mag_squared
  37:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * @{
  38:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  */
  39:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  40:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  41:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** /**
  42:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * @brief  Q31 complex magnitude squared
  43:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * @param  *pSrc points to the complex input vector
  44:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * @param  *pDst points to the real output vector
  45:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * @param  numSamples number of complex samples in the input vector
  46:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * @return none.
  47:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  *
  48:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * <b>Scaling and Overflow Behavior:</b>
  49:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * \par
  50:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * The function implements 1.31 by 1.31 multiplications and finally output is converted into 3.29 f
  51:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  * Input down scaling is not required.
  52:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****  */
  53:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  54:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** void arm_cmplx_mag_squared_q31(
  55:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   q31_t * pSrc,
  56:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   q31_t * pDst,
  57:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   uint32_t numSamples)
  58:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** {
  30              		.loc 1 58 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 58 1 is_stmt 0 view .LVU1
  36 0000 70B4     		push	{r4, r5, r6}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 12
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 6, -4
  59:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   q31_t real, imag;                              /* Temporary variables to store real and imaginary
  42              		.loc 1 59 3 is_stmt 1 view .LVU2
  60:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   q31_t acc0, acc1;                              /* Accumulators */
  43              		.loc 1 60 3 view .LVU3
  61:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  62:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** #if defined (ARM_MATH_DSP)
  63:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  64:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  65:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   uint32_t blkCnt;                               /* loop counter */
  44              		.loc 1 65 3 view .LVU4
  66:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  67:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   /* loop Unrolling */
  68:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   blkCnt = numSamples >> 2U;
  45              		.loc 1 68 3 view .LVU5
  46              		.loc 1 68 10 is_stmt 0 view .LVU6
  47 0002 9508     		lsrs	r5, r2, #2
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccvBo9Fe.s 			page 3


  48              	.LVL1:
  69:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  70:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  71:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  72:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   while (blkCnt > 0U)
  49              		.loc 1 72 3 is_stmt 1 view .LVU7
  50              		.loc 1 72 9 is_stmt 0 view .LVU8
  51 0004 59E0     		b	.L2
  52              	.L3:
  73:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   {
  74:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     /* C[0] = (A[0] * A[0] + A[1] * A[1]) */
  75:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     real = *pSrc++;
  53              		.loc 1 75 5 is_stmt 1 view .LVU9
  54              	.LVL2:
  55              		.loc 1 75 10 is_stmt 0 view .LVU10
  56 0006 0468     		ldr	r4, [r0]
  57              	.LVL3:
  76:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     imag = *pSrc++;
  58              		.loc 1 76 5 is_stmt 1 view .LVU11
  59              		.loc 1 76 10 is_stmt 0 view .LVU12
  60 0008 4368     		ldr	r3, [r0, #4]
  61              	.LVL4:
  77:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc0 = (q31_t) (((q63_t) real * real) >> 33);
  62              		.loc 1 77 5 is_stmt 1 view .LVU13
  63              		.loc 1 77 22 is_stmt 0 view .LVU14
  64 000a 4FEAE47C 		asr	ip, r4, #31
  65              		.loc 1 77 35 view .LVU15
  66 000e 04FB0CFC 		mul	ip, r4, ip
  67 0012 A4FB0446 		umull	r4, r6, r4, r4
  68              	.LVL5:
  69              		.loc 1 77 35 view .LVU16
  70 0016 06EB4C06 		add	r6, r6, ip, lsl #1
  71              	.LVL6:
  78:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc1 = (q31_t) (((q63_t) imag * imag) >> 33);
  72              		.loc 1 78 5 is_stmt 1 view .LVU17
  73              		.loc 1 78 22 is_stmt 0 view .LVU18
  74 001a 4FEAE37C 		asr	ip, r3, #31
  75              		.loc 1 78 35 view .LVU19
  76 001e 03FB0CFC 		mul	ip, r3, ip
  77 0022 A3FB0343 		umull	r4, r3, r3, r3
  78              	.LVL7:
  79              		.loc 1 78 35 view .LVU20
  80 0026 03EB4C03 		add	r3, r3, ip, lsl #1
  81              		.loc 1 78 43 view .LVU21
  82 002a 5B10     		asrs	r3, r3, #1
  83              	.LVL8:
  79:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     /* store the result in 3.29 format in the destination buffer. */
  80:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     *pDst++ = acc0 + acc1;
  84              		.loc 1 80 5 is_stmt 1 view .LVU22
  85              		.loc 1 80 20 is_stmt 0 view .LVU23
  86 002c 03EB6603 		add	r3, r3, r6, asr #1
  87              	.LVL9:
  88              		.loc 1 80 13 view .LVU24
  89 0030 0B60     		str	r3, [r1]
  90              	.LVL10:
  81:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  82:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     real = *pSrc++;
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccvBo9Fe.s 			page 4


  91              		.loc 1 82 5 is_stmt 1 view .LVU25
  92              		.loc 1 82 10 is_stmt 0 view .LVU26
  93 0032 8468     		ldr	r4, [r0, #8]
  94              	.LVL11:
  83:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     imag = *pSrc++;
  95              		.loc 1 83 5 is_stmt 1 view .LVU27
  96              		.loc 1 83 10 is_stmt 0 view .LVU28
  97 0034 C368     		ldr	r3, [r0, #12]
  98              	.LVL12:
  84:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc0 = (q31_t) (((q63_t) real * real) >> 33);
  99              		.loc 1 84 5 is_stmt 1 view .LVU29
 100              		.loc 1 84 22 is_stmt 0 view .LVU30
 101 0036 4FEAE47C 		asr	ip, r4, #31
 102              		.loc 1 84 35 view .LVU31
 103 003a 04FB0CFC 		mul	ip, r4, ip
 104 003e A4FB0446 		umull	r4, r6, r4, r4
 105              	.LVL13:
 106              		.loc 1 84 35 view .LVU32
 107 0042 06EB4C06 		add	r6, r6, ip, lsl #1
 108              	.LVL14:
  85:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc1 = (q31_t) (((q63_t) imag * imag) >> 33);
 109              		.loc 1 85 5 is_stmt 1 view .LVU33
 110              		.loc 1 85 22 is_stmt 0 view .LVU34
 111 0046 4FEAE37C 		asr	ip, r3, #31
 112              		.loc 1 85 35 view .LVU35
 113 004a 03FB0CFC 		mul	ip, r3, ip
 114 004e A3FB0343 		umull	r4, r3, r3, r3
 115              	.LVL15:
 116              		.loc 1 85 35 view .LVU36
 117 0052 03EB4C03 		add	r3, r3, ip, lsl #1
 118              		.loc 1 85 43 view .LVU37
 119 0056 5B10     		asrs	r3, r3, #1
 120              	.LVL16:
  86:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     /* store the result in 3.29 format in the destination buffer. */
  87:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     *pDst++ = acc0 + acc1;
 121              		.loc 1 87 5 is_stmt 1 view .LVU38
 122              		.loc 1 87 20 is_stmt 0 view .LVU39
 123 0058 03EB6603 		add	r3, r3, r6, asr #1
 124              	.LVL17:
 125              		.loc 1 87 13 view .LVU40
 126 005c 4B60     		str	r3, [r1, #4]
 127              	.LVL18:
  88:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  89:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     real = *pSrc++;
 128              		.loc 1 89 5 is_stmt 1 view .LVU41
 129              		.loc 1 89 10 is_stmt 0 view .LVU42
 130 005e 0469     		ldr	r4, [r0, #16]
 131              	.LVL19:
  90:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     imag = *pSrc++;
 132              		.loc 1 90 5 is_stmt 1 view .LVU43
 133              		.loc 1 90 10 is_stmt 0 view .LVU44
 134 0060 4369     		ldr	r3, [r0, #20]
 135              	.LVL20:
  91:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc0 = (q31_t) (((q63_t) real * real) >> 33);
 136              		.loc 1 91 5 is_stmt 1 view .LVU45
 137              		.loc 1 91 22 is_stmt 0 view .LVU46
 138 0062 4FEAE47C 		asr	ip, r4, #31
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccvBo9Fe.s 			page 5


 139              		.loc 1 91 35 view .LVU47
 140 0066 04FB0CFC 		mul	ip, r4, ip
 141 006a A4FB0446 		umull	r4, r6, r4, r4
 142              	.LVL21:
 143              		.loc 1 91 35 view .LVU48
 144 006e 06EB4C06 		add	r6, r6, ip, lsl #1
 145              	.LVL22:
  92:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc1 = (q31_t) (((q63_t) imag * imag) >> 33);
 146              		.loc 1 92 5 is_stmt 1 view .LVU49
 147              		.loc 1 92 22 is_stmt 0 view .LVU50
 148 0072 4FEAE37C 		asr	ip, r3, #31
 149              		.loc 1 92 35 view .LVU51
 150 0076 03FB0CFC 		mul	ip, r3, ip
 151 007a A3FB0343 		umull	r4, r3, r3, r3
 152              	.LVL23:
 153              		.loc 1 92 35 view .LVU52
 154 007e 03EB4C03 		add	r3, r3, ip, lsl #1
 155              		.loc 1 92 43 view .LVU53
 156 0082 5B10     		asrs	r3, r3, #1
 157              	.LVL24:
  93:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     /* store the result in 3.29 format in the destination buffer. */
  94:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     *pDst++ = acc0 + acc1;
 158              		.loc 1 94 5 is_stmt 1 view .LVU54
 159              		.loc 1 94 20 is_stmt 0 view .LVU55
 160 0084 03EB6603 		add	r3, r3, r6, asr #1
 161              	.LVL25:
 162              		.loc 1 94 13 view .LVU56
 163 0088 8B60     		str	r3, [r1, #8]
 164              	.LVL26:
  95:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
  96:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     real = *pSrc++;
 165              		.loc 1 96 5 is_stmt 1 view .LVU57
 166              		.loc 1 96 10 is_stmt 0 view .LVU58
 167 008a 8469     		ldr	r4, [r0, #24]
 168              	.LVL27:
  97:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     imag = *pSrc++;
 169              		.loc 1 97 5 is_stmt 1 view .LVU59
 170              		.loc 1 97 10 is_stmt 0 view .LVU60
 171 008c C369     		ldr	r3, [r0, #28]
 172              	.LVL28:
  98:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc0 = (q31_t) (((q63_t) real * real) >> 33);
 173              		.loc 1 98 5 is_stmt 1 view .LVU61
 174              		.loc 1 98 22 is_stmt 0 view .LVU62
 175 008e 4FEAE47C 		asr	ip, r4, #31
 176              		.loc 1 98 35 view .LVU63
 177 0092 04FB0CFC 		mul	ip, r4, ip
 178 0096 A4FB0446 		umull	r4, r6, r4, r4
 179              	.LVL29:
 180              		.loc 1 98 35 view .LVU64
 181 009a 06EB4C04 		add	r4, r6, ip, lsl #1
 182              	.LVL30:
  99:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc1 = (q31_t) (((q63_t) imag * imag) >> 33);
 183              		.loc 1 99 5 is_stmt 1 view .LVU65
 184              		.loc 1 99 22 is_stmt 0 view .LVU66
 185 009e DE17     		asrs	r6, r3, #31
 186              		.loc 1 99 35 view .LVU67
 187 00a0 03FB06F6 		mul	r6, r3, r6
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccvBo9Fe.s 			page 6


 188 00a4 A3FB03C3 		umull	ip, r3, r3, r3
 189              	.LVL31:
 190              		.loc 1 99 35 view .LVU68
 191 00a8 03EB4603 		add	r3, r3, r6, lsl #1
 192              		.loc 1 99 43 view .LVU69
 193 00ac 5B10     		asrs	r3, r3, #1
 194              	.LVL32:
 100:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     /* store the result in 3.29 format in the destination buffer. */
 101:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     *pDst++ = acc0 + acc1;
 195              		.loc 1 101 5 is_stmt 1 view .LVU70
 196              		.loc 1 101 20 is_stmt 0 view .LVU71
 197 00ae 03EB6403 		add	r3, r3, r4, asr #1
 198              	.LVL33:
 199              		.loc 1 101 13 view .LVU72
 200 00b2 CB60     		str	r3, [r1, #12]
 201              	.LVL34:
 102:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 103:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     /* Decrement the loop counter */
 104:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     blkCnt--;
 202              		.loc 1 104 5 is_stmt 1 view .LVU73
 203              		.loc 1 104 11 is_stmt 0 view .LVU74
 204 00b4 013D     		subs	r5, r5, #1
 205              	.LVL35:
 101:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 206              		.loc 1 101 10 view .LVU75
 207 00b6 1031     		adds	r1, r1, #16
 208              	.LVL36:
  97:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc0 = (q31_t) (((q63_t) real * real) >> 33);
 209              		.loc 1 97 17 view .LVU76
 210 00b8 2030     		adds	r0, r0, #32
 211              	.LVL37:
 212              	.L2:
  72:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   {
 213              		.loc 1 72 17 is_stmt 1 view .LVU77
 214 00ba 002D     		cmp	r5, #0
 215 00bc A3D1     		bne	.L3
 105:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   }
 106:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 107:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   /* If the numSamples is not a multiple of 4, compute any remaining output samples here.
 108:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****    ** No loop unrolling is used. */
 109:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   blkCnt = numSamples % 0x4U;
 216              		.loc 1 109 3 view .LVU78
 217              		.loc 1 109 10 is_stmt 0 view .LVU79
 218 00be 02F00306 		and	r6, r2, #3
 219              	.LVL38:
 110:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 111:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   while (blkCnt > 0U)
 220              		.loc 1 111 3 is_stmt 1 view .LVU80
 221              		.loc 1 111 9 is_stmt 0 view .LVU81
 222 00c2 18E0     		b	.L4
 223              	.LVL39:
 224              	.L5:
 112:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   {
 113:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     /* C[0] = (A[0] * A[0] + A[1] * A[1]) */
 114:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     real = *pSrc++;
 225              		.loc 1 114 5 is_stmt 1 view .LVU82
 226              		.loc 1 114 10 is_stmt 0 view .LVU83
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccvBo9Fe.s 			page 7


 227 00c4 0446     		mov	r4, r0
 228 00c6 54F8082B 		ldr	r2, [r4], #8
 229              	.LVL40:
 115:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     imag = *pSrc++;
 230              		.loc 1 115 5 is_stmt 1 view .LVU84
 231              		.loc 1 115 10 is_stmt 0 view .LVU85
 232 00ca 4368     		ldr	r3, [r0, #4]
 233              	.LVL41:
 116:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc0 = (q31_t) (((q63_t) real * real) >> 33);
 234              		.loc 1 116 5 is_stmt 1 view .LVU86
 235              		.loc 1 116 22 is_stmt 0 view .LVU87
 236 00cc D017     		asrs	r0, r2, #31
 237              		.loc 1 116 35 view .LVU88
 238 00ce 02FB00F0 		mul	r0, r2, r0
 239 00d2 A2FB0225 		umull	r2, r5, r2, r2
 240              	.LVL42:
 241              		.loc 1 116 35 view .LVU89
 242 00d6 05EB4005 		add	r5, r5, r0, lsl #1
 243              	.LVL43:
 117:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc1 = (q31_t) (((q63_t) imag * imag) >> 33);
 244              		.loc 1 117 5 is_stmt 1 view .LVU90
 245              		.loc 1 117 22 is_stmt 0 view .LVU91
 246 00da DA17     		asrs	r2, r3, #31
 247              		.loc 1 117 35 view .LVU92
 248 00dc 03FB02F2 		mul	r2, r3, r2
 249 00e0 A3FB0303 		umull	r0, r3, r3, r3
 250              	.LVL44:
 251              		.loc 1 117 35 view .LVU93
 252 00e4 03EB4203 		add	r3, r3, r2, lsl #1
 253              		.loc 1 117 43 view .LVU94
 254 00e8 5B10     		asrs	r3, r3, #1
 255              	.LVL45:
 118:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     /* store the result in 3.29 format in the destination buffer. */
 119:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     *pDst++ = acc0 + acc1;
 256              		.loc 1 119 5 is_stmt 1 view .LVU95
 257              		.loc 1 119 20 is_stmt 0 view .LVU96
 258 00ea 03EB6503 		add	r3, r3, r5, asr #1
 259              	.LVL46:
 260              		.loc 1 119 13 view .LVU97
 261 00ee 41F8043B 		str	r3, [r1], #4
 262              	.LVL47:
 120:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 121:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     /* Decrement the loop counter */
 122:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     blkCnt--;
 263              		.loc 1 122 5 is_stmt 1 view .LVU98
 264              		.loc 1 122 11 is_stmt 0 view .LVU99
 265 00f2 013E     		subs	r6, r6, #1
 266              	.LVL48:
 115:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc0 = (q31_t) (((q63_t) real * real) >> 33);
 267              		.loc 1 115 17 view .LVU100
 268 00f4 2046     		mov	r0, r4
 269              	.LVL49:
 270              	.L4:
 111:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   {
 271              		.loc 1 111 17 is_stmt 1 view .LVU101
 272 00f6 002E     		cmp	r6, #0
 273 00f8 E4D1     		bne	.L5
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccvBo9Fe.s 			page 8


 123:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   }
 124:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 125:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** #else
 126:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 127:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   /* Run the below code for Cortex-M0 */
 128:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 129:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   while (numSamples > 0U)
 130:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   {
 131:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     /* out = ((real * real) + (imag * imag)) */
 132:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     real = *pSrc++;
 133:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     imag = *pSrc++;
 134:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc0 = (q31_t) (((q63_t) real * real) >> 33);
 135:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     acc1 = (q31_t) (((q63_t) imag * imag) >> 33);
 136:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     /* store the result in 3.29 format in the destination buffer. */
 137:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     *pDst++ = acc0 + acc1;
 138:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 139:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     /* Decrement the loop counter */
 140:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****     numSamples--;
 141:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c ****   }
 142:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 143:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** #endif /* #if defined (ARM_MATH_DSP) */
 144:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** 
 145:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_squared_q31.c **** }
 274              		.loc 1 145 1 is_stmt 0 view .LVU102
 275 00fa 70BC     		pop	{r4, r5, r6}
 276              	.LCFI1:
 277              		.cfi_restore 6
 278              		.cfi_restore 5
 279              		.cfi_restore 4
 280              		.cfi_def_cfa_offset 0
 281              	.LVL50:
 282              		.loc 1 145 1 view .LVU103
 283 00fc 7047     		bx	lr
 284              		.cfi_endproc
 285              	.LFE139:
 287              		.text
 288              	.Letext0:
 289              		.file 2 "/Users/luban/.local/xPacks/arm-none-eabi-gcc/xpack-arm-none-eabi-gcc-13.2.1-1.1/arm-none-
 290              		.file 3 "/Users/luban/.local/xPacks/arm-none-eabi-gcc/xpack-arm-none-eabi-gcc-13.2.1-1.1/arm-none-
 291              		.file 4 "DSP/Inc/arm_math.h"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccvBo9Fe.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_mag_squared_q31.c
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccvBo9Fe.s:21     .text.arm_cmplx_mag_squared_q31:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccvBo9Fe.s:27     .text.arm_cmplx_mag_squared_q31:00000000 arm_cmplx_mag_squared_q31

NO UNDEFINED SYMBOLS
