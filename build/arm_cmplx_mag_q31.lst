ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc6HjLTl.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"arm_cmplx_mag_q31.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c"
  20              		.section	.text.arm_cmplx_mag_q31,"ax",%progbits
  21              		.align	1
  22              		.global	arm_cmplx_mag_q31
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	arm_cmplx_mag_q31:
  28              	.LVL0:
  29              	.LFB139:
   1:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** /* ----------------------------------------------------------------------
   2:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * Project:      CMSIS DSP Library
   3:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * Title:        arm_cmplx_mag_q31.c
   4:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * Description:  Q31 complex magnitude
   5:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  *
   6:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * $Date:        27. January 2017
   7:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * $Revision:    V.1.5.1
   8:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  *
   9:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * Target Processor: Cortex-M cores
  10:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * -------------------------------------------------------------------- */
  11:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** /*
  12:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  *
  14:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  *
  16:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * not use this file except in compliance with the License.
  18:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * You may obtain a copy of the License at
  19:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  *
  20:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  *
  22:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * See the License for the specific language governing permissions and
  26:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * limitations under the License.
  27:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  */
  28:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  29:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** #include "arm_math.h"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc6HjLTl.s 			page 2


  30:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  31:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** /**
  32:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * @ingroup groupCmplxMath
  33:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  */
  34:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  35:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** /**
  36:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * @addtogroup cmplx_mag
  37:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * @{
  38:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  */
  39:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  40:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** /**
  41:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * @brief  Q31 complex magnitude
  42:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * @param  *pSrc points to the complex input vector
  43:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * @param  *pDst points to the real output vector
  44:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * @param  numSamples number of complex samples in the input vector
  45:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * @return none.
  46:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  *
  47:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * <b>Scaling and Overflow Behavior:</b>
  48:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * \par
  49:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * The function implements 1.31 by 1.31 multiplications and finally output is converted into 2.30 f
  50:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  * Input down scaling is not required.
  51:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****  */
  52:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  53:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** void arm_cmplx_mag_q31(
  54:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   q31_t * pSrc,
  55:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   q31_t * pDst,
  56:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   uint32_t numSamples)
  57:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** {
  30              		.loc 1 57 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 57 1 is_stmt 0 view .LVU1
  35 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 36
  38              		.cfi_offset 4, -36
  39              		.cfi_offset 5, -32
  40              		.cfi_offset 6, -28
  41              		.cfi_offset 7, -24
  42              		.cfi_offset 8, -20
  43              		.cfi_offset 9, -16
  44              		.cfi_offset 10, -12
  45              		.cfi_offset 11, -8
  46              		.cfi_offset 14, -4
  47 0004 83B0     		sub	sp, sp, #12
  48              	.LCFI1:
  49              		.cfi_def_cfa_offset 48
  50 0006 0446     		mov	r4, r0
  51 0008 0D46     		mov	r5, r1
  52 000a 0192     		str	r2, [sp, #4]
  58:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   q31_t real, imag;                              /* Temporary variables to hold input values */
  53              		.loc 1 58 3 is_stmt 1 view .LVU2
  59:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   q31_t acc0, acc1;                              /* Accumulators */
  54              		.loc 1 59 3 view .LVU3
  60:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   uint32_t blkCnt;                               /* loop counter */
  55              		.loc 1 60 3 view .LVU4
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc6HjLTl.s 			page 3


  61:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  62:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** #if defined (ARM_MATH_DSP)
  63:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  64:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   /* Run the below code for Cortex-M4 and Cortex-M3 */
  65:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   q31_t real1, real2, imag1, imag2;              /* Temporary variables to hold input values */
  56              		.loc 1 65 3 view .LVU5
  66:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   q31_t out1, out2, out3, out4;                  /* Accumulators */
  57              		.loc 1 66 3 view .LVU6
  67:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   q63_t mul1, mul2, mul3, mul4;                  /* Temporary variables */
  58              		.loc 1 67 3 view .LVU7
  68:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  69:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  70:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   /*loop Unrolling */
  71:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   blkCnt = numSamples >> 2U;
  59              		.loc 1 71 3 view .LVU8
  60              		.loc 1 71 10 is_stmt 0 view .LVU9
  61 000c 4FEA920B 		lsr	fp, r2, #2
  62              	.LVL1:
  72:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  73:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  74:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****    ** a second loop below computes the remaining 1 to 3 samples. */
  75:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   while (blkCnt > 0U)
  63              		.loc 1 75 3 is_stmt 1 view .LVU10
  64              		.loc 1 75 9 is_stmt 0 view .LVU11
  65 0010 64E0     		b	.L2
  66              	.LVL2:
  67              	.L3:
  76:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   {
  77:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* read complex input from source buffer */
  78:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     real1 = pSrc[0];
  68              		.loc 1 78 5 is_stmt 1 view .LVU12
  69              		.loc 1 78 11 is_stmt 0 view .LVU13
  70 0012 2068     		ldr	r0, [r4]
  71              	.LVL3:
  79:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     imag1 = pSrc[1];
  72              		.loc 1 79 5 is_stmt 1 view .LVU14
  73              		.loc 1 79 11 is_stmt 0 view .LVU15
  74 0014 6168     		ldr	r1, [r4, #4]
  75              	.LVL4:
  80:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     real2 = pSrc[2];
  76              		.loc 1 80 5 is_stmt 1 view .LVU16
  77              		.loc 1 80 11 is_stmt 0 view .LVU17
  78 0016 A268     		ldr	r2, [r4, #8]
  79              	.LVL5:
  81:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     imag2 = pSrc[3];
  80              		.loc 1 81 5 is_stmt 1 view .LVU18
  81              		.loc 1 81 11 is_stmt 0 view .LVU19
  82 0018 E368     		ldr	r3, [r4, #12]
  83              	.LVL6:
  82:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  83:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* calculate power of input values */
  84:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     mul1 = (q63_t) real1 *real1;
  84              		.loc 1 84 5 is_stmt 1 view .LVU20
  85              		.loc 1 84 12 is_stmt 0 view .LVU21
  86 001a C617     		asrs	r6, r0, #31
  87              		.loc 1 84 10 view .LVU22
  88 001c 00FB06F6 		mul	r6, r0, r6
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc6HjLTl.s 			page 4


  89 0020 A0FB000C 		umull	r0, ip, r0, r0
  90              	.LVL7:
  91              		.loc 1 84 10 view .LVU23
  92 0024 0CEB460C 		add	ip, ip, r6, lsl #1
  93              	.LVL8:
  85:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     mul2 = (q63_t) imag1 *imag1;
  94              		.loc 1 85 5 is_stmt 1 view .LVU24
  95              		.loc 1 85 12 is_stmt 0 view .LVU25
  96 0028 CE17     		asrs	r6, r1, #31
  97              		.loc 1 85 10 view .LVU26
  98 002a 01FB06F6 		mul	r6, r1, r6
  99 002e A1FB0110 		umull	r1, r0, r1, r1
 100              	.LVL9:
 101              		.loc 1 85 10 view .LVU27
 102 0032 00EB4600 		add	r0, r0, r6, lsl #1
 103              	.LVL10:
  86:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     mul3 = (q63_t) real2 *real2;
 104              		.loc 1 86 5 is_stmt 1 view .LVU28
 105              		.loc 1 86 12 is_stmt 0 view .LVU29
 106 0036 D117     		asrs	r1, r2, #31
 107              		.loc 1 86 10 view .LVU30
 108 0038 02FB01F1 		mul	r1, r2, r1
 109 003c A2FB0226 		umull	r2, r6, r2, r2
 110              	.LVL11:
 111              		.loc 1 86 10 view .LVU31
 112 0040 06EB4102 		add	r2, r6, r1, lsl #1
 113              	.LVL12:
  87:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     mul4 = (q63_t) imag2 *imag2;
 114              		.loc 1 87 5 is_stmt 1 view .LVU32
 115              		.loc 1 87 12 is_stmt 0 view .LVU33
 116 0044 D917     		asrs	r1, r3, #31
 117              		.loc 1 87 10 view .LVU34
 118 0046 03FB01F1 		mul	r1, r3, r1
 119 004a A3FB0339 		umull	r3, r9, r3, r3
 120              	.LVL13:
 121              		.loc 1 87 10 view .LVU35
 122 004e 09EB4109 		add	r9, r9, r1, lsl #1
 123              	.LVL14:
  88:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  89:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* get the result to 3.29 format */
  90:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out1 = (q31_t) (mul1 >> 33);
 124              		.loc 1 90 5 is_stmt 1 view .LVU36
  91:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out2 = (q31_t) (mul2 >> 33);
 125              		.loc 1 91 5 view .LVU37
 126              		.loc 1 91 26 is_stmt 0 view .LVU38
 127 0052 4010     		asrs	r0, r0, #1
 128              	.LVL15:
  92:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out3 = (q31_t) (mul3 >> 33);
 129              		.loc 1 92 5 is_stmt 1 view .LVU39
  93:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out4 = (q31_t) (mul4 >> 33);
 130              		.loc 1 93 5 view .LVU40
 131              		.loc 1 93 26 is_stmt 0 view .LVU41
 132 0054 4FEA6909 		asr	r9, r9, #1
 133              	.LVL16:
  94:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  95:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* add real and imaginary accumulators */
  96:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out1 = out1 + out2;
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc6HjLTl.s 			page 5


 134              		.loc 1 96 5 is_stmt 1 view .LVU42
  97:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out3 = out3 + out4;
 135              		.loc 1 97 5 view .LVU43
 136              		.loc 1 97 10 is_stmt 0 view .LVU44
 137 0058 09EB6209 		add	r9, r9, r2, asr #1
 138              	.LVL17:
  98:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
  99:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* read complex input from source buffer */
 100:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     real1 = pSrc[4];
 139              		.loc 1 100 5 is_stmt 1 view .LVU45
 140              		.loc 1 100 11 is_stmt 0 view .LVU46
 141 005c D4F810A0 		ldr	r10, [r4, #16]
 142              	.LVL18:
 101:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     imag1 = pSrc[5];
 143              		.loc 1 101 5 is_stmt 1 view .LVU47
 144              		.loc 1 101 11 is_stmt 0 view .LVU48
 145 0060 D4F81480 		ldr	r8, [r4, #20]
 146              	.LVL19:
 102:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     real2 = pSrc[6];
 147              		.loc 1 102 5 is_stmt 1 view .LVU49
 148              		.loc 1 102 11 is_stmt 0 view .LVU50
 149 0064 A769     		ldr	r7, [r4, #24]
 150              	.LVL20:
 103:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     imag2 = pSrc[7];
 151              		.loc 1 103 5 is_stmt 1 view .LVU51
 152              		.loc 1 103 11 is_stmt 0 view .LVU52
 153 0066 E669     		ldr	r6, [r4, #28]
 154              	.LVL21:
 104:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 105:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* calculate square root */
 106:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     arm_sqrt_q31(out1, &pDst[0]);
 155              		.loc 1 106 5 is_stmt 1 view .LVU53
 156 0068 2946     		mov	r1, r5
 157              	.LVL22:
 158              		.loc 1 106 5 is_stmt 0 view .LVU54
 159 006a 00EB6C00 		add	r0, r0, ip, asr #1
 160              	.LVL23:
 161              		.loc 1 106 5 view .LVU55
 162 006e FFF7FEFF 		bl	arm_sqrt_q31
 163              	.LVL24:
 107:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 108:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* calculate power of input values */
 109:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     mul1 = (q63_t) real1 *real1;
 164              		.loc 1 109 5 is_stmt 1 view .LVU56
 165              		.loc 1 109 12 is_stmt 0 view .LVU57
 166 0072 4FEAEA73 		asr	r3, r10, #31
 167              		.loc 1 109 10 view .LVU58
 168 0076 0AFB03F3 		mul	r3, r10, r3
 169 007a AAFB0AA2 		umull	r10, r2, r10, r10
 170              	.LVL25:
 171              		.loc 1 109 10 view .LVU59
 172 007e 02EB430A 		add	r10, r2, r3, lsl #1
 110:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 111:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* calculate square root */
 112:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     arm_sqrt_q31(out3, &pDst[1]);
 173              		.loc 1 112 5 is_stmt 1 view .LVU60
 174 0082 291D     		adds	r1, r5, #4
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc6HjLTl.s 			page 6


 175 0084 4846     		mov	r0, r9
 176 0086 FFF7FEFF 		bl	arm_sqrt_q31
 177              	.LVL26:
 113:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 114:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* calculate power of input values */
 115:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     mul2 = (q63_t) imag1 *imag1;
 178              		.loc 1 115 5 view .LVU61
 179              		.loc 1 115 12 is_stmt 0 view .LVU62
 180 008a 4FEAE873 		asr	r3, r8, #31
 181              		.loc 1 115 10 view .LVU63
 182 008e 08FB03F3 		mul	r3, r8, r3
 183 0092 A8FB0880 		umull	r8, r0, r8, r8
 184              	.LVL27:
 185              		.loc 1 115 10 view .LVU64
 186 0096 00EB4300 		add	r0, r0, r3, lsl #1
 116:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     mul3 = (q63_t) real2 *real2;
 187              		.loc 1 116 5 is_stmt 1 view .LVU65
 188              		.loc 1 116 12 is_stmt 0 view .LVU66
 189 009a FB17     		asrs	r3, r7, #31
 190              		.loc 1 116 10 view .LVU67
 191 009c 07FB03F3 		mul	r3, r7, r3
 192 00a0 A7FB0772 		umull	r7, r2, r7, r7
 193              	.LVL28:
 194              		.loc 1 116 10 view .LVU68
 195 00a4 02EB4302 		add	r2, r2, r3, lsl #1
 117:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     mul4 = (q63_t) imag2 *imag2;
 196              		.loc 1 117 5 is_stmt 1 view .LVU69
 197              		.loc 1 117 12 is_stmt 0 view .LVU70
 198 00a8 F117     		asrs	r1, r6, #31
 199              		.loc 1 117 10 view .LVU71
 200 00aa 06FB01F1 		mul	r1, r6, r1
 201 00ae A6FB0636 		umull	r3, r6, r6, r6
 202              	.LVL29:
 203              		.loc 1 117 10 view .LVU72
 204 00b2 06EB4106 		add	r6, r6, r1, lsl #1
 118:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 119:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* get the result to 3.29 format */
 120:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out1 = (q31_t) (mul1 >> 33);
 205              		.loc 1 120 5 is_stmt 1 view .LVU73
 206              	.LVL30:
 121:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out2 = (q31_t) (mul2 >> 33);
 207              		.loc 1 121 5 view .LVU74
 208              		.loc 1 121 26 is_stmt 0 view .LVU75
 209 00b6 4010     		asrs	r0, r0, #1
 210              	.LVL31:
 122:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out3 = (q31_t) (mul3 >> 33);
 211              		.loc 1 122 5 is_stmt 1 view .LVU76
 123:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out4 = (q31_t) (mul4 >> 33);
 212              		.loc 1 123 5 view .LVU77
 213              		.loc 1 123 26 is_stmt 0 view .LVU78
 214 00b8 7610     		asrs	r6, r6, #1
 215              	.LVL32:
 124:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 125:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* add real and imaginary accumulators */
 126:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out1 = out1 + out2;
 216              		.loc 1 126 5 is_stmt 1 view .LVU79
 127:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     out3 = out3 + out4;
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc6HjLTl.s 			page 7


 217              		.loc 1 127 5 view .LVU80
 218              		.loc 1 127 10 is_stmt 0 view .LVU81
 219 00ba 06EB6206 		add	r6, r6, r2, asr #1
 220              	.LVL33:
 128:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 129:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* calculate square root */
 130:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     arm_sqrt_q31(out1, &pDst[2]);
 221              		.loc 1 130 5 is_stmt 1 view .LVU82
 222 00be 05F10801 		add	r1, r5, #8
 223              		.loc 1 130 5 is_stmt 0 view .LVU83
 224 00c2 00EB6A00 		add	r0, r0, r10, asr #1
 225              	.LVL34:
 226              		.loc 1 130 5 view .LVU84
 227 00c6 FFF7FEFF 		bl	arm_sqrt_q31
 228              	.LVL35:
 131:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 132:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* increment destination by 8 to process next samples */
 133:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     pSrc += 8U;
 229              		.loc 1 133 5 is_stmt 1 view .LVU85
 230              		.loc 1 133 10 is_stmt 0 view .LVU86
 231 00ca 2034     		adds	r4, r4, #32
 232              	.LVL36:
 134:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 135:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* calculate square root */
 136:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     arm_sqrt_q31(out3, &pDst[3]);
 233              		.loc 1 136 5 is_stmt 1 view .LVU87
 234 00cc 05F10C01 		add	r1, r5, #12
 235 00d0 3046     		mov	r0, r6
 236 00d2 FFF7FEFF 		bl	arm_sqrt_q31
 237              	.LVL37:
 137:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 138:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* increment destination by 4 to process next samples */
 139:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     pDst += 4U;
 238              		.loc 1 139 5 view .LVU88
 239              		.loc 1 139 10 is_stmt 0 view .LVU89
 240 00d6 1035     		adds	r5, r5, #16
 241              	.LVL38:
 140:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 141:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* Decrement the loop counter */
 142:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     blkCnt--;
 242              		.loc 1 142 5 is_stmt 1 view .LVU90
 243              		.loc 1 142 11 is_stmt 0 view .LVU91
 244 00d8 0BF1FF3B 		add	fp, fp, #-1
 245              	.LVL39:
 246              	.L2:
  75:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   {
 247              		.loc 1 75 17 is_stmt 1 view .LVU92
 248 00dc BBF1000F 		cmp	fp, #0
 249 00e0 97D1     		bne	.L3
 143:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   }
 144:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 145:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   /* If the numSamples is not a multiple of 4, compute any remaining output samples here.
 146:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****    ** No loop unrolling is used. */
 147:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   blkCnt = numSamples % 0x4U;
 250              		.loc 1 147 3 view .LVU93
 251              		.loc 1 147 10 is_stmt 0 view .LVU94
 252 00e2 019B     		ldr	r3, [sp, #4]
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc6HjLTl.s 			page 8


 253 00e4 03F00307 		and	r7, r3, #3
 254              	.LVL40:
 148:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 149:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** #else
 150:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 151:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   /* Run the below code for Cortex-M0 */
 152:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   blkCnt = numSamples;
 153:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 154:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** #endif /* #if defined (ARM_MATH_DSP) */
 155:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 156:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   while (blkCnt > 0U)
 255              		.loc 1 156 3 is_stmt 1 view .LVU95
 256              		.loc 1 156 9 is_stmt 0 view .LVU96
 257 00e8 1BE0     		b	.L4
 258              	.L5:
 157:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   {
 158:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* C[0] = sqrt(A[0] * A[0] + A[1] * A[1]) */
 159:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     real = *pSrc++;
 259              		.loc 1 159 5 is_stmt 1 view .LVU97
 260              	.LVL41:
 261              		.loc 1 159 10 is_stmt 0 view .LVU98
 262 00ea 2646     		mov	r6, r4
 263 00ec 56F8082B 		ldr	r2, [r6], #8
 264              	.LVL42:
 160:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     imag = *pSrc++;
 265              		.loc 1 160 5 is_stmt 1 view .LVU99
 266              		.loc 1 160 10 is_stmt 0 view .LVU100
 267 00f0 6368     		ldr	r3, [r4, #4]
 268              	.LVL43:
 161:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     acc0 = (q31_t) (((q63_t) real * real) >> 33);
 269              		.loc 1 161 5 is_stmt 1 view .LVU101
 270              		.loc 1 161 22 is_stmt 0 view .LVU102
 271 00f2 D117     		asrs	r1, r2, #31
 272              		.loc 1 161 35 view .LVU103
 273 00f4 02FB01F1 		mul	r1, r2, r1
 274 00f8 A2FB0220 		umull	r2, r0, r2, r2
 275              	.LVL44:
 276              		.loc 1 161 35 view .LVU104
 277 00fc 00EB4100 		add	r0, r0, r1, lsl #1
 278              	.LVL45:
 162:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     acc1 = (q31_t) (((q63_t) imag * imag) >> 33);
 279              		.loc 1 162 5 is_stmt 1 view .LVU105
 280              		.loc 1 162 22 is_stmt 0 view .LVU106
 281 0100 D917     		asrs	r1, r3, #31
 282              		.loc 1 162 35 view .LVU107
 283 0102 03FB01F1 		mul	r1, r3, r1
 284 0106 A3FB0332 		umull	r3, r2, r3, r3
 285              	.LVL46:
 286              		.loc 1 162 35 view .LVU108
 287 010a 02EB4103 		add	r3, r2, r1, lsl #1
 288              		.loc 1 162 43 view .LVU109
 289 010e 5B10     		asrs	r3, r3, #1
 290              	.LVL47:
 163:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* store the result in 2.30 format in the destination buffer. */
 164:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     arm_sqrt_q31(acc0 + acc1, pDst++);
 291              		.loc 1 164 5 is_stmt 1 view .LVU110
 292 0110 2C1D     		adds	r4, r5, #4
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc6HjLTl.s 			page 9


 293              	.LVL48:
 294              		.loc 1 164 5 is_stmt 0 view .LVU111
 295 0112 2946     		mov	r1, r5
 296 0114 03EB6000 		add	r0, r3, r0, asr #1
 297              	.LVL49:
 298              		.loc 1 164 5 view .LVU112
 299 0118 FFF7FEFF 		bl	arm_sqrt_q31
 300              	.LVL50:
 165:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 166:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     /* Decrement the loop counter */
 167:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     blkCnt--;
 301              		.loc 1 167 5 is_stmt 1 view .LVU113
 302              		.loc 1 167 11 is_stmt 0 view .LVU114
 303 011c 013F     		subs	r7, r7, #1
 304              	.LVL51:
 164:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** 
 305              		.loc 1 164 5 view .LVU115
 306 011e 2546     		mov	r5, r4
 160:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****     acc0 = (q31_t) (((q63_t) real * real) >> 33);
 307              		.loc 1 160 17 view .LVU116
 308 0120 3446     		mov	r4, r6
 309              	.LVL52:
 310              	.L4:
 156:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   {
 311              		.loc 1 156 17 is_stmt 1 view .LVU117
 312 0122 002F     		cmp	r7, #0
 313 0124 E1D1     		bne	.L5
 168:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c ****   }
 169:DSP/Source/ComplexMathFunctions/arm_cmplx_mag_q31.c **** }
 314              		.loc 1 169 1 is_stmt 0 view .LVU118
 315 0126 03B0     		add	sp, sp, #12
 316              	.LCFI2:
 317              		.cfi_def_cfa_offset 36
 318              		@ sp needed
 319 0128 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 320              		.loc 1 169 1 view .LVU119
 321              		.cfi_endproc
 322              	.LFE139:
 324              		.text
 325              	.Letext0:
 326              		.file 2 "/Users/luban/.local/xPacks/arm-none-eabi-gcc/xpack-arm-none-eabi-gcc-13.2.1-1.1/arm-none-
 327              		.file 3 "/Users/luban/.local/xPacks/arm-none-eabi-gcc/xpack-arm-none-eabi-gcc-13.2.1-1.1/arm-none-
 328              		.file 4 "DSP/Inc/arm_math.h"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc6HjLTl.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_mag_q31.c
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc6HjLTl.s:21     .text.arm_cmplx_mag_q31:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//cc6HjLTl.s:27     .text.arm_cmplx_mag_q31:00000000 arm_cmplx_mag_q31

UNDEFINED SYMBOLS
arm_sqrt_q31
