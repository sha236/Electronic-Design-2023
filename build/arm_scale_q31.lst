ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccKFaXGC.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"arm_scale_q31.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "DSP/Source/BasicMathFunctions/arm_scale_q31.c"
  20              		.section	.text.arm_scale_q31,"ax",%progbits
  21              		.align	1
  22              		.global	arm_scale_q31
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	arm_scale_q31:
  28              	.LVL0:
  29              	.LFB139:
   1:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** /* ----------------------------------------------------------------------
   2:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * Project:      CMSIS DSP Library
   3:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * Title:        arm_scale_q31.c
   4:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * Description:  Multiplies a Q31 vector by a scalar
   5:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  *
   6:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * $Date:        27. January 2017
   7:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * $Revision:    V.1.5.1
   8:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  *
   9:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * Target Processor: Cortex-M cores
  10:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * -------------------------------------------------------------------- */
  11:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** /*
  12:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * Copyright (C) 2010-2017 ARM Limited or its affiliates. All rights reserved.
  13:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  *
  14:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * SPDX-License-Identifier: Apache-2.0
  15:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  *
  16:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * not use this file except in compliance with the License.
  18:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * You may obtain a copy of the License at
  19:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  *
  20:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  *
  22:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * Unless required by applicable law or agreed to in writing, software
  23:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * See the License for the specific language governing permissions and
  26:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * limitations under the License.
  27:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  */
  28:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
  29:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** #include "arm_math.h"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccKFaXGC.s 			page 2


  30:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
  31:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** /**
  32:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * @ingroup groupMath
  33:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  */
  34:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
  35:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** /**
  36:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * @addtogroup scale
  37:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * @{
  38:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  */
  39:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
  40:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** /**
  41:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * @brief Multiplies a Q31 vector by a scalar.
  42:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * @param[in]       *pSrc points to the input vector
  43:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * @param[in]       scaleFract fractional portion of the scale value
  44:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * @param[in]       shift number of bits to shift the result by
  45:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * @param[out]      *pDst points to the output vector
  46:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * @param[in]       blockSize number of samples in the vector
  47:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * @return none.
  48:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  *
  49:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * <b>Scaling and Overflow Behavior:</b>
  50:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * \par
  51:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * The input data <code>*pSrc</code> and <code>scaleFract</code> are in 1.31 format.
  52:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  * These are multiplied to yield a 2.62 intermediate result and this is shifted with saturation to 
  53:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****  */
  54:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
  55:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** void arm_scale_q31(
  56:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   q31_t * pSrc,
  57:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   q31_t scaleFract,
  58:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   int8_t shift,
  59:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   q31_t * pDst,
  60:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   uint32_t blockSize)
  61:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** {
  30              		.loc 1 61 1 view -0
  31              		.cfi_startproc
  32              		@ args = 4, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 61 1 is_stmt 0 view .LVU1
  35 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 36
  38              		.cfi_offset 4, -36
  39              		.cfi_offset 5, -32
  40              		.cfi_offset 6, -28
  41              		.cfi_offset 7, -24
  42              		.cfi_offset 8, -20
  43              		.cfi_offset 9, -16
  44              		.cfi_offset 10, -12
  45              		.cfi_offset 11, -8
  46              		.cfi_offset 14, -4
  47 0004 099C     		ldr	r4, [sp, #36]
  62:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   int8_t kShift = shift + 1;                     /* Shift to apply after scaling */
  48              		.loc 1 62 3 is_stmt 1 view .LVU2
  49              		.loc 1 62 25 is_stmt 0 view .LVU3
  50 0006 0132     		adds	r2, r2, #1
  51              	.LVL1:
  52              		.loc 1 62 10 view .LVU4
  53 0008 4FFA82FC 		sxtb	ip, r2
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccKFaXGC.s 			page 3


  54              	.LVL2:
  63:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   int8_t sign = (kShift & 0x80);
  55              		.loc 1 63 3 is_stmt 1 view .LVU5
  56              		.loc 1 63 10 is_stmt 0 view .LVU6
  57 000c 02F08002 		and	r2, r2, #128
  58              	.LVL3:
  59              		.loc 1 63 10 view .LVU7
  60 0010 4FFA82F8 		sxtb	r8, r2
  61              	.LVL4:
  64:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   uint32_t blkCnt;                               /* loop counter */
  62              		.loc 1 64 3 is_stmt 1 view .LVU8
  65:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   q31_t in, out;
  63              		.loc 1 65 3 view .LVU9
  66:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
  67:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** #if defined (ARM_MATH_DSP)
  68:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
  69:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** /* Run the below code for Cortex-M4 and Cortex-M3 */
  70:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
  71:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   q31_t in1, in2, in3, in4;                      /* temporary input variables */
  64              		.loc 1 71 3 view .LVU10
  72:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   q31_t out1, out2, out3, out4;                  /* temporary output variabels */
  65              		.loc 1 72 3 view .LVU11
  73:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
  74:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
  75:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   /*loop Unrolling */
  76:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   blkCnt = blockSize >> 2U;
  66              		.loc 1 76 3 view .LVU12
  67              		.loc 1 76 10 is_stmt 0 view .LVU13
  68 0014 A708     		lsrs	r7, r4, #2
  69              	.LVL5:
  77:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
  78:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   if (sign == 0U)
  70              		.loc 1 78 3 is_stmt 1 view .LVU14
  71              		.loc 1 78 6 is_stmt 0 view .LVU15
  72 0016 B8F1000F 		cmp	r8, #0
  73 001a 06D0     		beq	.L2
  74 001c 9BE0     		b	.L3
  75              	.LVL6:
  76              	.L7:
  79:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   {
  80:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****     /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
  81:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****      ** a second loop below computes the remaining 1 to 3 samples. */
  82:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****     while (blkCnt > 0U)
  83:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****     {
  84:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       /* read four inputs from source */
  85:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in1 = *pSrc;
  86:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in2 = *(pSrc + 1);
  87:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in3 = *(pSrc + 2);
  88:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in4 = *(pSrc + 3);
  89:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
  90:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       /* multiply input with scaler value */
  91:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in1 = ((q63_t) in1 * scaleFract) >> 32;
  92:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in2 = ((q63_t) in2 * scaleFract) >> 32;
  93:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in3 = ((q63_t) in3 * scaleFract) >> 32;
  94:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in4 = ((q63_t) in4 * scaleFract) >> 32;
  95:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
  96:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       /* apply shifting */
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccKFaXGC.s 			page 4


  97:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       out1 = in1 << kShift;
  98:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       out2 = in2 << kShift;
  99:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 100:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       /* saturate the results. */
 101:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       if (in1 != (out1 >> kShift))
 102:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****         out1 = 0x7FFFFFFF ^ (in1 >> 31);
 103:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 104:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       if (in2 != (out2 >> kShift))
 105:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****         out2 = 0x7FFFFFFF ^ (in2 >> 31);
 106:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 107:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       out3 = in3 << kShift;
 108:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       out4 = in4 << kShift;
 109:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 110:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       *pDst = out1;
 111:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       *(pDst + 1) = out2;
 112:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 113:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       if (in3 != (out3 >> kShift))
 114:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****         out3 = 0x7FFFFFFF ^ (in3 >> 31);
 115:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 116:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       if (in4 != (out4 >> kShift))
 117:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****         out4 = 0x7FFFFFFF ^ (in4 >> 31);
 118:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 119:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       /* Store result destination */
 120:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       *(pDst + 2) = out3;
  77              		.loc 1 120 7 is_stmt 1 view .LVU16
  78              		.loc 1 120 19 is_stmt 0 view .LVU17
  79 001e C3F808E0 		str	lr, [r3, #8]
 121:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       *(pDst + 3) = out4;
  80              		.loc 1 121 7 is_stmt 1 view .LVU18
  81              		.loc 1 121 19 is_stmt 0 view .LVU19
  82 0022 DE60     		str	r6, [r3, #12]
 122:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 123:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       /* Update pointers to process next sampels */
 124:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       pSrc += 4U;
  83              		.loc 1 124 7 is_stmt 1 view .LVU20
  84              		.loc 1 124 12 is_stmt 0 view .LVU21
  85 0024 1030     		adds	r0, r0, #16
  86              	.LVL7:
 125:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       pDst += 4U;
  87              		.loc 1 125 7 is_stmt 1 view .LVU22
  88              		.loc 1 125 12 is_stmt 0 view .LVU23
  89 0026 1033     		adds	r3, r3, #16
  90              	.LVL8:
 126:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 127:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       /* Decrement the loop counter */
 128:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       blkCnt--;
  91              		.loc 1 128 7 is_stmt 1 view .LVU24
  92              		.loc 1 128 13 is_stmt 0 view .LVU25
  93 0028 013F     		subs	r7, r7, #1
  94              	.LVL9:
  95              	.L2:
  82:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****     {
  96              		.loc 1 82 19 is_stmt 1 view .LVU26
  97 002a 002F     		cmp	r7, #0
  98 002c 00F09580 		beq	.L9
  85:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in2 = *(pSrc + 1);
  99              		.loc 1 85 7 view .LVU27
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccKFaXGC.s 			page 5


  85:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in2 = *(pSrc + 1);
 100              		.loc 1 85 11 is_stmt 0 view .LVU28
 101 0030 0668     		ldr	r6, [r0]
 102              	.LVL10:
  86:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in3 = *(pSrc + 2);
 103              		.loc 1 86 7 is_stmt 1 view .LVU29
  86:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in3 = *(pSrc + 2);
 104              		.loc 1 86 11 is_stmt 0 view .LVU30
 105 0032 4568     		ldr	r5, [r0, #4]
 106              	.LVL11:
  87:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in4 = *(pSrc + 3);
 107              		.loc 1 87 7 is_stmt 1 view .LVU31
  87:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in4 = *(pSrc + 3);
 108              		.loc 1 87 11 is_stmt 0 view .LVU32
 109 0034 8268     		ldr	r2, [r0, #8]
 110              	.LVL12:
  88:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 111              		.loc 1 88 7 is_stmt 1 view .LVU33
  88:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 112              		.loc 1 88 11 is_stmt 0 view .LVU34
 113 0036 D0F80C90 		ldr	r9, [r0, #12]
 114              	.LVL13:
  91:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in2 = ((q63_t) in2 * scaleFract) >> 32;
 115              		.loc 1 91 7 is_stmt 1 view .LVU35
  91:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in2 = ((q63_t) in2 * scaleFract) >> 32;
 116              		.loc 1 91 14 is_stmt 0 view .LVU36
 117 003a 4FEAE67B 		asr	fp, r6, #31
  91:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in2 = ((q63_t) in2 * scaleFract) >> 32;
 118              		.loc 1 91 26 view .LVU37
 119 003e 4FEAE17A 		asr	r10, r1, #31
 120 0042 06FB0AFE 		mul	lr, r6, r10
 121 0046 01FB0BEE 		mla	lr, r1, fp, lr
 122 004a A6FB016B 		umull	r6, fp, r6, r1
 123              	.LVL14:
  91:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in2 = ((q63_t) in2 * scaleFract) >> 32;
 124              		.loc 1 91 26 view .LVU38
 125 004e DE44     		add	lr, lr, fp
 126              	.LVL15:
  92:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in3 = ((q63_t) in3 * scaleFract) >> 32;
 127              		.loc 1 92 7 is_stmt 1 view .LVU39
  92:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in3 = ((q63_t) in3 * scaleFract) >> 32;
 128              		.loc 1 92 14 is_stmt 0 view .LVU40
 129 0050 EE17     		asrs	r6, r5, #31
  92:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in3 = ((q63_t) in3 * scaleFract) >> 32;
 130              		.loc 1 92 26 view .LVU41
 131 0052 01FB06F6 		mul	r6, r1, r6
 132 0056 05FB0A66 		mla	r6, r5, r10, r6
 133 005a A1FB055B 		umull	r5, fp, r1, r5
 134              	.LVL16:
  92:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in3 = ((q63_t) in3 * scaleFract) >> 32;
 135              		.loc 1 92 26 view .LVU42
 136 005e 5E44     		add	r6, r6, fp
 137              	.LVL17:
  93:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in4 = ((q63_t) in4 * scaleFract) >> 32;
 138              		.loc 1 93 7 is_stmt 1 view .LVU43
  93:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in4 = ((q63_t) in4 * scaleFract) >> 32;
 139              		.loc 1 93 14 is_stmt 0 view .LVU44
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccKFaXGC.s 			page 6


 140 0060 D517     		asrs	r5, r2, #31
  93:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in4 = ((q63_t) in4 * scaleFract) >> 32;
 141              		.loc 1 93 26 view .LVU45
 142 0062 01FB05F5 		mul	r5, r1, r5
 143 0066 02FB0A55 		mla	r5, r2, r10, r5
 144 006a A1FB022B 		umull	r2, fp, r1, r2
 145              	.LVL18:
  93:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in4 = ((q63_t) in4 * scaleFract) >> 32;
 146              		.loc 1 93 26 view .LVU46
 147 006e 5D44     		add	r5, r5, fp
 148              	.LVL19:
  94:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 149              		.loc 1 94 7 is_stmt 1 view .LVU47
  94:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 150              		.loc 1 94 14 is_stmt 0 view .LVU48
 151 0070 4FEAE972 		asr	r2, r9, #31
  94:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 152              		.loc 1 94 26 view .LVU49
 153 0074 01FB02F2 		mul	r2, r1, r2
 154 0078 09FB0A22 		mla	r2, r9, r10, r2
 155 007c A1FB099A 		umull	r9, r10, r1, r9
 156              	.LVL20:
  94:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 157              		.loc 1 94 26 view .LVU50
 158 0080 5244     		add	r2, r2, r10
 159              	.LVL21:
  97:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       out2 = in2 << kShift;
 160              		.loc 1 97 7 is_stmt 1 view .LVU51
  97:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       out2 = in2 << kShift;
 161              		.loc 1 97 12 is_stmt 0 view .LVU52
 162 0082 0EFA0CFA 		lsl	r10, lr, ip
 163              	.LVL22:
  98:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 164              		.loc 1 98 7 is_stmt 1 view .LVU53
  98:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 165              		.loc 1 98 12 is_stmt 0 view .LVU54
 166 0086 06FA0CF9 		lsl	r9, r6, ip
 167              	.LVL23:
 101:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****         out1 = 0x7FFFFFFF ^ (in1 >> 31);
 168              		.loc 1 101 7 is_stmt 1 view .LVU55
 101:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****         out1 = 0x7FFFFFFF ^ (in1 >> 31);
 169              		.loc 1 101 24 is_stmt 0 view .LVU56
 170 008a 4AFA0CFB 		asr	fp, r10, ip
 101:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****         out1 = 0x7FFFFFFF ^ (in1 >> 31);
 171              		.loc 1 101 10 view .LVU57
 172 008e F345     		cmp	fp, lr
 173 0090 03D0     		beq	.L4
 102:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 174              		.loc 1 102 9 is_stmt 1 view .LVU58
 102:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 175              		.loc 1 102 14 is_stmt 0 view .LVU59
 176 0092 6FF0004A 		mvn	r10, #-2147483648
 177              	.LVL24:
 102:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 178              		.loc 1 102 14 view .LVU60
 179 0096 8AEAEE7A 		eor	r10, r10, lr, asr #31
 180              	.LVL25:
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccKFaXGC.s 			page 7


 181              	.L4:
 104:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****         out2 = 0x7FFFFFFF ^ (in2 >> 31);
 182              		.loc 1 104 7 is_stmt 1 view .LVU61
 104:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****         out2 = 0x7FFFFFFF ^ (in2 >> 31);
 183              		.loc 1 104 24 is_stmt 0 view .LVU62
 184 009a 49FA0CFE 		asr	lr, r9, ip
 185              	.LVL26:
 104:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****         out2 = 0x7FFFFFFF ^ (in2 >> 31);
 186              		.loc 1 104 10 view .LVU63
 187 009e B645     		cmp	lr, r6
 188 00a0 03D0     		beq	.L5
 105:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 189              		.loc 1 105 9 is_stmt 1 view .LVU64
 105:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 190              		.loc 1 105 14 is_stmt 0 view .LVU65
 191 00a2 6FF00049 		mvn	r9, #-2147483648
 192              	.LVL27:
 105:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 193              		.loc 1 105 14 view .LVU66
 194 00a6 89EAE679 		eor	r9, r9, r6, asr #31
 195              	.LVL28:
 196              	.L5:
 107:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       out4 = in4 << kShift;
 197              		.loc 1 107 7 is_stmt 1 view .LVU67
 107:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       out4 = in4 << kShift;
 198              		.loc 1 107 12 is_stmt 0 view .LVU68
 199 00aa 05FA0CFE 		lsl	lr, r5, ip
 200              	.LVL29:
 108:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 201              		.loc 1 108 7 is_stmt 1 view .LVU69
 108:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 202              		.loc 1 108 12 is_stmt 0 view .LVU70
 203 00ae 02FA0CF6 		lsl	r6, r2, ip
 204              	.LVL30:
 110:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       *(pDst + 1) = out2;
 205              		.loc 1 110 7 is_stmt 1 view .LVU71
 110:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       *(pDst + 1) = out2;
 206              		.loc 1 110 13 is_stmt 0 view .LVU72
 207 00b2 C3F800A0 		str	r10, [r3]
 208              	.LVL31:
 111:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 209              		.loc 1 111 7 is_stmt 1 view .LVU73
 111:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 210              		.loc 1 111 19 is_stmt 0 view .LVU74
 211 00b6 C3F80490 		str	r9, [r3, #4]
 113:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****         out3 = 0x7FFFFFFF ^ (in3 >> 31);
 212              		.loc 1 113 7 is_stmt 1 view .LVU75
 113:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****         out3 = 0x7FFFFFFF ^ (in3 >> 31);
 213              		.loc 1 113 24 is_stmt 0 view .LVU76
 214 00ba 4EFA0CF9 		asr	r9, lr, ip
 215              	.LVL32:
 113:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****         out3 = 0x7FFFFFFF ^ (in3 >> 31);
 216              		.loc 1 113 10 view .LVU77
 217 00be A945     		cmp	r9, r5
 218 00c0 03D0     		beq	.L6
 114:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 219              		.loc 1 114 9 is_stmt 1 view .LVU78
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccKFaXGC.s 			page 8


 114:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 220              		.loc 1 114 14 is_stmt 0 view .LVU79
 221 00c2 6FF0004E 		mvn	lr, #-2147483648
 222              	.LVL33:
 114:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 223              		.loc 1 114 14 view .LVU80
 224 00c6 8EEAE57E 		eor	lr, lr, r5, asr #31
 225              	.LVL34:
 226              	.L6:
 116:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****         out4 = 0x7FFFFFFF ^ (in4 >> 31);
 227              		.loc 1 116 7 is_stmt 1 view .LVU81
 116:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****         out4 = 0x7FFFFFFF ^ (in4 >> 31);
 228              		.loc 1 116 24 is_stmt 0 view .LVU82
 229 00ca 46FA0CF5 		asr	r5, r6, ip
 230              	.LVL35:
 116:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****         out4 = 0x7FFFFFFF ^ (in4 >> 31);
 231              		.loc 1 116 10 view .LVU83
 232 00ce 9542     		cmp	r5, r2
 233 00d0 A5D0     		beq	.L7
 117:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 234              		.loc 1 117 9 is_stmt 1 view .LVU84
 117:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 235              		.loc 1 117 14 is_stmt 0 view .LVU85
 236 00d2 6FF00046 		mvn	r6, #-2147483648
 237              	.LVL36:
 117:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 238              		.loc 1 117 14 view .LVU86
 239 00d6 86EAE276 		eor	r6, r6, r2, asr #31
 240              	.LVL37:
 117:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 241              		.loc 1 117 14 view .LVU87
 242 00da A0E7     		b	.L7
 243              	.LVL38:
 244              	.L10:
 129:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****     }
 130:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 131:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   }
 132:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   else
 133:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   {
 134:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****     /* First part of the processing with loop unrolling.  Compute 4 outputs at a time.
 135:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****      ** a second loop below computes the remaining 1 to 3 samples. */
 136:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****     while (blkCnt > 0U)
 137:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****     {
 138:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       /* read four inputs from source */
 139:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in1 = *pSrc;
 245              		.loc 1 139 7 is_stmt 1 view .LVU88
 246              		.loc 1 139 11 is_stmt 0 view .LVU89
 247 00dc 0668     		ldr	r6, [r0]
 248              	.LVL39:
 140:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in2 = *(pSrc + 1);
 249              		.loc 1 140 7 is_stmt 1 view .LVU90
 250              		.loc 1 140 11 is_stmt 0 view .LVU91
 251 00de 4568     		ldr	r5, [r0, #4]
 252              	.LVL40:
 141:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in3 = *(pSrc + 2);
 253              		.loc 1 141 7 is_stmt 1 view .LVU92
 254              		.loc 1 141 11 is_stmt 0 view .LVU93
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccKFaXGC.s 			page 9


 255 00e0 8268     		ldr	r2, [r0, #8]
 256              	.LVL41:
 142:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in4 = *(pSrc + 3);
 257              		.loc 1 142 7 is_stmt 1 view .LVU94
 258              		.loc 1 142 11 is_stmt 0 view .LVU95
 259 00e2 D0F80C90 		ldr	r9, [r0, #12]
 260              	.LVL42:
 143:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 144:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       /* multiply input with scaler value */
 145:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in1 = ((q63_t) in1 * scaleFract) >> 32;
 261              		.loc 1 145 7 is_stmt 1 view .LVU96
 262              		.loc 1 145 14 is_stmt 0 view .LVU97
 263 00e6 4FEAE67B 		asr	fp, r6, #31
 264              		.loc 1 145 26 view .LVU98
 265 00ea 4FEAE17A 		asr	r10, r1, #31
 266 00ee 06FB0AFE 		mul	lr, r6, r10
 267 00f2 01FB0BEE 		mla	lr, r1, fp, lr
 268 00f6 A6FB016B 		umull	r6, fp, r6, r1
 269              	.LVL43:
 270              		.loc 1 145 26 view .LVU99
 271 00fa 0EEB0B06 		add	r6, lr, fp
 272              	.LVL44:
 146:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in2 = ((q63_t) in2 * scaleFract) >> 32;
 273              		.loc 1 146 7 is_stmt 1 view .LVU100
 274              		.loc 1 146 14 is_stmt 0 view .LVU101
 275 00fe 4FEAE57E 		asr	lr, r5, #31
 276              		.loc 1 146 26 view .LVU102
 277 0102 01FB0EFE 		mul	lr, r1, lr
 278 0106 05FB0AEE 		mla	lr, r5, r10, lr
 279 010a A1FB055B 		umull	r5, fp, r1, r5
 280              	.LVL45:
 281              		.loc 1 146 26 view .LVU103
 282 010e DE44     		add	lr, lr, fp
 283              	.LVL46:
 147:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in3 = ((q63_t) in3 * scaleFract) >> 32;
 284              		.loc 1 147 7 is_stmt 1 view .LVU104
 285              		.loc 1 147 14 is_stmt 0 view .LVU105
 286 0110 D517     		asrs	r5, r2, #31
 287              		.loc 1 147 26 view .LVU106
 288 0112 01FB05F5 		mul	r5, r1, r5
 289 0116 02FB0A55 		mla	r5, r2, r10, r5
 290 011a A1FB022B 		umull	r2, fp, r1, r2
 291              	.LVL47:
 292              		.loc 1 147 26 view .LVU107
 293 011e 5D44     		add	r5, r5, fp
 294              	.LVL48:
 148:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       in4 = ((q63_t) in4 * scaleFract) >> 32;
 295              		.loc 1 148 7 is_stmt 1 view .LVU108
 296              		.loc 1 148 14 is_stmt 0 view .LVU109
 297 0120 4FEAE972 		asr	r2, r9, #31
 298              		.loc 1 148 26 view .LVU110
 299 0124 01FB02F2 		mul	r2, r1, r2
 300 0128 09FB0A22 		mla	r2, r9, r10, r2
 301 012c A1FB099A 		umull	r9, r10, r1, r9
 302              	.LVL49:
 303              		.loc 1 148 26 view .LVU111
 304 0130 5244     		add	r2, r2, r10
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccKFaXGC.s 			page 10


 305              	.LVL50:
 149:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 150:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       /* apply shifting */
 151:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       out1 = in1 >> -kShift;
 306              		.loc 1 151 7 is_stmt 1 view .LVU112
 307              		.loc 1 151 21 is_stmt 0 view .LVU113
 308 0132 CCF10009 		rsb	r9, ip, #0
 309              		.loc 1 151 12 view .LVU114
 310 0136 46FA09F6 		asr	r6, r6, r9
 311              	.LVL51:
 152:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       out2 = in2 >> -kShift;
 312              		.loc 1 152 7 is_stmt 1 view .LVU115
 313              		.loc 1 152 12 is_stmt 0 view .LVU116
 314 013a 4EFA09FE 		asr	lr, lr, r9
 315              	.LVL52:
 153:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 154:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       out3 = in3 >> -kShift;
 316              		.loc 1 154 7 is_stmt 1 view .LVU117
 317              		.loc 1 154 12 is_stmt 0 view .LVU118
 318 013e 45FA09F5 		asr	r5, r5, r9
 319              	.LVL53:
 155:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       out4 = in4 >> -kShift;
 320              		.loc 1 155 7 is_stmt 1 view .LVU119
 321              		.loc 1 155 12 is_stmt 0 view .LVU120
 322 0142 42FA09F2 		asr	r2, r2, r9
 323              	.LVL54:
 156:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 157:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       /* Store result destination */
 158:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       *pDst = out1;
 324              		.loc 1 158 7 is_stmt 1 view .LVU121
 325              		.loc 1 158 13 is_stmt 0 view .LVU122
 326 0146 1E60     		str	r6, [r3]
 327              	.LVL55:
 159:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       *(pDst + 1) = out2;
 328              		.loc 1 159 7 is_stmt 1 view .LVU123
 329              		.loc 1 159 19 is_stmt 0 view .LVU124
 330 0148 C3F804E0 		str	lr, [r3, #4]
 160:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 161:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       *(pDst + 2) = out3;
 331              		.loc 1 161 7 is_stmt 1 view .LVU125
 332              		.loc 1 161 19 is_stmt 0 view .LVU126
 333 014c 9D60     		str	r5, [r3, #8]
 162:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       *(pDst + 3) = out4;
 334              		.loc 1 162 7 is_stmt 1 view .LVU127
 335              		.loc 1 162 19 is_stmt 0 view .LVU128
 336 014e DA60     		str	r2, [r3, #12]
 163:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 164:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       /* Update pointers to process next sampels */
 165:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       pSrc += 4U;
 337              		.loc 1 165 7 is_stmt 1 view .LVU129
 338              		.loc 1 165 12 is_stmt 0 view .LVU130
 339 0150 1030     		adds	r0, r0, #16
 340              	.LVL56:
 166:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       pDst += 4U;
 341              		.loc 1 166 7 is_stmt 1 view .LVU131
 342              		.loc 1 166 12 is_stmt 0 view .LVU132
 343 0152 1033     		adds	r3, r3, #16
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccKFaXGC.s 			page 11


 344              	.LVL57:
 167:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 168:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       /* Decrement the loop counter */
 169:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****       blkCnt--;
 345              		.loc 1 169 7 is_stmt 1 view .LVU133
 346              		.loc 1 169 13 is_stmt 0 view .LVU134
 347 0154 013F     		subs	r7, r7, #1
 348              	.LVL58:
 349              	.L3:
 136:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****     {
 350              		.loc 1 136 19 is_stmt 1 view .LVU135
 351 0156 002F     		cmp	r7, #0
 352 0158 C0D1     		bne	.L10
 353              	.L9:
 170:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****     }
 171:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   }
 172:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   /* If the blockSize is not a multiple of 4, compute any remaining output samples here.
 173:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****    ** No loop unrolling is used. */
 174:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   blkCnt = blockSize % 0x4U;
 354              		.loc 1 174 3 view .LVU136
 355              		.loc 1 174 10 is_stmt 0 view .LVU137
 356 015a 04F00304 		and	r4, r4, #3
 357              	.LVL59:
 175:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 176:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** #else
 177:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 178:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   /* Run the below code for Cortex-M0 */
 179:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 180:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   /* Initialize blkCnt with number of samples */
 181:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   blkCnt = blockSize;
 182:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 183:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** #endif /* #if defined (ARM_MATH_DSP) */
 184:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 185:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   if (sign == 0)
 358              		.loc 1 185 3 is_stmt 1 view .LVU138
 359              		.loc 1 185 6 is_stmt 0 view .LVU139
 360 015e B8F1000F 		cmp	r8, #0
 361 0162 03D0     		beq	.L11
 362              		.loc 1 185 6 view .LVU140
 363 0164 2AE0     		b	.L12
 364              	.LVL60:
 365              	.L13:
 186:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   {
 187:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 	  while (blkCnt > 0U)
 188:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 	  {
 189:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 		/* C = A * scale */
 190:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 		/* Scale the input and then store the result in the destination buffer. */
 191:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 		in = *pSrc++;
 192:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 		in = ((q63_t) in * scaleFract) >> 32;
 193:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 194:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 		out = in << kShift;
 195:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 196:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 		if (in != (out >> kShift))
 197:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 			out = 0x7FFFFFFF ^ (in >> 31);
 198:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 199:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 		*pDst++ = out;
 366              		.loc 1 199 3 is_stmt 1 view .LVU141
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccKFaXGC.s 			page 12


 367              		.loc 1 199 11 is_stmt 0 view .LVU142
 368 0166 43F8045B 		str	r5, [r3], #4
 369              	.LVL61:
 200:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 201:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 		/* Decrement the loop counter */
 202:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 		blkCnt--;
 370              		.loc 1 202 3 is_stmt 1 view .LVU143
 371              		.loc 1 202 9 is_stmt 0 view .LVU144
 372 016a 013C     		subs	r4, r4, #1
 373              	.LVL62:
 374              	.L11:
 187:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 	  {
 375              		.loc 1 187 18 is_stmt 1 view .LVU145
 376 016c 44B3     		cbz	r4, .L1
 191:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 		in = ((q63_t) in * scaleFract) >> 32;
 377              		.loc 1 191 3 view .LVU146
 378              	.LVL63:
 191:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 		in = ((q63_t) in * scaleFract) >> 32;
 379              		.loc 1 191 6 is_stmt 0 view .LVU147
 380 016e 50F8045B 		ldr	r5, [r0], #4
 381              	.LVL64:
 192:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 382              		.loc 1 192 3 is_stmt 1 view .LVU148
 192:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 383              		.loc 1 192 9 is_stmt 0 view .LVU149
 384 0172 EA17     		asrs	r2, r5, #31
 192:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 385              		.loc 1 192 20 view .LVU150
 386 0174 CE17     		asrs	r6, r1, #31
 387 0176 01FB02F2 		mul	r2, r1, r2
 388 017a 05FB0622 		mla	r2, r5, r6, r2
 389 017e A1FB0556 		umull	r5, r6, r1, r5
 390              	.LVL65:
 192:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 391              		.loc 1 192 20 view .LVU151
 392 0182 3244     		add	r2, r2, r6
 393              	.LVL66:
 194:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 394              		.loc 1 194 3 is_stmt 1 view .LVU152
 194:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 395              		.loc 1 194 7 is_stmt 0 view .LVU153
 396 0184 02FA0CF5 		lsl	r5, r2, ip
 397              	.LVL67:
 196:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 			out = 0x7FFFFFFF ^ (in >> 31);
 398              		.loc 1 196 3 is_stmt 1 view .LVU154
 196:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 			out = 0x7FFFFFFF ^ (in >> 31);
 399              		.loc 1 196 18 is_stmt 0 view .LVU155
 400 0188 45FA0CF6 		asr	r6, r5, ip
 196:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 			out = 0x7FFFFFFF ^ (in >> 31);
 401              		.loc 1 196 6 view .LVU156
 402 018c 9642     		cmp	r6, r2
 403 018e EAD0     		beq	.L13
 197:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 404              		.loc 1 197 4 is_stmt 1 view .LVU157
 197:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 405              		.loc 1 197 8 is_stmt 0 view .LVU158
 406 0190 6FF00045 		mvn	r5, #-2147483648
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccKFaXGC.s 			page 13


 407              	.LVL68:
 197:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 408              		.loc 1 197 8 view .LVU159
 409 0194 85EAE275 		eor	r5, r5, r2, asr #31
 410              	.LVL69:
 197:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 411              		.loc 1 197 8 view .LVU160
 412 0198 E5E7     		b	.L13
 413              	.LVL70:
 414              	.L16:
 203:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 	  }
 204:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   }
 205:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   else
 206:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   {
 207:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 	  while (blkCnt > 0U)
 208:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 	  {
 209:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 		/* C = A * scale */
 210:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 		/* Scale the input and then store the result in the destination buffer. */
 211:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 		in = *pSrc++;
 415              		.loc 1 211 3 is_stmt 1 view .LVU161
 416              		.loc 1 211 6 is_stmt 0 view .LVU162
 417 019a 50F8045B 		ldr	r5, [r0], #4
 418              	.LVL71:
 212:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 		in = ((q63_t) in * scaleFract) >> 32;
 419              		.loc 1 212 3 is_stmt 1 view .LVU163
 420              		.loc 1 212 9 is_stmt 0 view .LVU164
 421 019e EA17     		asrs	r2, r5, #31
 422              		.loc 1 212 20 view .LVU165
 423 01a0 CE17     		asrs	r6, r1, #31
 424 01a2 01FB02F2 		mul	r2, r1, r2
 425 01a6 05FB0622 		mla	r2, r5, r6, r2
 426 01aa A1FB0556 		umull	r5, r6, r1, r5
 427              	.LVL72:
 428              		.loc 1 212 20 view .LVU166
 429 01ae 3244     		add	r2, r2, r6
 430              	.LVL73:
 213:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 214:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 		out = in >> -kShift;
 431              		.loc 1 214 3 is_stmt 1 view .LVU167
 432              		.loc 1 214 15 is_stmt 0 view .LVU168
 433 01b0 CCF10005 		rsb	r5, ip, #0
 434              		.loc 1 214 7 view .LVU169
 435 01b4 2A41     		asrs	r2, r2, r5
 436              	.LVL74:
 215:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 216:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 		*pDst++ = out;
 437              		.loc 1 216 3 is_stmt 1 view .LVU170
 438              		.loc 1 216 11 is_stmt 0 view .LVU171
 439 01b6 43F8042B 		str	r2, [r3], #4
 440              	.LVL75:
 217:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 218:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 		/* Decrement the loop counter */
 219:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 		blkCnt--;
 441              		.loc 1 219 3 is_stmt 1 view .LVU172
 442              		.loc 1 219 9 is_stmt 0 view .LVU173
 443 01ba 013C     		subs	r4, r4, #1
 444              	.LVL76:
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccKFaXGC.s 			page 14


 445              	.L12:
 207:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 	  {
 446              		.loc 1 207 18 is_stmt 1 view .LVU174
 447 01bc 002C     		cmp	r4, #0
 448 01be ECD1     		bne	.L16
 449              	.L1:
 220:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 	  }
 221:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** 
 222:DSP/Source/BasicMathFunctions/arm_scale_q31.c ****   }
 223:DSP/Source/BasicMathFunctions/arm_scale_q31.c **** }
 450              		.loc 1 223 1 is_stmt 0 view .LVU175
 451 01c0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 452              		.loc 1 223 1 view .LVU176
 453              		.cfi_endproc
 454              	.LFE139:
 456              		.text
 457              	.Letext0:
 458              		.file 2 "/Users/luban/.local/xPacks/arm-none-eabi-gcc/xpack-arm-none-eabi-gcc-13.2.1-1.1/arm-none-
 459              		.file 3 "/Users/luban/.local/xPacks/arm-none-eabi-gcc/xpack-arm-none-eabi-gcc-13.2.1-1.1/arm-none-
 460              		.file 4 "DSP/Inc/arm_math.h"
ARM GAS  /var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccKFaXGC.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 arm_scale_q31.c
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccKFaXGC.s:21     .text.arm_scale_q31:00000000 $t
/var/folders/ck/g3dcd5x55xs4107jgdl0snvr0000gn/T//ccKFaXGC.s:27     .text.arm_scale_q31:00000000 arm_scale_q31

NO UNDEFINED SYMBOLS
